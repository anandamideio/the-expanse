{"version":3,"sources":["../../scripts/header.js","../../node_modules/browser-pack/_prelude.js","../actions/drag.ts","../actions/drop/DropEvent.ts","../actions/drop/index.ts","../actions/gesture.ts","../actions/index.ts","../actions/resize.ts","../auto-scroll/index.ts","../auto-start/InteractableMethods.ts","../auto-start/base.ts","../auto-start/dragAxis.ts","../auto-start/hold.ts","../auto-start/index.ts","../core/BaseEvent.ts","../core/Eventable.ts","../core/InteractEvent.ts","../core/Interactable.ts","../core/InteractableSet.ts","../core/Interaction.ts","../core/PointerInfo.ts","../core/defaultOptions.ts","../core/interactablePreventDefault.ts","../core/interactionFinder.ts","../core/interactions.ts","../core/scope.ts","../dev-tools/index.ts","../inertia/index.ts","../interact/index.ts","../interact/interact.ts","index.ts","../modifiers/base.ts","../modifiers/index.ts","../modifiers/restrict/edges.ts","../modifiers/restrict/pointer.ts","../modifiers/restrict/size.ts","../modifiers/snap/edges.ts","../modifiers/snap/pointer.ts","../modifiers/snap/size.ts","../pointer-events/PointerEvent.ts","../pointer-events/base.ts","../pointer-events/holdRepeat.ts","../pointer-events/index.ts","../pointer-events/interactableTargets.ts","../reflow/index.ts","../utils/Signals.ts","../utils/arr.ts","../utils/browser.ts","../utils/clone.ts","../utils/domObjects.ts","../utils/domUtils.ts","../utils/events.ts","../utils/extend.ts","../utils/getOriginXY.ts","../utils/hypot.ts","../utils/index.ts","../utils/is.ts","../utils/isWindow.ts","../utils/normalizeListeners.ts","../utils/pointerExtend.ts","../utils/pointerUtils.ts","../utils/raf.ts","../utils/rect.ts","../utils/snappers/grid.ts","../utils/snappers/index.ts","../utils/window.ts","../node_modules/roughjs/dist/rough-async.umd.js","js/cartographer.mjs"],"names":["tiles","document","querySelectorAll","canvas","rough","getElementById","workerURL","cell","Nxxx","xExx","xxSx","xxxW","NExx","NxxW","xESx","xxSW","NESx","NExW","NxSW","xESW","NxSx","xExW","NESW","xxxx","mapTemplate","mapSize","borderWidth","portSize","cellWidth","length","position","x","y","rectangle","drawCell","xLocation","yLocation","xCoordinateLow","xCoordinateHigh","yCoordinateLow","yCoordinateHigh","lines","p1","p2","p3","p4","newTile","createElement","tileContent","createTextNode","parentPort","appendChild","setAttribute","append","forEach","wall","index","line","row","yIter","xIter","draggable","listeners","start","event","console","log","type","target","move","dx","dy","style","transform","cursorChecker","action","interatable","element","interacting","axis"],"mappings":"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AA,GAAA,KAAA,KAAA,GAAA,KAAA,KAAA,KAAA,IAAA,EAAA,IAAA,EAAA,MAAA,KAAA,KAAA,KAAA,IAAA,EAAA,IAAA,EAAA,OAAA,KAAA,GAAA,KAAA,IAAA,KAAA,GAAA,KAAA,KAAA,KAAA,KAAA,GAAA,KAAA,IAAA,KAAA,GAAA,EAAA,KAAA,GAAA,KAAA,KAAA,IAAA,KAAA,KAAA,KAAA,GAAA,KAAA,MAAA,OAAA,EAAA,IAAA,KAAA,KAAA,KAAA,GAAA,EAAA,MAAA,MAAA,KAAA,IAAA,EAAA,GAAA,OAAA,EAAA,IAAA,KAAA,KAAA,KAAA,GAAA,EAAA,MAAA,OAAA,IAAA,OAAA,WAAA,KAAA,GAAA,EAAA,IAAA,KAAA,GAAA,EAAA,KAAA,GAAA,KAAA,EAAA,IAAA,KAAA,KAAA,KAAA,GAAA,EAAA,MAAA,OAAA,KAAA,IAAA,KAAA,KAAA,KAAA,GAAA,KAAA,MAAA,MAAA,KAAA,IAAA,GAAA,OAAA,KAAA,IAAA,KAAA,KAAA,KAAA,GAAA,KAAA,MAAA,OAAA,IAAA,EAAA,IAAA,IAAA,KAAA,KAAA,KAAA,IAAA,EAAA,IAAA,EAAA,MAAA,KAAA,KAAA,KAAA,IAAA,EAAA,IAAA,EAAA,MAAA,KAAA,GAAA,KAAA,IAAA,KAAA,GAAA,KAAA,KAAA,GAAA,KAAA,KAAA,KAAA,IAAA,EAAA,IAAA,EAAA,MAAA,KAAA,KAAA,KAAA,IAAA,EAAA,IAAA,EAAA,OAAA,KAAA,GAAA,KAAA,IAAA,KAAA,GAAA,KAAA,KAAA,KAAA,KAAA,IAAA,EAAA,IAAA,EAAA,GAAA,KAAA,GAAA,EAAA,KAAA,GAAA,KAAA,KAAA,IAAA,KAAA,KAAA,KAAA,GAAA,KAAA,MAAA,OAAA,EAAA,IAAA,KAAA,KAAA,KAAA,GAAA,EAAA,MAAA,QAAA,SAAA,EAAA,EAAA,GAAA,MAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GA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","file":"cartographer.9980ce4d.js","sourceRoot":"..\\src","sourcesContent":["/**\n * interact.js 1.4.0-rc.13\n *\n * Copyright (c) 2012-2019 Taye Adeyemi <dev@taye.me>\n * Released under the MIT License.\n * https://raw.github.com/taye/interact.js/master/LICENSE\n */\n","(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import { ActionName, Scope } from '@interactjs/core/scope'\nimport * as arr from '@interactjs/utils/arr'\nimport * as is from '@interactjs/utils/is'\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    draggable: DraggableMethod\n  }\n}\n\ndeclare module '@interactjs/core/defaultOptions' {\n  interface ActionDefaults {\n    drag: Interact.DraggableOptions\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface Actions {\n    [ActionName.Drag]?: typeof drag\n  }\n\n  // eslint-disable-next-line no-shadow\n  enum ActionName {\n    Drag = 'drag'\n  }\n}\n\n(ActionName as any).Drag = 'drag'\n\nexport type DragEvent = Interact.InteractEvent<ActionName.Drag>\n\nexport type DraggableMethod = Interact.ActionMethod<Interact.DraggableOptions>\n\nfunction install (scope: Scope) {\n  const {\n    actions,\n    Interactable,\n    interactions,\n    defaults,\n  } = scope\n\n  interactions.signals.on('before-action-move', beforeMove)\n  interactions.signals.on('action-resume', beforeMove)\n\n  // dragmove\n  interactions.signals.on('action-move', move)\n\n  Interactable.prototype.draggable = drag.draggable\n\n  actions[ActionName.Drag] = drag\n  actions.names.push(ActionName.Drag)\n  arr.merge(actions.eventTypes, [\n    'dragstart',\n    'dragmove',\n    'draginertiastart',\n    'dragresume',\n    'dragend',\n  ])\n  actions.methodDict.drag = 'draggable'\n\n  defaults.actions.drag = drag.defaults\n}\n\nfunction beforeMove ({ interaction }) {\n  if (interaction.prepared.name !== 'drag') { return }\n\n  const axis = interaction.prepared.axis\n\n  if (axis === 'x') {\n    interaction.coords.cur.page.y   = interaction.coords.start.page.y\n    interaction.coords.cur.client.y = interaction.coords.start.client.y\n\n    interaction.coords.velocity.client.y = 0\n    interaction.coords.velocity.page.y   = 0\n  }\n  else if (axis === 'y') {\n    interaction.coords.cur.page.x   = interaction.coords.start.page.x\n    interaction.coords.cur.client.x = interaction.coords.start.client.x\n\n    interaction.coords.velocity.client.x = 0\n    interaction.coords.velocity.page.x   = 0\n  }\n}\n\nfunction move ({ iEvent, interaction }) {\n  if (interaction.prepared.name !== 'drag') { return }\n\n  const axis = interaction.prepared.axis\n\n  if (axis === 'x' || axis === 'y') {\n    const opposite = axis === 'x' ? 'y' : 'x'\n\n    iEvent.page[opposite]   = interaction.coords.start.page[opposite]\n    iEvent.client[opposite] = interaction.coords.start.client[opposite]\n    iEvent.delta[opposite] = 0\n  }\n}\n\n/**\n * ```js\n * interact(element).draggable({\n *     onstart: function (event) {},\n *     onmove : function (event) {},\n *     onend  : function (event) {},\n *\n *     // the axis in which the first movement must be\n *     // for the drag sequence to start\n *     // 'xy' by default - any direction\n *     startAxis: 'x' || 'y' || 'xy',\n *\n *     // 'xy' by default - don't restrict to one axis (move in any direction)\n *     // 'x' or 'y' to restrict movement to either axis\n *     // 'start' to restrict movement to the axis the drag started in\n *     lockAxis: 'x' || 'y' || 'xy' || 'start',\n *\n *     // max number of drags that can happen concurrently\n *     // with elements of this Interactable. Infinity by default\n *     max: Infinity,\n *\n *     // max number of drags that can target the same element+Interactable\n *     // 1 by default\n *     maxPerElement: 2\n * })\n *\n * var isDraggable = interact('element').draggable(); // true\n * ```\n *\n * Get or set whether drag actions can be performed on the target\n *\n * @alias Interactable.prototype.draggable\n *\n * @param {boolean | object} [options] true/false or An object with event\n * listeners to be fired on drag events (object makes the Interactable\n * draggable)\n * @return {boolean | Interactable} boolean indicating if this can be the\n * target of drag events, or this Interctable\n */\nconst draggable: DraggableMethod = function draggable (this: Interact.Interactable, options?: Interact.DraggableOptions | boolean): any {\n  if (is.object(options)) {\n    this.options.drag.enabled = options.enabled !== false\n    this.setPerAction('drag', options)\n    this.setOnEvents('drag', options)\n\n    if (/^(xy|x|y|start)$/.test(options.lockAxis)) {\n      this.options.drag.lockAxis = options.lockAxis\n    }\n    if (/^(xy|x|y)$/.test(options.startAxis)) {\n      this.options.drag.startAxis = options.startAxis\n    }\n\n    return this\n  }\n\n  if (is.bool(options)) {\n    this.options.drag.enabled = options\n\n    return this\n  }\n\n  return this.options.drag\n}\n\nconst drag: Interact.Plugin = {\n  id: 'actions/drag',\n  install,\n  draggable,\n  beforeMove,\n  move,\n  defaults: {\n    startAxis : 'xy',\n    lockAxis  : 'xy',\n  } as Interact.DropzoneOptions,\n\n  checker (_pointer, _event, interactable) {\n    const dragOptions = interactable.options.drag\n\n    return dragOptions.enabled\n      ? {\n        name: 'drag',\n        axis: (dragOptions.lockAxis === 'start'\n          ? dragOptions.startAxis\n          : dragOptions.lockAxis),\n      }\n      : null\n  },\n\n  getCursor () {\n    return 'move'\n  },\n}\n\nexport default drag\n","import BaseEvent from '@interactjs/core/BaseEvent'\nimport Interactable from '@interactjs/core/Interactable'\nimport InteractEvent from '@interactjs/core/InteractEvent'\nimport Interaction from '@interactjs/core/Interaction'\nimport { ActionName } from '@interactjs/core/scope'\nimport * as arr from '@interactjs/utils/arr'\n\nclass DropEvent extends BaseEvent {\n  target: Element\n  dropzone: Interactable\n  dragEvent: InteractEvent<ActionName.Drag>\n  relatedTarget: Element\n  draggable: Interactable\n  timeStamp: number\n  propagationStopped = false\n  immediatePropagationStopped = false\n\n  /**\n   * Class of events fired on dropzones during drags with acceptable targets.\n   */\n  constructor (dropState: Interaction['dropState'], dragEvent: InteractEvent, type: string) {\n    super(dragEvent._interaction)\n\n    const { element, dropzone } = type === 'dragleave'\n      ? dropState.prev\n      : dropState.cur\n\n    this.type          = type\n    this.target        = element\n    this.currentTarget = element\n    this.dropzone      = dropzone\n    this.dragEvent     = dragEvent\n    this.relatedTarget = dragEvent.target\n    this.draggable     = dragEvent.interactable\n    this.timeStamp     = dragEvent.timeStamp\n  }\n\n  /**\n   * If this is a `dropactivate` event, the dropzone element will be\n   * deactivated.\n   *\n   * If this is a `dragmove` or `dragenter`, a `dragleave` will be fired on the\n   * dropzone element and more.\n   */\n  reject () {\n    const { dropState } = this._interaction\n\n    if (\n      (this.type !== 'dropactivate') && (\n        !this.dropzone ||\n        dropState.cur.dropzone !== this.dropzone ||\n        dropState.cur.element !== this.target)) {\n      return\n    }\n\n    dropState.prev.dropzone = this.dropzone\n    dropState.prev.element = this.target\n\n    dropState.rejected = true\n    dropState.events.enter = null\n\n    this.stopImmediatePropagation()\n\n    if (this.type === 'dropactivate') {\n      const activeDrops = dropState.activeDrops\n      const index = arr.findIndex(activeDrops, ({ dropzone, element }) =>\n        dropzone === this.dropzone && element === this.target)\n\n      dropState.activeDrops = [\n        ...activeDrops.slice(0, index),\n        ...activeDrops.slice(index + 1),\n      ]\n\n      const deactivateEvent = new DropEvent(dropState, this.dragEvent, 'dropdeactivate')\n\n      deactivateEvent.dropzone = this.dropzone\n      deactivateEvent.target = this.target\n\n      this.dropzone.fire(deactivateEvent)\n    }\n    else {\n      this.dropzone.fire(new DropEvent(dropState, this.dragEvent, 'dragleave'))\n    }\n  }\n\n  preventDefault () {}\n\n  stopPropagation () {\n    this.propagationStopped = true\n  }\n\n  stopImmediatePropagation () {\n    this.immediatePropagationStopped = this.propagationStopped = true\n  }\n}\n\nexport default DropEvent\n","import Interactable from '@interactjs/core/Interactable'\nimport InteractEvent from '@interactjs/core/InteractEvent'\nimport { Scope } from '@interactjs/core/scope'\nimport * as utils from '@interactjs/utils'\nimport drag from '../drag'\nimport DropEvent from './DropEvent'\n\nexport interface DropzoneMethod {\n  (options: Interact.DropzoneOptions | boolean): Interact.Interactable\n  (): Interact.DropzoneOptions\n}\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    dropzone: DropzoneMethod\n    dropCheck: (\n      dragEvent: InteractEvent,\n      event: Interact.PointerEventType,\n      draggable: Interactable,\n      draggableElement: Element,\n      dropElemen: Element,\n      rect: any\n    ) => boolean\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    dropState?: {\n      cur: {\n        dropzone: Interactable,   // the dropzone a drag target might be dropped into\n        element: Element,         // the element at the time of checking\n      },\n      prev: {\n        dropzone: Interactable,   // the dropzone that was recently dragged away from\n        element: Element,         // the element at the time of checking\n      },\n      rejected: boolean,          // wheather the potential drop was rejected from a listener\n      events: any,                // the drop events related to the current drag event\n      activeDrops: Array<{\n        dropzone: Interactable\n        element: Element\n        rect: Interact.Rect\n      }>,\n    }\n  }\n}\n\ndeclare module '@interactjs/core/defaultOptions' {\n  interface ActionDefaults {\n    drop: Interact.DropzoneOptions\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    dynamicDrop?: boolean\n  }\n}\n\ndeclare module '@interactjs/interact/interact' {\n  interface InteractStatic {\n    dynamicDrop: (newValue?: boolean) => boolean | Interact.interact\n  }\n}\n\nfunction install (scope: Scope) {\n  const {\n    actions,\n    /** @lends module:interact */\n    interact,\n    /** @lends Interactable */\n    Interactable, // eslint-disable-line no-shadow\n    interactions,\n    defaults,\n  } = scope\n\n  scope.usePlugin(drag)\n\n  interactions.signals.on('before-action-start', ({ interaction }) => {\n    if (interaction.prepared.name !== 'drag') { return }\n\n    interaction.dropState = {\n      cur: {\n        dropzone: null,\n        element: null,\n      },\n      prev: {\n        dropzone: null,\n        element: null,\n      },\n      rejected: null,\n      events: null,\n      activeDrops: null,\n    }\n  })\n\n  interactions.signals.on('after-action-start', ({ interaction, event, iEvent: dragEvent }) => {\n    if (interaction.prepared.name !== 'drag') { return }\n\n    const { dropState } = interaction\n\n    // reset active dropzones\n    dropState.activeDrops = null\n    dropState.events = null\n    dropState.activeDrops = getActiveDrops(scope, interaction.element)\n    dropState.events = getDropEvents(interaction, event, dragEvent)\n\n    if (dropState.events.activate) {\n      fireActivationEvents(dropState.activeDrops, dropState.events.activate)\n    }\n  })\n\n  // FIXME proper signal types\n  interactions.signals.on('action-move', (arg) => onEventCreated(arg as any, scope))\n  interactions.signals.on('action-end', (arg) => onEventCreated(arg as any, scope))\n\n  interactions.signals.on('after-action-move', ({ interaction }) => {\n    if (interaction.prepared.name !== 'drag') { return }\n\n    fireDropEvents(interaction, interaction.dropState.events)\n    interaction.dropState.events = {}\n  })\n\n  interactions.signals.on('after-action-end', ({ interaction }) => {\n    if (interaction.prepared.name !== 'drag') { return }\n\n    fireDropEvents(interaction, interaction.dropState.events)\n  })\n\n  interactions.signals.on('stop', ({ interaction }) => {\n    if (interaction.prepared.name !== 'drag') { return }\n\n    const { dropState } = interaction\n\n    dropState.activeDrops = null\n    dropState.events = null\n    dropState.cur.dropzone = null\n    dropState.cur.element = null\n    dropState.prev.dropzone = null\n    dropState.prev.element = null\n    dropState.rejected = false\n  })\n\n  /**\n   *\n   * ```js\n   * interact('.drop').dropzone({\n   *   accept: '.can-drop' || document.getElementById('single-drop'),\n   *   overlap: 'pointer' || 'center' || zeroToOne\n   * }\n   * ```\n   *\n   * Returns or sets whether draggables can be dropped onto this target to\n   * trigger drop events\n   *\n   * Dropzones can receive the following events:\n   *  - `dropactivate` and `dropdeactivate` when an acceptable drag starts and ends\n   *  - `dragenter` and `dragleave` when a draggable enters and leaves the dropzone\n   *  - `dragmove` when a draggable that has entered the dropzone is moved\n   *  - `drop` when a draggable is dropped into this dropzone\n   *\n   * Use the `accept` option to allow only elements that match the given CSS\n   * selector or element. The value can be:\n   *\n   *  - **an Element** - only that element can be dropped into this dropzone.\n   *  - **a string**, - the element being dragged must match it as a CSS selector.\n   *  - **`null`** - accept options is cleared - it accepts any element.\n   *\n   * Use the `overlap` option to set how drops are checked for. The allowed\n   * values are:\n   *\n   *   - `'pointer'`, the pointer must be over the dropzone (default)\n   *   - `'center'`, the draggable element's center must be over the dropzone\n   *   - a number from 0-1 which is the `(intersection area) / (draggable area)`.\n   *   e.g. `0.5` for drop to happen when half of the area of the draggable is\n   *   over the dropzone\n   *\n   * Use the `checker` option to specify a function to check if a dragged element\n   * is over this Interactable.\n   *\n   * @param {boolean | object | null} [options] The new options to be set.\n   * @return {boolean | Interactable} The current setting or this Interactable\n   */\n  Interactable.prototype.dropzone = function (this: Interact.Interactable, options?: Interact.DropzoneOptions | boolean) {\n    return dropzoneMethod(this, options)\n  }\n\n  /**\n   * ```js\n   * interact(target)\n   * .dropChecker(function(dragEvent,         // related dragmove or dragend event\n   *                       event,             // TouchEvent/PointerEvent/MouseEvent\n   *                       dropped,           // bool result of the default checker\n   *                       dropzone,          // dropzone Interactable\n   *                       dropElement,       // dropzone elemnt\n   *                       draggable,         // draggable Interactable\n   *                       draggableElement) {// draggable element\n   *\n   *   return dropped && event.target.hasAttribute('allow-drop')\n   * }\n   * ```\n   */\n  Interactable.prototype.dropCheck = function (this: Interact.Interactable, dragEvent, event, draggable, draggableElement, dropElement, rect) {\n    return dropCheckMethod(this, dragEvent, event, draggable, draggableElement, dropElement, rect)\n  }\n\n  /**\n   * Returns or sets whether the dimensions of dropzone elements are calculated\n   * on every dragmove or only on dragstart for the default dropChecker\n   *\n   * @param {boolean} [newValue] True to check on each move. False to check only\n   * before start\n   * @return {boolean | interact} The current setting or interact\n   */\n  interact.dynamicDrop = function (newValue?: boolean) {\n    if (utils.is.bool(newValue)) {\n      // if (dragging && scope.dynamicDrop !== newValue && !newValue) {\n      //  calcRects(dropzones)\n      // }\n\n      scope.dynamicDrop = newValue\n\n      return interact\n    }\n    return scope.dynamicDrop\n  }\n\n  utils.arr.merge(actions.eventTypes, [\n    'dragenter',\n    'dragleave',\n    'dropactivate',\n    'dropdeactivate',\n    'dropmove',\n    'drop',\n  ])\n  actions.methodDict.drop = 'dropzone'\n\n  scope.dynamicDrop = false\n\n  defaults.actions.drop = drop.defaults\n}\n\nfunction collectDrops ({ interactables }, draggableElement) {\n  const drops = []\n\n  // collect all dropzones and their elements which qualify for a drop\n  for (const dropzone of interactables.list) {\n    if (!dropzone.options.drop.enabled) { continue }\n\n    const accept = dropzone.options.drop.accept\n\n    // test the draggable draggableElement against the dropzone's accept setting\n    if ((utils.is.element(accept) && accept !== draggableElement) ||\n        (utils.is.string(accept) &&\n        !utils.dom.matchesSelector(draggableElement, accept)) ||\n        (utils.is.func(accept) && !accept({ dropzone, draggableElement }))) {\n      continue\n    }\n\n    // query for new elements if necessary\n    const dropElements = utils.is.string(dropzone.target)\n      ? dropzone._context.querySelectorAll(dropzone.target)\n      : utils.is.array(dropzone.target) ? dropzone.target : [dropzone.target]\n\n    for (const dropzoneElement of dropElements) {\n      if (dropzoneElement !== draggableElement) {\n        drops.push({\n          dropzone,\n          element: dropzoneElement,\n        })\n      }\n    }\n  }\n\n  return drops\n}\n\nfunction fireActivationEvents (activeDrops, event) {\n  // loop through all active dropzones and trigger event\n  for (const { dropzone, element } of activeDrops) {\n    event.dropzone = dropzone\n\n    // set current element as event target\n    event.target = element\n    dropzone.fire(event)\n    event.propagationStopped = event.immediatePropagationStopped = false\n  }\n}\n\n// return a new array of possible drops. getActiveDrops should always be\n// called when a drag has just started or a drag event happens while\n// dynamicDrop is true\nfunction getActiveDrops (scope: Scope, dragElement: Element) {\n  // get dropzones and their elements that could receive the draggable\n  const activeDrops = collectDrops(scope, dragElement)\n\n  for (const activeDrop of activeDrops) {\n    activeDrop.rect = activeDrop.dropzone.getRect(activeDrop.element)\n  }\n\n  return activeDrops\n}\n\nfunction getDrop ({ dropState, interactable: draggable, element: dragElement }: Partial<Interact.Interaction>, dragEvent, pointerEvent) {\n  const validDrops = []\n\n  // collect all dropzones and their elements which qualify for a drop\n  for (const { dropzone, element: dropzoneElement, rect } of dropState.activeDrops) {\n    validDrops.push(dropzone.dropCheck(dragEvent, pointerEvent, draggable, dragElement, dropzoneElement, rect)\n      ? dropzoneElement\n      : null)\n  }\n\n  // get the most appropriate dropzone based on DOM depth and order\n  const dropIndex = utils.dom.indexOfDeepestElement(validDrops)\n\n  return dropState.activeDrops[dropIndex] || null\n}\n\nfunction getDropEvents (interaction: Interact.Interaction, _pointerEvent, dragEvent) {\n  const { dropState } = interaction\n  const dropEvents = {\n    enter     : null,\n    leave     : null,\n    activate  : null,\n    deactivate: null,\n    move      : null,\n    drop      : null,\n  }\n\n  if (dragEvent.type === 'dragstart') {\n    dropEvents.activate = new DropEvent(dropState, dragEvent, 'dropactivate')\n\n    dropEvents.activate.target   = null\n    dropEvents.activate.dropzone = null\n  }\n  if (dragEvent.type === 'dragend') {\n    dropEvents.deactivate = new DropEvent(dropState, dragEvent, 'dropdeactivate')\n\n    dropEvents.deactivate.target   = null\n    dropEvents.deactivate.dropzone = null\n  }\n\n  if (dropState.rejected) {\n    return dropEvents\n  }\n\n  if (dropState.cur.element !== dropState.prev.element) {\n    // if there was a previous dropzone, create a dragleave event\n    if (dropState.prev.dropzone) {\n      dropEvents.leave = new DropEvent(dropState, dragEvent, 'dragleave')\n\n      dragEvent.dragLeave    = dropEvents.leave.target   = dropState.prev.element\n      dragEvent.prevDropzone = dropEvents.leave.dropzone = dropState.prev.dropzone\n    }\n    // if dropzone is not null, create a dragenter event\n    if (dropState.cur.dropzone) {\n      dropEvents.enter = new DropEvent(dropState, dragEvent, 'dragenter')\n\n      dragEvent.dragEnter = dropState.cur.element\n      dragEvent.dropzone = dropState.cur.dropzone\n    }\n  }\n\n  if (dragEvent.type === 'dragend' && dropState.cur.dropzone) {\n    dropEvents.drop = new DropEvent(dropState, dragEvent, 'drop')\n\n    dragEvent.dropzone = dropState.cur.dropzone\n    dragEvent.relatedTarget = dropState.cur.element\n  }\n  if (dragEvent.type === 'dragmove' && dropState.cur.dropzone) {\n    dropEvents.move = new DropEvent(dropState, dragEvent, 'dropmove')\n\n    dropEvents.move.dragmove = dragEvent\n    dragEvent.dropzone = dropState.cur.dropzone\n  }\n\n  return dropEvents\n}\n\nfunction fireDropEvents (interaction: Interact.Interaction, events) {\n  const { dropState } = interaction\n  const {\n    activeDrops,\n    cur,\n    prev,\n  } = dropState\n\n  if (events.leave) { prev.dropzone.fire(events.leave) }\n  if (events.move) { cur.dropzone.fire(events.move) }\n  if (events.enter) { cur.dropzone.fire(events.enter) }\n  if (events.drop) { cur.dropzone.fire(events.drop) }\n\n  if (events.deactivate) {\n    fireActivationEvents(activeDrops, events.deactivate)\n  }\n\n  dropState.prev.dropzone  = cur.dropzone\n  dropState.prev.element = cur.element\n}\n\nfunction onEventCreated ({ interaction, iEvent, event }: Interact.SignalArg, scope) {\n  if (iEvent.type !== 'dragmove' && iEvent.type !== 'dragend') { return }\n\n  const { dropState } = interaction\n\n  if (scope.dynamicDrop) {\n    dropState.activeDrops = getActiveDrops(scope, interaction.element)\n  }\n\n  const dragEvent = iEvent\n  const dropResult = getDrop(interaction, dragEvent, event)\n\n  // update rejected status\n  dropState.rejected = dropState.rejected &&\n    !!dropResult &&\n    dropResult.dropzone === dropState.cur.dropzone &&\n    dropResult.element === dropState.cur.element\n\n  dropState.cur.dropzone  = dropResult && dropResult.dropzone\n  dropState.cur.element = dropResult && dropResult.element\n\n  dropState.events = getDropEvents(interaction, event, dragEvent)\n}\n\nfunction dropzoneMethod (interactable: Interact.Interactable): Interact.DropzoneOptions\nfunction dropzoneMethod (interactable: Interact.Interactable, options: Interact.DropzoneOptions | boolean)\nfunction dropzoneMethod (interactable: Interact.Interactable, options?: Interact.DropzoneOptions | boolean) {\n  if (utils.is.object(options)) {\n    interactable.options.drop.enabled = options.enabled !== false\n\n    if (options.listeners) {\n      const normalized = utils.normalizeListeners(options.listeners)\n      // rename 'drop' to '' as it will be prefixed with 'drop'\n      const corrected = Object.keys(normalized).reduce((acc, type) => {\n        const correctedType = /^(enter|leave)/.test(type)\n          ? `drag${type}`\n          : /^(activate|deactivate|move)/.test(type)\n            ? `drop${type}`\n            : type\n\n        acc[correctedType] = normalized[type]\n\n        return acc\n      }, {})\n\n      interactable.off(interactable.options.drop.listeners)\n      interactable.on(corrected)\n      interactable.options.drop.listeners = corrected\n    }\n\n    if (utils.is.func(options.ondrop)) { interactable.on('drop', options.ondrop) }\n    if (utils.is.func(options.ondropactivate)) { interactable.on('dropactivate', options.ondropactivate) }\n    if (utils.is.func(options.ondropdeactivate)) { interactable.on('dropdeactivate', options.ondropdeactivate) }\n    if (utils.is.func(options.ondragenter)) { interactable.on('dragenter', options.ondragenter) }\n    if (utils.is.func(options.ondragleave)) { interactable.on('dragleave', options.ondragleave) }\n    if (utils.is.func(options.ondropmove)) { interactable.on('dropmove', options.ondropmove) }\n\n    if (/^(pointer|center)$/.test(options.overlap as string)) {\n      interactable.options.drop.overlap = options.overlap\n    }\n    else if (utils.is.number(options.overlap)) {\n      interactable.options.drop.overlap = Math.max(Math.min(1, options.overlap), 0)\n    }\n    if ('accept' in options) {\n      interactable.options.drop.accept = options.accept\n    }\n    if ('checker' in options) {\n      interactable.options.drop.checker = options.checker\n    }\n\n    return interactable\n  }\n\n  if (utils.is.bool(options)) {\n    interactable.options.drop.enabled = options\n\n    return interactable\n  }\n\n  return interactable.options.drop\n}\n\nfunction dropCheckMethod (\n  interactable: Interact.Interactable,\n  dragEvent: InteractEvent,\n  event: Interact.PointerEventType,\n  draggable: Interact.Interactable,\n  draggableElement: Element,\n  dropElement: Element,\n  rect: any\n) {\n  let dropped = false\n\n  // if the dropzone has no rect (eg. display: none)\n  // call the custom dropChecker or just return false\n  if (!(rect = rect || interactable.getRect(dropElement))) {\n    return (interactable.options.drop.checker\n      ? interactable.options.drop.checker(dragEvent, event, dropped, interactable, dropElement, draggable, draggableElement)\n      : false)\n  }\n\n  const dropOverlap = interactable.options.drop.overlap\n\n  if (dropOverlap === 'pointer') {\n    const origin = utils.getOriginXY(draggable, draggableElement, 'drag')\n    const page = utils.pointer.getPageXY(dragEvent)\n\n    page.x += origin.x\n    page.y += origin.y\n\n    const horizontal = (page.x > rect.left) && (page.x < rect.right)\n    const vertical   = (page.y > rect.top) && (page.y < rect.bottom)\n\n    dropped = horizontal && vertical\n  }\n\n  const dragRect = draggable.getRect(draggableElement)\n\n  if (dragRect && dropOverlap === 'center') {\n    const cx = dragRect.left + dragRect.width  / 2\n    const cy = dragRect.top  + dragRect.height / 2\n\n    dropped = cx >= rect.left && cx <= rect.right && cy >= rect.top && cy <= rect.bottom\n  }\n\n  if (dragRect && utils.is.number(dropOverlap)) {\n    const overlapArea  = (Math.max(0, Math.min(rect.right, dragRect.right) - Math.max(rect.left, dragRect.left)) *\n                          Math.max(0, Math.min(rect.bottom, dragRect.bottom) - Math.max(rect.top, dragRect.top)))\n\n    const overlapRatio = overlapArea / (dragRect.width * dragRect.height)\n\n    dropped = overlapRatio >= dropOverlap\n  }\n\n  if (interactable.options.drop.checker) {\n    dropped = interactable.options.drop.checker(dragEvent, event, dropped, interactable, dropElement, draggable, draggableElement)\n  }\n\n  return dropped\n}\n\nconst drop = {\n  id: 'actions/drop',\n  install,\n  getActiveDrops,\n  getDrop,\n  getDropEvents,\n  fireDropEvents,\n  defaults: {\n    enabled: false,\n    accept : null,\n    overlap: 'pointer',\n  } as Interact.DropzoneOptions,\n}\n\nexport default drop\n","import InteractEvent from '@interactjs/core/InteractEvent'\nimport { ActionName, Scope } from '@interactjs/core/scope'\nimport * as utils from '@interactjs/utils'\n\nexport type GesturableMethod = Interact.ActionMethod<Interact.GesturableOptions>\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    gesture?: {\n      angle: number,          // angle from first to second touch\n      distance: number,\n      scale: number,          // gesture.distance / gesture.startDistance\n      startAngle: number,     // angle of line joining two touches\n      startDistance: number,  // distance between two touches of touchStart\n    }\n  }\n}\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    gesturable: GesturableMethod\n  }\n}\n\ndeclare module '@interactjs/core/defaultOptions' {\n  interface ActionDefaults {\n    gesture: Interact.GesturableOptions\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface Actions {\n    [ActionName.Gesture]?: typeof gesture\n  }\n\n  // eslint-disable-next-line no-shadow\n  enum ActionName {\n    Gesture = 'gesture'\n  }\n}\n\n(ActionName as any).Gesture = 'gesture'\n\nexport interface GestureEvent extends Interact.InteractEvent<ActionName.Gesture> {\n  distance: number\n  angle: number\n  da: number // angle change\n  scale: number // ratio of distance start to current event\n  ds: number // scale change\n  box: Interact.Rect // enclosing box of all points\n  touches: Interact.PointerType[]\n}\n\nexport interface GestureSignalArg extends Interact.SignalArg {\n  iEvent: GestureEvent\n  interaction: Interact.Interaction<ActionName.Gesture>\n  event: Interact.PointerEventType | GestureEvent\n}\n\nfunction install (scope: Scope) {\n  const {\n    actions,\n    Interactable,\n    interactions,\n    defaults,\n  } = scope\n\n  /**\n   * ```js\n   * interact(element).gesturable({\n   *     onstart: function (event) {},\n   *     onmove : function (event) {},\n   *     onend  : function (event) {},\n   *\n   *     // limit multiple gestures.\n   *     // See the explanation in {@link Interactable.draggable} example\n   *     max: Infinity,\n   *     maxPerElement: 1,\n   * })\n   *\n   * var isGestureable = interact(element).gesturable()\n   * ```\n   *\n   * Gets or sets whether multitouch gestures can be performed on the target\n   *\n   * @param {boolean | object} [options] true/false or An object with event\n   * listeners to be fired on gesture events (makes the Interactable gesturable)\n   * @return {boolean | Interactable} A boolean indicating if this can be the\n   * target of gesture events, or this Interactable\n   */\n  Interactable.prototype.gesturable = function (this: Interact.Interactable, options: Interact.GesturableOptions | boolean) {\n    if (utils.is.object(options)) {\n      this.options.gesture.enabled = options.enabled !== false\n      this.setPerAction('gesture', options)\n      this.setOnEvents('gesture', options)\n\n      return this\n    }\n\n    if (utils.is.bool(options)) {\n      this.options.gesture.enabled = options\n\n      return this\n    }\n\n    return this.options.gesture as Interact.Options\n  } as GesturableMethod\n\n  interactions.signals.on('action-start', updateGestureProps)\n  interactions.signals.on('action-move', updateGestureProps)\n  interactions.signals.on('action-end', updateGestureProps)\n\n  interactions.signals.on('new', ({ interaction }) => {\n    interaction.gesture = {\n      angle: 0,\n      distance: 0,\n      scale: 1,\n      startAngle: 0,\n      startDistance: 0,\n    }\n  })\n\n  actions[ActionName.Gesture] = gesture\n  actions.names.push(ActionName.Gesture)\n  utils.arr.merge(actions.eventTypes, [\n    'gesturestart',\n    'gesturemove',\n    'gestureend',\n  ])\n  actions.methodDict.gesture = 'gesturable'\n\n  defaults.actions.gesture = gesture.defaults\n}\n\nconst gesture = {\n  id: 'actions/gesture',\n  install,\n  defaults: {\n  },\n\n  checker (_pointer, _event, _interactable, _element, interaction: { pointers: { length: number; }; }) {\n    if (interaction.pointers.length >= 2) {\n      return { name: 'gesture' }\n    }\n\n    return null\n  },\n\n  getCursor () {\n    return ''\n  },\n}\n\nfunction updateGestureProps ({ interaction, iEvent, event, phase }: GestureSignalArg) {\n  if (interaction.prepared.name !== 'gesture') { return }\n\n  const pointers = interaction.pointers.map((p) => p.pointer)\n  const starting = phase === 'start'\n  const ending = phase === 'end'\n  const deltaSource = interaction.interactable.options.deltaSource\n\n  iEvent.touches = [pointers[0], pointers[1]]\n\n  if (starting) {\n    iEvent.distance = utils.pointer.touchDistance(pointers, deltaSource)\n    iEvent.box      = utils.pointer.touchBBox(pointers)\n    iEvent.scale    = 1\n    iEvent.ds       = 0\n    iEvent.angle    = utils.pointer.touchAngle(pointers, deltaSource)\n    iEvent.da       = 0\n\n    interaction.gesture.startDistance = iEvent.distance\n    interaction.gesture.startAngle = iEvent.angle\n  }\n  else if (ending || event instanceof InteractEvent) {\n    const prevEvent = interaction.prevEvent as GestureEvent\n\n    iEvent.distance = prevEvent.distance\n    iEvent.box      = prevEvent.box\n    iEvent.scale    = prevEvent.scale\n    iEvent.ds       = 0\n    iEvent.angle    = prevEvent.angle\n    iEvent.da       = 0\n  }\n  else {\n    iEvent.distance = utils.pointer.touchDistance(pointers, deltaSource)\n    iEvent.box      = utils.pointer.touchBBox(pointers)\n    iEvent.scale    = iEvent.distance / interaction.gesture.startDistance\n    iEvent.angle    = utils.pointer.touchAngle(pointers, deltaSource)\n\n    iEvent.ds = iEvent.scale - interaction.gesture.scale\n    iEvent.da = iEvent.angle - interaction.gesture.angle\n  }\n\n  interaction.gesture.distance = iEvent.distance\n  interaction.gesture.angle = iEvent.angle\n\n  if (utils.is.number(iEvent.scale) &&\n      iEvent.scale !== Infinity &&\n      !isNaN(iEvent.scale)) {\n    interaction.gesture.scale = iEvent.scale\n  }\n}\n\nexport default gesture\n","import { Scope } from '@interactjs/core/scope'\nimport drag, { DragEvent } from './drag'\nimport drop from './drop'\nimport gesture, { GestureEvent } from './gesture'\nimport resize, { ResizeEvent } from './resize'\n\nfunction install (scope: Scope) {\n  scope.usePlugin(gesture)\n  scope.usePlugin(resize)\n  scope.usePlugin(drag)\n  scope.usePlugin(drop)\n}\n\nconst id = 'actions'\n\nexport {\n  id,\n  install,\n  gesture,\n  GestureEvent,\n  resize,\n  ResizeEvent,\n  drag,\n  DragEvent,\n  drop,\n}\n","import { ActionProps, Interaction } from '@interactjs/core/Interaction'\nimport { ActionName, Scope } from '@interactjs/core/scope'\nimport * as utils from '@interactjs/utils'\n\nexport type EdgeName = 'top' | 'left' | 'bottom' | 'right'\n\nexport type ResizableMethod = Interact.ActionMethod<Interact.ResizableOptions>\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    resizable: ResizableMethod\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    resizeAxes: 'x' | 'y' | 'xy'\n    resizeRects: {\n      start: Required<Interact.Rect>\n      current: Interact.Rect\n      inverted: Required<Interact.Rect>\n      previous: Required<Interact.Rect>\n      delta: Required<Interact.Rect>\n    }\n    resizeStartAspectRatio: number\n  }\n\n  interface ActionProps {\n    _linkedEdges?: { [key: string]: boolean }\n  }\n}\n\ndeclare module '@interactjs/core/defaultOptions' {\n  interface ActionDefaults {\n    resize: Interact.ResizableOptions\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface Actions {\n    [ActionName.Resize]?: typeof resize\n  }\n\n  // eslint-disable-next-line no-shadow\n  enum ActionName {\n    Resize = 'resize'\n  }\n}\n\n(ActionName as any).Resize = 'resize'\n\nexport interface ResizeEvent extends Interact.InteractEvent<ActionName.Resize> {\n  deltaRect?: Required<Interact.Rect>\n}\n\nfunction install (scope: Scope) {\n  const {\n    actions,\n    browser,\n    /** @lends Interactable */\n    Interactable, // tslint:disable-line no-shadowed-variable\n    interactions,\n    defaults,\n  } = scope\n\n  // Less Precision with touch input\n\n  interactions.signals.on('new', (interaction) => {\n    interaction.resizeAxes = 'xy'\n  })\n\n  interactions.signals.on('action-start', start)\n  interactions.signals.on('action-move', move)\n\n  interactions.signals.on('action-start', updateEventAxes)\n  interactions.signals.on('action-move', updateEventAxes)\n\n  resize.cursors = initCursors(browser)\n  resize.defaultMargin = browser.supportsTouch || browser.supportsPointerEvent ? 20 : 10\n\n  /**\n   * ```js\n   * interact(element).resizable({\n   *   onstart: function (event) {},\n   *   onmove : function (event) {},\n   *   onend  : function (event) {},\n   *\n   *   edges: {\n   *     top   : true,       // Use pointer coords to check for resize.\n   *     left  : false,      // Disable resizing from left edge.\n   *     bottom: '.resize-s',// Resize if pointer target matches selector\n   *     right : handleEl    // Resize if pointer target is the given Element\n   *   },\n   *\n   *     // Width and height can be adjusted independently. When `true`, width and\n   *     // height are adjusted at a 1:1 ratio.\n   *     square: false,\n   *\n   *     // Width and height can be adjusted independently. When `true`, width and\n   *     // height maintain the aspect ratio they had when resizing started.\n   *     preserveAspectRatio: false,\n   *\n   *   // a value of 'none' will limit the resize rect to a minimum of 0x0\n   *   // 'negate' will allow the rect to have negative width/height\n   *   // 'reposition' will keep the width/height positive by swapping\n   *   // the top and bottom edges and/or swapping the left and right edges\n   *   invert: 'none' || 'negate' || 'reposition'\n   *\n   *   // limit multiple resizes.\n   *   // See the explanation in the {@link Interactable.draggable} example\n   *   max: Infinity,\n   *   maxPerElement: 1,\n   * })\n   *\n   * var isResizeable = interact(element).resizable()\n   * ```\n   *\n   * Gets or sets whether resize actions can be performed on the target\n   *\n   * @param {boolean | object} [options] true/false or An object with event\n   * listeners to be fired on resize events (object makes the Interactable\n   * resizable)\n   * @return {boolean | Interactable} A boolean indicating if this can be the\n   * target of resize elements, or this Interactable\n   */\n  Interactable.prototype.resizable = function (this: Interact.Interactable, options: Interact.ResizableOptions | boolean) {\n    return resizable(this, options, scope)\n  } as ResizableMethod\n\n  actions[ActionName.Resize] = resize\n  actions.names.push(ActionName.Resize)\n  utils.arr.merge(actions.eventTypes, [\n    'resizestart',\n    'resizemove',\n    'resizeinertiastart',\n    'resizeresume',\n    'resizeend',\n  ])\n  actions.methodDict.resize = 'resizable'\n\n  defaults.actions.resize = resize.defaults\n}\n\nconst resize = {\n  id: 'actions/resize',\n  install,\n  defaults: {\n    square: false,\n    preserveAspectRatio: false,\n    axis: 'xy',\n\n    // use default margin\n    margin: NaN,\n\n    // object with props left, right, top, bottom which are\n    // true/false values to resize when the pointer is over that edge,\n    // CSS selectors to match the handles for each direction\n    // or the Elements for each handle\n    edges: null,\n\n    // a value of 'none' will limit the resize rect to a minimum of 0x0\n    // 'negate' will alow the rect to have negative width/height\n    // 'reposition' will keep the width/height positive by swapping\n    // the top and bottom edges and/or swapping the left and right edges\n    invert: 'none',\n  } as Interact.ResizableOptions,\n\n  checker (\n    _pointer: Interact.PointerType,\n    _event: Interact.PointerEventType,\n    interactable: Interact.Interactable,\n    element: Element,\n    interaction: Interaction,\n    rect: Interact.Rect\n  ) {\n    if (!rect) { return null }\n\n    const page = utils.extend({}, interaction.coords.cur.page)\n    const options = interactable.options\n\n    if (options.resize.enabled) {\n      const resizeOptions = options.resize\n      const resizeEdges: { [edge: string]: boolean } = { left: false, right: false, top: false, bottom: false }\n\n      // if using resize.edges\n      if (utils.is.object(resizeOptions.edges)) {\n        for (const edge in resizeEdges) {\n          resizeEdges[edge] = checkResizeEdge(edge,\n            resizeOptions.edges[edge],\n            page,\n            interaction._latestPointer.eventTarget,\n            element,\n            rect,\n            resizeOptions.margin || this.defaultMargin)\n        }\n\n        resizeEdges.left = resizeEdges.left && !resizeEdges.right\n        resizeEdges.top  = resizeEdges.top  && !resizeEdges.bottom\n\n        if (resizeEdges.left || resizeEdges.right || resizeEdges.top || resizeEdges.bottom) {\n          return {\n            name: 'resize',\n            edges: resizeEdges,\n          }\n        }\n      }\n      else {\n        const right  = options.resize.axis !== 'y' && page.x > (rect.right  - this.defaultMargin)\n        const bottom = options.resize.axis !== 'x' && page.y > (rect.bottom - this.defaultMargin)\n\n        if (right || bottom) {\n          return {\n            name: 'resize',\n            axes: (right ? 'x' : '') + (bottom ? 'y' : ''),\n          }\n        }\n      }\n    }\n\n    return null\n  },\n\n  cursors: null as unknown as ReturnType<typeof initCursors>,\n\n  getCursor (action: ActionProps) {\n    const cursors = resize.cursors as { [key: string]: string }\n    if (action.axis) {\n      return cursors[action.name + action.axis]\n    }\n    else if (action.edges) {\n      let cursorKey = ''\n      const edgeNames = ['top', 'bottom', 'left', 'right']\n\n      for (let i = 0; i < 4; i++) {\n        if (action.edges[edgeNames[i]]) {\n          cursorKey += edgeNames[i]\n        }\n      }\n\n      return cursors[cursorKey]\n    }\n\n    return null\n  },\n\n  defaultMargin: null as unknown as number,\n}\n\nfunction resizable (interactable: Interact.Interactable, options: Interact.OrBoolean<Interact.ResizableOptions> | boolean, scope: Scope) {\n  if (utils.is.object(options)) {\n    interactable.options.resize.enabled = options.enabled !== false\n    interactable.setPerAction('resize', options)\n    interactable.setOnEvents('resize', options)\n\n    if (utils.is.string(options.axis) && /^x$|^y$|^xy$/.test(options.axis)) {\n      interactable.options.resize.axis = options.axis\n    }\n    else if (options.axis === null) {\n      interactable.options.resize.axis = scope.defaults.actions.resize.axis\n    }\n\n    if (utils.is.bool(options.preserveAspectRatio)) {\n      interactable.options.resize.preserveAspectRatio = options.preserveAspectRatio\n    }\n    else if (utils.is.bool(options.square)) {\n      interactable.options.resize.square = options.square\n    }\n\n    return interactable\n  }\n  if (utils.is.bool(options)) {\n    interactable.options.resize.enabled = options\n\n    return interactable\n  }\n  return interactable.options.resize\n}\n\nfunction checkResizeEdge (name: string, value: any, page: Interact.Point, element: Node, interactableElement: Element, rect: Interact.Rect, margin: number) {\n  // false, '', undefined, null\n  if (!value) { return false }\n\n  // true value, use pointer coords and element rect\n  if (value === true) {\n    // if dimensions are negative, \"switch\" edges\n    const width  = utils.is.number(rect.width) ? rect.width  : rect.right  - rect.left\n    const height = utils.is.number(rect.height) ? rect.height : rect.bottom - rect.top\n\n    // don't use margin greater than half the relevent dimension\n    margin = Math.min(margin, (name === 'left' || name === 'right' ? width : height) / 2)\n\n    if (width < 0) {\n      if      (name === 'left')  { name = 'right' }\n      else if (name === 'right') { name = 'left'  }\n    }\n    if (height < 0) {\n      if      (name === 'top')    { name = 'bottom' }\n      else if (name === 'bottom') { name = 'top'    }\n    }\n\n    if (name === 'left') { return page.x < ((width  >= 0 ? rect.left : rect.right) + margin) }\n    if (name === 'top') { return page.y < ((height >= 0 ? rect.top : rect.bottom) + margin) }\n\n    if (name === 'right') { return page.x > ((width  >= 0 ? rect.right : rect.left) - margin) }\n    if (name === 'bottom') { return page.y > ((height >= 0 ? rect.bottom : rect.top) - margin) }\n  }\n\n  // the remaining checks require an element\n  if (!utils.is.element(element)) { return false }\n\n  return utils.is.element(value)\n  // the value is an element to use as a resize handle\n    ? value === element\n    // otherwise check if element matches value as selector\n    : utils.dom.matchesUpTo(element, value, interactableElement)\n}\n\nfunction initCursors (browser: typeof import ('@interactjs/utils/browser').default) {\n  return (browser.isIe9 ? {\n    x : 'e-resize',\n    y : 's-resize',\n    xy: 'se-resize',\n\n    top        : 'n-resize',\n    left       : 'w-resize',\n    bottom     : 's-resize',\n    right      : 'e-resize',\n    topleft    : 'se-resize',\n    bottomright: 'se-resize',\n    topright   : 'ne-resize',\n    bottomleft : 'ne-resize',\n  } : {\n    x : 'ew-resize',\n    y : 'ns-resize',\n    xy: 'nwse-resize',\n\n    top        : 'ns-resize',\n    left       : 'ew-resize',\n    bottom     : 'ns-resize',\n    right      : 'ew-resize',\n    topleft    : 'nwse-resize',\n    bottomright: 'nwse-resize',\n    topright   : 'nesw-resize',\n    bottomleft : 'nesw-resize',\n  })\n}\n\nfunction start ({ iEvent, interaction }: Interact.SignalArg) {\n  if (interaction.prepared.name !== 'resize' || !interaction.prepared.edges) {\n    return\n  }\n\n  const startRect = interaction.rect\n  const resizeOptions = interaction.interactable.options.resize\n\n  /*\n   * When using the `resizable.square` or `resizable.preserveAspectRatio` options, resizing from one edge\n   * will affect another. E.g. with `resizable.square`, resizing to make the right edge larger will make\n   * the bottom edge larger by the same amount. We call these 'linked' edges. Any linked edges will depend\n   * on the active edges and the edge being interacted with.\n   */\n  if (resizeOptions.square || resizeOptions.preserveAspectRatio) {\n    const linkedEdges = utils.extend({}, interaction.prepared.edges)\n\n    linkedEdges.top    = linkedEdges.top    || (linkedEdges.left   && !linkedEdges.bottom)\n    linkedEdges.left   = linkedEdges.left   || (linkedEdges.top    && !linkedEdges.right)\n    linkedEdges.bottom = linkedEdges.bottom || (linkedEdges.right  && !linkedEdges.top)\n    linkedEdges.right  = linkedEdges.right  || (linkedEdges.bottom && !linkedEdges.left)\n\n    interaction.prepared._linkedEdges = linkedEdges\n  }\n  else {\n    interaction.prepared._linkedEdges = null\n  }\n\n  // if using `resizable.preserveAspectRatio` option, record aspect ratio at the start of the resize\n  if (resizeOptions.preserveAspectRatio) {\n    interaction.resizeStartAspectRatio = startRect.width / startRect.height\n  }\n\n  interaction.resizeRects = {\n    start     : startRect,\n    current   : utils.extend({}, startRect),\n    inverted  : utils.extend({}, startRect),\n    previous  : utils.extend({}, startRect),\n    delta     : {\n      left: 0,\n      right : 0,\n      width : 0,\n      top : 0,\n      bottom: 0,\n      height: 0,\n    },\n  }\n\n  iEvent.rect = interaction.resizeRects.inverted\n  ; (iEvent as ResizeEvent).deltaRect = interaction.resizeRects.delta\n}\n\nfunction move ({ iEvent, interaction }) {\n  if (interaction.prepared.name !== 'resize' || !interaction.prepared.edges) { return }\n\n  const resizeOptions = interaction.interactable.options.resize\n  const invert = resizeOptions.invert\n  const invertible = invert === 'reposition' || invert === 'negate'\n\n  let edges = interaction.prepared.edges\n\n  // eslint-disable-next-line no-shadow\n  const start      = interaction.resizeRects.start\n  const current    = interaction.resizeRects.current\n  const inverted   = interaction.resizeRects.inverted\n  const deltaRect  = interaction.resizeRects.delta\n  const previous   = utils.extend(interaction.resizeRects.previous, inverted)\n  const originalEdges = edges\n\n  const eventDelta = utils.extend({}, iEvent.delta)\n\n  if (resizeOptions.preserveAspectRatio || resizeOptions.square) {\n    // `resize.preserveAspectRatio` takes precedence over `resize.square`\n    const startAspectRatio = resizeOptions.preserveAspectRatio\n      ? interaction.resizeStartAspectRatio\n      : 1\n\n    edges = interaction.prepared._linkedEdges\n\n    if ((originalEdges.left && originalEdges.bottom) ||\n        (originalEdges.right && originalEdges.top)) {\n      eventDelta.y = -eventDelta.x / startAspectRatio\n    }\n    else if (originalEdges.left || originalEdges.right) { eventDelta.y = eventDelta.x / startAspectRatio }\n    else if (originalEdges.top  || originalEdges.bottom) { eventDelta.x = eventDelta.y * startAspectRatio }\n  }\n\n  // update the 'current' rect without modifications\n  if (edges.top) { current.top    += eventDelta.y }\n  if (edges.bottom) { current.bottom += eventDelta.y }\n  if (edges.left) { current.left   += eventDelta.x }\n  if (edges.right) { current.right  += eventDelta.x }\n\n  if (invertible) {\n    // if invertible, copy the current rect\n    utils.extend(inverted, current)\n\n    if (invert === 'reposition') {\n      // swap edge values if necessary to keep width/height positive\n      let swap\n\n      if (inverted.top > inverted.bottom) {\n        swap = inverted.top\n\n        inverted.top = inverted.bottom\n        inverted.bottom = swap\n      }\n      if (inverted.left > inverted.right) {\n        swap = inverted.left\n\n        inverted.left = inverted.right\n        inverted.right = swap\n      }\n    }\n  }\n  else {\n    // if not invertible, restrict to minimum of 0x0 rect\n    inverted.top    = Math.min(current.top, start.bottom)\n    inverted.bottom = Math.max(current.bottom, start.top)\n    inverted.left   = Math.min(current.left, start.right)\n    inverted.right  = Math.max(current.right, start.left)\n  }\n\n  inverted.width  = inverted.right  - inverted.left\n  inverted.height = inverted.bottom - inverted.top\n\n  for (const edge in inverted) {\n    deltaRect[edge] = inverted[edge] - previous[edge]\n  }\n\n  iEvent.edges = interaction.prepared.edges\n  iEvent.rect = inverted\n  iEvent.deltaRect = deltaRect\n}\n\nfunction updateEventAxes ({ interaction, iEvent, action }) {\n  if (action !== 'resize' || !interaction.resizeAxes) { return }\n\n  const options = interaction.interactable.options\n\n  if (options.resize.square) {\n    if (interaction.resizeAxes === 'y') {\n      iEvent.delta.x = iEvent.delta.y\n    }\n    else {\n      iEvent.delta.y = iEvent.delta.x\n    }\n    iEvent.axes = 'xy'\n  }\n  else {\n    iEvent.axes = interaction.resizeAxes\n\n    if (interaction.resizeAxes === 'x') {\n      iEvent.delta.y = 0\n    }\n    else if (interaction.resizeAxes === 'y') {\n      iEvent.delta.x = 0\n    }\n  }\n}\n\nexport default resize\n","import * as domUtils from '@interactjs/utils/domUtils'\nimport * as is from '@interactjs/utils/is'\nimport raf from '@interactjs/utils/raf'\nimport { getStringOptionResult } from '@interactjs/utils/rect'\nimport { getWindow } from '@interactjs/utils/window'\n\ntype Scope = import ('@interactjs/core/scope').Scope\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    autoScroll: typeof autoScroll\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    autoScroll?: typeof autoScroll\n  }\n}\n\ndeclare module '@interactjs/core/defaultOptions' {\n  interface PerActionDefaults {\n    autoScroll?: Interact.AutoScrollOption\n  }\n}\n\nfunction install (scope: Scope) {\n  const {\n    interactions,\n    defaults,\n    actions,\n  } = scope\n\n  scope.autoScroll = autoScroll\n  autoScroll.now = () => scope.now()\n\n  interactions.signals.on('new', ({ interaction }) => {\n    interaction.autoScroll = null\n  })\n\n  interactions.signals.on('stop', autoScroll.stop)\n\n  interactions.signals.on('action-move', (arg: any) => autoScroll.onInteractionMove(arg))\n\n  actions.eventTypes.push('autoscroll')\n  defaults.perAction.autoScroll = autoScroll.defaults\n}\n\nconst autoScroll = {\n  defaults: {\n    enabled  : false,\n    margin   : 60,\n\n    // the item that is scrolled (Window or HTMLElement)\n    container: null as Window | Element,\n\n    // the scroll speed in pixels per second\n    speed    : 300,\n  } as Interact.AutoScrollOption,\n\n  now: Date.now,\n\n  interaction: null,\n  i: null,    // the handle returned by window.setInterval\n  x: 0,\n  y: 0, // Direction each pulse is to scroll in\n\n  isScrolling: false,\n  prevTime: 0,\n  margin: 0,\n  speed: 0,\n\n  start (interaction: Interact.Interaction) {\n    autoScroll.isScrolling = true\n    raf.cancel(autoScroll.i)\n\n    interaction.autoScroll = autoScroll\n    autoScroll.interaction = interaction\n    autoScroll.prevTime = autoScroll.now()\n    autoScroll.i = raf.request(autoScroll.scroll)\n  },\n\n  stop () {\n    autoScroll.isScrolling = false\n    if (autoScroll.interaction) {\n      autoScroll.interaction.autoScroll = null\n    }\n    raf.cancel(autoScroll.i)\n  },\n\n  // scroll the window by the values in scroll.x/y\n  scroll () {\n    const { interaction } = autoScroll\n    const { interactable, element } = interaction\n    const options = interactable.options[autoScroll.interaction.prepared.name].autoScroll\n    const container = getContainer(options.container, interactable, element)\n    const now = autoScroll.now()\n    // change in time in seconds\n    const dt = (now - autoScroll.prevTime) / 1000\n    // displacement\n    const s = options.speed * dt\n\n    if (s >= 1) {\n      const scrollBy = {\n        x: autoScroll.x * s,\n        y: autoScroll.y * s,\n      }\n\n      if (scrollBy.x || scrollBy.y) {\n        const prevScroll = getScroll(container)\n\n        if (is.window(container)) {\n          container.scrollBy(scrollBy.x, scrollBy.y)\n        }\n        else if (container) {\n          container.scrollLeft += scrollBy.x\n          container.scrollTop  += scrollBy.y\n        }\n\n        const curScroll = getScroll(container)\n        const delta = {\n          x: curScroll.x - prevScroll.x,\n          y: curScroll.y - prevScroll.y,\n        }\n\n        if (delta.x || delta.y) {\n          interactable.fire({\n            type: 'autoscroll',\n            target: element,\n            interactable,\n            delta,\n            interaction,\n            container,\n          })\n        }\n      }\n\n      autoScroll.prevTime = now\n    }\n\n    if (autoScroll.isScrolling) {\n      raf.cancel(autoScroll.i)\n      autoScroll.i = raf.request(autoScroll.scroll)\n    }\n  },\n  check (interactable, actionName) {\n    const options = interactable.options\n\n    return options[actionName].autoScroll && options[actionName].autoScroll.enabled\n  },\n  onInteractionMove ({ interaction, pointer }) {\n    if (!(interaction.interacting() &&\n          autoScroll.check(interaction.interactable, interaction.prepared.name))) {\n      return\n    }\n\n    if (interaction.simulation) {\n      autoScroll.x = autoScroll.y = 0\n      return\n    }\n\n    let top\n    let right\n    let bottom\n    let left\n\n    const { interactable, element } = interaction\n    const options = interactable.options[interaction.prepared.name].autoScroll\n    const container = getContainer(options.container, interactable, element)\n\n    if (is.window(container)) {\n      left   = pointer.clientX < autoScroll.margin\n      top    = pointer.clientY < autoScroll.margin\n      right  = pointer.clientX > container.innerWidth  - autoScroll.margin\n      bottom = pointer.clientY > container.innerHeight - autoScroll.margin\n    }\n    else {\n      const rect = domUtils.getElementClientRect(container)\n\n      left   = pointer.clientX < rect.left   + autoScroll.margin\n      top    = pointer.clientY < rect.top    + autoScroll.margin\n      right  = pointer.clientX > rect.right  - autoScroll.margin\n      bottom = pointer.clientY > rect.bottom - autoScroll.margin\n    }\n\n    autoScroll.x = (right ? 1 : left ? -1 : 0)\n    autoScroll.y = (bottom ? 1 :  top ? -1 : 0)\n\n    if (!autoScroll.isScrolling) {\n      // set the autoScroll properties to those of the target\n      autoScroll.margin = options.margin\n      autoScroll.speed  = options.speed\n\n      autoScroll.start(interaction)\n    }\n  },\n}\n\nexport function getContainer (value, interactable, element) {\n  return (is.string(value) ? getStringOptionResult(value, interactable, element) : value) || getWindow(element)\n}\n\nexport function getScroll (container) {\n  if (is.window(container)) { container = window.document.body }\n\n  return { x: container.scrollLeft, y: container.scrollTop }\n}\n\nexport function getScrollSize (container) {\n  if (is.window(container)) { container = window.document.body }\n\n  return { x: container.scrollWidth, y: container.scrollHeight }\n}\n\nexport function getScrollSizeDelta ({ interaction, element }, func) {\n  const scrollOptions = interaction && interaction.interactable.options[interaction.prepared.name].autoScroll\n\n  if (!scrollOptions || !scrollOptions.enabled) {\n    func()\n    return { x: 0, y: 0 }\n  }\n\n  const scrollContainer = getContainer(\n    scrollOptions.container,\n    interaction.interactable,\n    element\n  )\n\n  const prevSize = getScroll(scrollContainer)\n  func()\n  const curSize = getScroll(scrollContainer)\n\n  return {\n    x: curSize.x - prevSize.x,\n    y: curSize.y - prevSize.y,\n  }\n}\n\nexport default {\n  id: 'auto-scroll',\n  install,\n}\n","import { warnOnce } from '@interactjs/utils'\nimport * as is from '@interactjs/utils/is'\n\n// TODO: there seems to be a @babel/preset-typescript bug causing regular import\n// syntax to remain in js output\ntype Scope = import ('@interactjs/core/scope').Scope\ntype Actions = import ('@interactjs/core/scope').Actions\ntype Interaction = import ('@interactjs/core/Interaction').default\ntype Interactable = import ('@interactjs/core/Interactable').default\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    getAction: typeof getAction\n    defaultActionChecker: (pointer: any, event: any, interaction: any, element: any) => any\n    styleCursor: typeof styleCursor\n    actionChecker: typeof actionChecker\n    ignoreFrom: (...args: any) => boolean\n    allowFrom: (...args: any) => boolean\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    pointerIsDown: boolean\n  }\n}\n\nfunction install (scope: Scope) {\n  const {\n    /** @lends Interactable */\n    Interactable, // tslint:disable-line no-shadowed-variable\n    actions,\n  } = scope\n\n  Interactable.prototype.getAction = getAction\n\n  /**\n   * ```js\n   * interact(element, { ignoreFrom: document.getElementById('no-action') })\n   * // or\n   * interact(element).ignoreFrom('input, textarea, a')\n   * ```\n   * @deprecated\n   * If the target of the `mousedown`, `pointerdown` or `touchstart` event or any\n   * of it's parents match the given CSS selector or Element, no\n   * drag/resize/gesture is started.\n   *\n   * Don't use this method. Instead set the `ignoreFrom` option for each action\n   * or for `pointerEvents`\n   *\n   * @example\n   * interact(targett)\n   *   .draggable({\n   *     ignoreFrom: 'input, textarea, a[href]'',\n   *   })\n   *   .pointerEvents({\n   *     ignoreFrom: '[no-pointer]',\n   *   })\n   *\n   * @param {string | Element | null} [newValue] a CSS selector string, an\n   * Element or `null` to not ignore any elements\n   * @return {string | Element | object} The current ignoreFrom value or this\n   * Interactable\n   */\n  Interactable.prototype.ignoreFrom = warnOnce(function (this: Interactable, newValue) {\n    return this._backCompatOption('ignoreFrom', newValue)\n  }, 'Interactable.ignoreFrom() has been deprecated. Use Interactble.draggable({ignoreFrom: newValue}).')\n\n  /**\n   * @deprecated\n   *\n   * A drag/resize/gesture is started only If the target of the `mousedown`,\n   * `pointerdown` or `touchstart` event or any of it's parents match the given\n   * CSS selector or Element.\n   *\n   * Don't use this method. Instead set the `allowFrom` option for each action\n   * or for `pointerEvents`\n   *\n   * @example\n   * interact(targett)\n   *   .resizable({\n   *     allowFrom: '.resize-handle',\n   *   .pointerEvents({\n   *     allowFrom: '.handle',,\n   *   })\n   *\n   * @param {string | Element | null} [newValue] a CSS selector string, an\n   * Element or `null` to allow from any element\n   * @return {string | Element | object} The current allowFrom value or this\n   * Interactable\n   */\n  Interactable.prototype.allowFrom = warnOnce(function (this: Interactable, newValue) {\n    return this._backCompatOption('allowFrom', newValue)\n  }, 'Interactable.allowFrom() has been deprecated. Use Interactble.draggable({allowFrom: newValue}).')\n\n  /**\n   * ```js\n   * interact('.resize-drag')\n   *   .resizable(true)\n   *   .draggable(true)\n   *   .actionChecker(function (pointer, event, action, interactable, element, interaction) {\n   *\n   *   if (interact.matchesSelector(event.target, '.drag-handle') {\n   *     // force drag with handle target\n   *     action.name = drag\n   *   }\n   *   else {\n   *     // resize from the top and right edges\n   *     action.name  = 'resize'\n   *     action.edges = { top: true, right: true }\n   *   }\n   *\n   *   return action\n   * })\n   * ```\n   *\n   * Gets or sets the function used to check action to be performed on\n   * pointerDown\n   *\n   * @param {function | null} [checker] A function which takes a pointer event,\n   * defaultAction string, interactable, element and interaction as parameters\n   * and returns an object with name property 'drag' 'resize' or 'gesture' and\n   * optionally an `edges` object with boolean 'top', 'left', 'bottom' and right\n   * props.\n   * @return {Function | Interactable} The checker function or this Interactable\n   */\n  Interactable.prototype.actionChecker = actionChecker\n\n  /**\n   * Returns or sets whether the the cursor should be changed depending on the\n   * action that would be performed if the mouse were pressed and dragged.\n   *\n   * @param {boolean} [newValue]\n   * @return {boolean | Interactable} The current setting or this Interactable\n   */\n  Interactable.prototype.styleCursor = styleCursor\n\n  Interactable.prototype.defaultActionChecker = function (this: Interactable, pointer, event, interaction, element) {\n    return defaultActionChecker(this, pointer, event, interaction, element, actions)\n  }\n}\n\nfunction getAction (this: Interactable, pointer: Interact.PointerType, event: Interact.PointerEventType, interaction: Interaction, element: Element): Interact.ActionProps {\n  const action = this.defaultActionChecker(pointer, event, interaction, element)\n\n  if (this.options.actionChecker) {\n    return this.options.actionChecker(pointer, event, action, this, element, interaction)\n  }\n\n  return action\n}\n\nfunction defaultActionChecker (interactable: Interactable, pointer: Interact.PointerType, event: Interact.PointerEventType, interaction: Interaction, element: Element, actions: Actions) {\n  const rect = interactable.getRect(element)\n  const buttons = (event as MouseEvent).buttons || ({\n    0: 1,\n    1: 4,\n    3: 8,\n    4: 16,\n  })[(event as MouseEvent).button as 0 | 1 | 3 | 4]\n  let action = null\n\n  for (const actionName of actions.names) {\n    // check mouseButton setting if the pointer is down\n    if (interaction.pointerIsDown &&\n        /mouse|pointer/.test(interaction.pointerType) &&\n      (buttons & interactable.options[actionName].mouseButtons) === 0) {\n      continue\n    }\n\n    action = (actions[actionName as keyof Actions] as any).checker(pointer, event, interactable, element, interaction, rect)\n\n    if (action) {\n      return action\n    }\n  }\n}\n\nfunction styleCursor (this: Interactable, newValue?: boolean) {\n  if (is.bool(newValue)) {\n    this.options.styleCursor = newValue\n\n    return this\n  }\n\n  if (newValue === null) {\n    delete this.options.styleCursor\n\n    return this\n  }\n\n  return this.options.styleCursor\n}\n\nfunction actionChecker (this: Interactable, checker: any) {\n  if (is.func(checker)) {\n    this.options.actionChecker = checker\n\n    return this\n  }\n\n  if (checker === null) {\n    delete this.options.actionChecker\n\n    return this\n  }\n\n  return this.options.actionChecker\n}\n\nexport default {\n  id: 'auto-start/interactableMethods',\n  install,\n}\n","import * as utils from '@interactjs/utils'\nimport InteractableMethods from './InteractableMethods'\n\ndeclare module '@interactjs/interact/interact' {\n  interface InteractStatic {\n    maxInteractions: (newValue: any) => any\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    autoStart: AutoStart\n    maxInteractions: (...args: any) => any\n  }\n}\n\ndeclare module '@interactjs/core/defaultOptions' {\n  interface BaseDefaults {\n    actionChecker?\n    styleCursor?\n  }\n\n  interface PerActionDefaults {\n    manualStart?: boolean\n    max?: number\n    maxPerElement?: number\n    allowFrom?: string | Element\n    ignoreFrom?: string | Element\n\n    // only allow left button by default\n    // see https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons#Return_value\n    mouseButtons?: 0 | 1 | 2 | 4 | 16\n  }\n}\n\nexport interface AutoStart {\n  // Allow this many interactions to happen simultaneously\n  maxInteractions: number\n  withinInteractionLimit: typeof withinInteractionLimit\n  cursorElement: HTMLElement\n  signals: utils.Signals\n}\n\nfunction install (scope: Interact.Scope) {\n  const {\n    interact,\n    interactions,\n    defaults,\n  } = scope\n\n  scope.usePlugin(InteractableMethods)\n\n  // set cursor style on mousedown\n  interactions.signals.on('down', ({ interaction, pointer, event, eventTarget }) => {\n    if (interaction.interacting()) { return }\n\n    const actionInfo = getActionInfo(interaction, pointer, event, eventTarget, scope)\n    prepare(interaction, actionInfo, scope)\n  })\n\n  // set cursor style on mousemove\n  interactions.signals.on('move', ({ interaction, pointer, event, eventTarget }) => {\n    if (interaction.pointerType !== 'mouse' ||\n        interaction.pointerIsDown ||\n        interaction.interacting()) { return }\n\n    const actionInfo = getActionInfo(interaction, pointer, event, eventTarget, scope)\n    prepare(interaction, actionInfo, scope)\n  })\n\n  interactions.signals.on('move', (arg) => {\n    const { interaction } = arg\n\n    if (!interaction.pointerIsDown ||\n        interaction.interacting() ||\n        !interaction.pointerWasMoved ||\n        !interaction.prepared.name) {\n      return\n    }\n\n    scope.autoStart.signals.fire('before-start', arg)\n\n    const { interactable } = interaction\n\n    if (interaction.prepared.name && interactable) {\n      // check manualStart and interaction limit\n      if (interactable.options[interaction.prepared.name].manualStart ||\n          !withinInteractionLimit(interactable, interaction.element, interaction.prepared, scope)) {\n        interaction.stop()\n      }\n      else {\n        interaction.start(interaction.prepared, interactable, interaction.element)\n      }\n    }\n  })\n\n  interactions.signals.on('stop', ({ interaction }) => {\n    const { interactable } = interaction\n\n    if (interactable && interactable.options.styleCursor) {\n      setCursor(interaction.element as HTMLElement, '', scope)\n    }\n  })\n\n  defaults.base.actionChecker = null\n  defaults.base.styleCursor = true\n\n  utils.extend(defaults.perAction, {\n    manualStart: false,\n    max: Infinity,\n    maxPerElement: 1,\n    allowFrom:  null,\n    ignoreFrom: null,\n\n    // only allow left button by default\n    // see https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons#Return_value\n    mouseButtons: 1,\n  })\n\n  /**\n   * Returns or sets the maximum number of concurrent interactions allowed.  By\n   * default only 1 interaction is allowed at a time (for backwards\n   * compatibility). To allow multiple interactions on the same Interactables and\n   * elements, you need to enable it in the draggable, resizable and gesturable\n   * `'max'` and `'maxPerElement'` options.\n   *\n   * @alias module:interact.maxInteractions\n   *\n   * @param {number} [newValue] Any number. newValue <= 0 means no interactions.\n   */\n  interact.maxInteractions = (newValue) => maxInteractions(newValue, scope)\n\n  scope.autoStart = {\n    // Allow this many interactions to happen simultaneously\n    maxInteractions: Infinity,\n    withinInteractionLimit,\n    cursorElement: null,\n    signals: new utils.Signals(),\n  }\n}\n\n// Check if the current interactable supports the action.\n// If so, return the validated action. Otherwise, return null\nfunction validateAction (action, interactable, element, eventTarget, scope) {\n  if (interactable.testIgnoreAllow(interactable.options[action.name], element, eventTarget) &&\n      interactable.options[action.name].enabled &&\n      withinInteractionLimit(interactable, element, action, scope)) {\n    return action\n  }\n\n  return null\n}\n\nfunction validateMatches (interaction: Interact.Interaction, pointer, event, matches: Interact.Interactable[], matchElements: Element[], eventTarget: Element, scope: Interact.Scope) {\n  for (let i = 0, len = matches.length; i < len; i++) {\n    const match = matches[i]\n    const matchElement = matchElements[i]\n    const matchAction = match.getAction(pointer, event, interaction, matchElement)\n\n    if (!matchAction) { continue }\n\n    const action = validateAction(\n      matchAction,\n      match,\n      matchElement,\n      eventTarget,\n      scope)\n\n    if (action) {\n      return {\n        action,\n        interactable: match,\n        element: matchElement,\n      }\n    }\n  }\n\n  return { action: null, interactable: null, element: null }\n}\n\nfunction getActionInfo (interaction: Interact.Interaction, pointer: Interact.PointerType, event: Interact.PointerEventType, eventTarget: Element, scope: Interact.Scope) {\n  let matches = []\n  let matchElements = []\n\n  let element = eventTarget\n\n  function pushMatches (interactable) {\n    matches.push(interactable)\n    matchElements.push(element)\n  }\n\n  while (utils.is.element(element)) {\n    matches = []\n    matchElements = []\n\n    scope.interactables.forEachMatch(element, pushMatches)\n\n    const actionInfo = validateMatches(interaction, pointer, event, matches, matchElements, eventTarget, scope)\n\n    if (actionInfo.action &&\n      !actionInfo.interactable.options[actionInfo.action.name].manualStart) {\n      return actionInfo\n    }\n\n    element = utils.dom.parentNode(element)\n  }\n\n  return { action: null, interactable: null, element: null }\n}\n\nfunction prepare (interaction: Interact.Interaction, { action, interactable, element }, scope: Interact.Scope) {\n  action = action || {}\n\n  if (interaction.interactable && interaction.interactable.options.styleCursor) {\n    setCursor(interaction.element as HTMLElement, '', scope)\n  }\n\n  interaction.interactable = interactable\n  interaction.element = element\n  utils.copyAction(interaction.prepared, action)\n\n  interaction.rect = interactable && action.name\n    ? interactable.getRect(element)\n    : null\n\n  if (interactable && interactable.options.styleCursor) {\n    const cursor = action ? scope.actions[action.name].getCursor(action) : ''\n    setCursor(interaction.element as HTMLElement, cursor, scope)\n  }\n\n  scope.autoStart.signals.fire('prepared', { interaction })\n}\n\nfunction withinInteractionLimit (interactable: Interact.Interactable, element: Element, action, scope: Interact.Scope) {\n  const options = interactable.options\n  const maxActions = options[action.name].max\n  const maxPerElement = options[action.name].maxPerElement\n  const autoStartMax = scope.autoStart.maxInteractions\n  let activeInteractions = 0\n  let interactableCount = 0\n  let elementCount = 0\n\n  // no actions if any of these values == 0\n  if (!(maxActions && maxPerElement && autoStartMax)) { return false }\n\n  for (const interaction of scope.interactions.list) {\n    const otherAction = interaction.prepared.name\n\n    if (!interaction.interacting()) { continue }\n\n    activeInteractions++\n\n    if (activeInteractions >= autoStartMax) {\n      return false\n    }\n\n    if (interaction.interactable !== interactable) { continue }\n\n    interactableCount += otherAction === action.name ? 1 : 0\n\n    if (interactableCount >= maxActions) {\n      return false\n    }\n\n    if (interaction.element === element) {\n      elementCount++\n\n      if (otherAction === action.name && elementCount >= maxPerElement) {\n        return false\n      }\n    }\n  }\n\n  return autoStartMax > 0\n}\n\nfunction maxInteractions (newValue, scope: Interact.Scope) {\n  if (utils.is.number(newValue)) {\n    scope.autoStart.maxInteractions = newValue\n\n    return this\n  }\n\n  return scope.autoStart.maxInteractions\n}\n\nfunction setCursor (element: HTMLElement, cursor, scope: Interact.Scope) {\n  if (scope.autoStart.cursorElement) {\n    scope.autoStart.cursorElement.style.cursor = ''\n  }\n\n  element.ownerDocument.documentElement.style.cursor = cursor\n  element.style.cursor = cursor\n  scope.autoStart.cursorElement = cursor ? element : null\n}\n\nexport default {\n  id: 'auto-start/base',\n  install,\n  maxInteractions,\n  withinInteractionLimit,\n  validateAction,\n} as Interact.Plugin\n","import { ActionName } from '@interactjs/core/scope'\nimport { parentNode } from '@interactjs/utils/domUtils'\nimport * as is from '@interactjs/utils/is'\nimport autoStart from './base'\n\ntype Scope = import ('@interactjs/core/scope').Scope\n\nfunction install (scope: Scope) {\n  scope.autoStart.signals.on('before-start',  ({ interaction, eventTarget, dx, dy }) => {\n    if (interaction.prepared.name !== 'drag') { return }\n\n    // check if a drag is in the correct axis\n    const absX = Math.abs(dx)\n    const absY = Math.abs(dy)\n    const targetOptions = interaction.interactable.options.drag\n    const startAxis = targetOptions.startAxis\n    const currentAxis = (absX > absY ? 'x' : absX < absY ? 'y' : 'xy')\n\n    interaction.prepared.axis = targetOptions.lockAxis === 'start'\n      ? currentAxis[0]  as 'x' | 'y' // always lock to one axis even if currentAxis === 'xy'\n      : targetOptions.lockAxis\n\n    // if the movement isn't in the startAxis of the interactable\n    if (currentAxis !== 'xy' && startAxis !== 'xy' && startAxis !== currentAxis) {\n      // cancel the prepared action\n      interaction.prepared.name = null\n\n      // then try to get a drag from another ineractable\n      let element = eventTarget\n\n      const getDraggable = function (interactable) {\n        if (interactable === interaction.interactable) { return }\n\n        const options = interaction.interactable.options.drag\n\n        if (!options.manualStart &&\n            interactable.testIgnoreAllow(options, element, eventTarget)) {\n          const action = interactable.getAction(\n            interaction.downPointer, interaction.downEvent, interaction, element)\n\n          if (action &&\n              action.name === ActionName.Drag &&\n              checkStartAxis(currentAxis, interactable) &&\n              autoStart.validateAction(action, interactable, element, eventTarget, scope)) {\n            return interactable\n          }\n        }\n      }\n\n      // check all interactables\n      while (is.element(element)) {\n        const interactable = scope.interactables.forEachMatch(element, getDraggable)\n\n        if (interactable) {\n          interaction.prepared.name = ActionName.Drag\n          interaction.interactable = interactable\n          interaction.element = element\n          break\n        }\n\n        element = parentNode(element)\n      }\n    }\n  })\n\n  function checkStartAxis (startAxis, interactable) {\n    if (!interactable) { return false }\n\n    const thisAxis = interactable.options[ActionName.Drag].startAxis\n\n    return (startAxis === 'xy' || thisAxis === 'xy' || thisAxis === startAxis)\n  }\n}\n\nexport default {\n  id: 'auto-start/dragAxis',\n  install,\n}\n","import basePlugin from './base'\n\ndeclare module '@interactjs/core/defaultOptions' {\n  interface PerActionDefaults {\n    hold?: number\n    delay?: number\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    autoStartHoldTimer?: any\n  }\n}\n\nfunction install (scope: Interact.Scope) {\n  const {\n    autoStart,\n    interactions,\n    defaults,\n  } = scope\n\n  scope.usePlugin(basePlugin)\n\n  defaults.perAction.hold = 0\n  defaults.perAction.delay = 0\n\n  interactions.signals.on('new', (interaction) => {\n    interaction.autoStartHoldTimer = null\n  })\n\n  autoStart.signals.on('prepared', ({ interaction }) => {\n    const hold = getHoldDuration(interaction)\n\n    if (hold > 0) {\n      interaction.autoStartHoldTimer = setTimeout(() => {\n        interaction.start(interaction.prepared, interaction.interactable, interaction.element)\n      }, hold)\n    }\n  })\n\n  interactions.signals.on('move', ({ interaction, duplicate }) => {\n    if (interaction.pointerWasMoved && !duplicate) {\n      clearTimeout(interaction.autoStartHoldTimer)\n    }\n  })\n\n  // prevent regular down->move autoStart\n  autoStart.signals.on('before-start', ({ interaction }) => {\n    const hold = getHoldDuration(interaction)\n\n    if (hold > 0) {\n      interaction.prepared.name = null\n    }\n  })\n}\n\nfunction getHoldDuration (interaction) {\n  const actionName = interaction.prepared && interaction.prepared.name\n\n  if (!actionName) { return null }\n\n  const options = interaction.interactable.options\n\n  return options[actionName].hold || options[actionName].delay\n}\n\nexport default {\n  id: 'auto-start/hold',\n  install,\n  getHoldDuration,\n}\n","import autoStart from './base'\nimport dragAxis from './dragAxis'\nimport hold from './hold'\n\nfunction install (scope) {\n  scope.usePlugin(autoStart)\n  scope.usePlugin(hold)\n  scope.usePlugin(dragAxis)\n}\n\nconst id = 'auto-start'\n\nexport {\n  id,\n  install,\n  autoStart,\n  hold,\n  dragAxis,\n}\n","import Interactable from './Interactable'\nimport Interaction from './Interaction'\nimport { ActionName } from './scope'\n\nexport enum EventPhase {\n  Start = 'start',\n  Move = 'move',\n  End = 'end',\n  _NONE = '',\n}\n\nexport class BaseEvent<T extends ActionName = any> {\n  type: string\n  target: EventTarget\n  currentTarget: EventTarget\n  interactable: Interactable\n  _interaction: Interaction<T>\n  timeStamp: any\n  immediatePropagationStopped = false\n  propagationStopped = false\n\n  get interaction () {\n    return this._interaction._proxy\n  }\n\n  constructor (interaction) {\n    this._interaction = interaction\n  }\n\n  preventDefault () {}\n\n  /**\n   * Don't call any other listeners (even on the current target)\n   */\n  stopPropagation () {\n    this.propagationStopped = true\n  }\n\n  /**\n   * Don't call listeners on the remaining targets\n   */\n  stopImmediatePropagation () {\n    this.immediatePropagationStopped = this.propagationStopped = true\n  }\n}\n\nexport default BaseEvent\n","import * as arr from '@interactjs/utils/arr'\nimport extend from '@interactjs/utils/extend'\nimport normalize, { NormalizedListeners } from '@interactjs/utils/normalizeListeners'\nimport { EventPhase, InteractEvent } from './InteractEvent'\nimport { ActionName } from './scope'\n\nfunction fireUntilImmediateStopped<\nT extends ActionName,\nP extends EventPhase,\n> (event: InteractEvent<T, P>, listeners: Interact.Listener[]) {\n  for (const listener of listeners) {\n    if (event.immediatePropagationStopped) { break }\n\n    listener(event)\n  }\n}\n\nclass Eventable {\n  options: any\n  types: NormalizedListeners = {}\n  propagationStopped = false\n  immediatePropagationStopped = false\n  global: any\n\n  constructor (options?: { [index: string]: any }) {\n    this.options = extend({}, options || {})\n  }\n\n  fire (event: any) {\n    let listeners\n    const global = this.global\n\n    // Interactable#on() listeners\n    // tslint:disable no-conditional-assignment\n    if ((listeners = this.types[event.type])) {\n      fireUntilImmediateStopped(event, listeners)\n    }\n\n    // interact.on() listeners\n    if (!event.propagationStopped && global && (listeners = global[event.type]))  {\n      fireUntilImmediateStopped(event, listeners)\n    }\n  }\n\n  on (type: string, listener: Interact.ListenersArg) {\n    const listeners = normalize(type, listener)\n\n    for (type in listeners) {\n      this.types[type] = arr.merge(this.types[type] || [], listeners[type])\n    }\n  }\n\n  off (type: string, listener: Interact.ListenersArg) {\n    const listeners = normalize(type, listener)\n\n    for (type in listeners) {\n      const eventList = this.types[type]\n\n      if (!eventList || !eventList.length) { continue }\n\n      for (const subListener of listeners[type]) {\n        const index = eventList.indexOf(subListener)\n\n        if (index !== -1) {\n          eventList.splice(index, 1)\n        }\n      }\n    }\n  }\n}\n\nexport default Eventable\n","import extend from '@interactjs/utils/extend'\nimport getOriginXY from '@interactjs/utils/getOriginXY'\nimport hypot from '@interactjs/utils/hypot'\nimport BaseEvent from './BaseEvent'\nimport defaults from './defaultOptions'\nimport Interaction from './Interaction'\nimport { ActionName } from './scope'\n\nexport enum EventPhase {\n  Start = 'start',\n  Move = 'move',\n  End = 'end',\n  _NONE = '',\n}\n\nexport class InteractEvent<\n  T extends ActionName = any,\n  P extends EventPhase = EventPhase._NONE,\n> extends BaseEvent<T> {\n  target: Element\n  currentTarget: Element\n  relatedTarget: Element\n  screenX?: number\n  screenY?: number\n  button: number\n  buttons: number\n  ctrlKey: boolean\n  shiftKey: boolean\n  altKey: boolean\n  metaKey: boolean\n  page: Interact.Point\n  client: Interact.Point\n  delta: Interact.Point\n  rect: Required<Interact.Rect>\n  x0: number\n  y0: number\n  t0: number\n  dt: number\n  duration: number\n  clientX0: number\n  clientY0: number\n  velocity: Interact.Point\n  speed: number\n  swipe: ReturnType<InteractEvent<T>['getSwipe']>\n  timeStamp: any\n  // drag\n  dragEnter?: Element\n  dragLeave?: Element\n  // resize\n  axes?: Interact.Point\n  preEnd?: boolean\n\n  /** */\n  constructor (\n    interaction: Interaction,\n    event: Interact.PointerEventType,\n    actionName: T,\n    phase: P,\n    element: Element,\n    related?: Element,\n    preEnd?: boolean,\n    type?: string,\n  ) {\n    super(interaction)\n\n    element = element || interaction.element\n\n    const target      = interaction.interactable\n    // FIXME: add deltaSource to defaults\n    const deltaSource = (((target && target.options) || defaults) as any).deltaSource as 'page' | 'client'\n    const origin      = getOriginXY(target, element, actionName)\n    const starting    = phase === 'start'\n    const ending      = phase === 'end'\n    const prevEvent   = starting ? this : interaction.prevEvent\n    const coords      = starting\n      ? interaction.coords.start\n      : ending\n        ? { page: prevEvent.page, client: prevEvent.client, timeStamp: interaction.coords.cur.timeStamp }\n        : interaction.coords.cur\n\n    this.page      = extend({}, coords.page)\n    this.client    = extend({}, coords.client)\n    this.rect      = extend({}, interaction.rect)\n    this.timeStamp = coords.timeStamp\n\n    if (!ending) {\n      this.page.x -= origin.x\n      this.page.y -= origin.y\n\n      this.client.x -= origin.x\n      this.client.y -= origin.y\n    }\n\n    this.ctrlKey       = event.ctrlKey\n    this.altKey        = event.altKey\n    this.shiftKey      = event.shiftKey\n    this.metaKey       = event.metaKey\n    this.button        = (event as MouseEvent).button\n    this.buttons       = (event as MouseEvent).buttons\n    this.target        = element\n    this.currentTarget = element\n    this.relatedTarget = related || null\n    this.preEnd        = preEnd\n    this.type          = type || (actionName + (phase || ''))\n    this.interactable  = target\n\n    this.t0 = starting\n      ? interaction.pointers[interaction.pointers.length - 1].downTime\n      : prevEvent.t0\n\n    this.x0       = interaction.coords.start.page.x - origin.x\n    this.y0       = interaction.coords.start.page.y - origin.y\n    this.clientX0 = interaction.coords.start.client.x - origin.x\n    this.clientY0 = interaction.coords.start.client.y - origin.y\n\n    if (starting || ending) {\n      this.delta = { x: 0, y: 0 }\n    }\n    else {\n      this.delta = {\n        x: this[deltaSource].x - prevEvent[deltaSource].x,\n        y: this[deltaSource].y - prevEvent[deltaSource].y,\n      }\n    }\n\n    this.dt        = interaction.coords.delta.timeStamp\n    this.duration  = this.timeStamp - this.t0\n\n    // velocity and speed in pixels per second\n    this.velocity = extend({}, interaction.coords.velocity[deltaSource])\n    this.speed = hypot(this.velocity.x, this.velocity.y)\n\n    this.swipe = (ending || phase === 'inertiastart') ? this.getSwipe() : null\n  }\n\n  get pageX () { return this.page.x }\n  set pageX (value) { this.page.x = value }\n  get pageY () { return this.page.y }\n  set pageY (value) { this.page.y = value }\n\n  get clientX () { return this.client.x }\n  set clientX (value) { this.client.x = value }\n  get clientY () { return this.client.y }\n  set clientY (value) { this.client.y = value }\n\n  get dx () { return this.delta.x }\n  set dx (value) { this.delta.x = value }\n  get dy () { return this.delta.y }\n  set dy (value) { this.delta.y = value }\n\n  get velocityX () { return this.velocity.x }\n  set velocityX (value) { this.velocity.x = value }\n  get velocityY () { return this.velocity.y }\n  set velocityY (value) { this.velocity.y = value }\n\n  getSwipe () {\n    const interaction = this._interaction\n\n    if (interaction.prevEvent.speed < 600 ||\n        this.timeStamp - interaction.prevEvent.timeStamp > 150) {\n      return null\n    }\n\n    let angle = 180 * Math.atan2(interaction.prevEvent.velocityY, interaction.prevEvent.velocityX) / Math.PI\n    const overlap = 22.5\n\n    if (angle < 0) {\n      angle += 360\n    }\n\n    const left = 135 - overlap <= angle && angle < 225 + overlap\n    const up   = 225 - overlap <= angle && angle < 315 + overlap\n\n    const right = !left && (315 - overlap <= angle || angle <  45 + overlap)\n    const down  = !up   &&   45 - overlap <= angle && angle < 135 + overlap\n\n    return {\n      up,\n      down,\n      left,\n      right,\n      angle,\n      speed: interaction.prevEvent.speed,\n      velocity: {\n        x: interaction.prevEvent.velocityX,\n        y: interaction.prevEvent.velocityY,\n      },\n    }\n  }\n\n  preventDefault () {}\n\n  /**\n   * Don't call listeners on the remaining targets\n   */\n  stopImmediatePropagation () {\n    this.immediatePropagationStopped = this.propagationStopped = true\n  }\n\n  /**\n   * Don't call any other listeners (even on the current target)\n   */\n  stopPropagation () {\n    this.propagationStopped = true\n  }\n}\n\nexport default InteractEvent\n","import * as arr from '@interactjs/utils/arr'\nimport browser from '@interactjs/utils/browser'\nimport clone from '@interactjs/utils/clone'\nimport { getElementRect, matchesUpTo, nodeContains, trySelector } from '@interactjs/utils/domUtils'\nimport events from '@interactjs/utils/events'\nimport extend from '@interactjs/utils/extend'\nimport * as is from '@interactjs/utils/is'\nimport normalizeListeners from '@interactjs/utils/normalizeListeners'\nimport { getWindow } from '@interactjs/utils/window'\nimport { ActionDefaults, Defaults, Options } from './defaultOptions'\nimport Eventable from './Eventable'\nimport { Actions } from './scope'\n\ntype IgnoreValue = string | Element | boolean\n\n/** */\nexport class Interactable implements Partial<Eventable> {\n  protected get _defaults (): Defaults {\n    return {\n      base: {},\n      perAction: {},\n      actions: {} as ActionDefaults,\n    }\n  }\n\n  readonly options!: Required<Options>\n  readonly _actions: Actions\n  readonly target: Interact.Target\n  readonly events = new Eventable()\n  readonly _context: Document | Element\n  readonly _win: Window\n  readonly _doc: Document\n\n  /** */\n  constructor (target: Interact.Target, options: any, defaultContext: Document | Element) {\n    this._actions = options.actions\n    this.target   = target\n    this._context = options.context || defaultContext\n    this._win     = getWindow(trySelector(target) ? this._context : target)\n    this._doc     = this._win.document\n\n    this.set(options)\n  }\n\n  setOnEvents (actionName: string, phases: NonNullable<any>) {\n    if (is.func(phases.onstart)) { this.on(`${actionName}start`, phases.onstart) }\n    if (is.func(phases.onmove)) { this.on(`${actionName}move`, phases.onmove) }\n    if (is.func(phases.onend)) { this.on(`${actionName}end`, phases.onend) }\n    if (is.func(phases.oninertiastart)) { this.on(`${actionName}inertiastart`, phases.oninertiastart) }\n\n    return this\n  }\n\n  updatePerActionListeners (actionName, prev, cur) {\n    if (is.array(prev) || is.object(prev)) {\n      this.off(actionName, prev)\n    }\n\n    if (is.array(cur) || is.object(cur)) {\n      this.on(actionName, cur)\n    }\n  }\n\n  setPerAction (actionName, options: Interact.OrBoolean<Options>) {\n    const defaults = this._defaults\n\n    // for all the default per-action options\n    for (const optionName in options) {\n      const actionOptions = this.options[actionName]\n      const optionValue = options[optionName]\n      const isArray = is.array(optionValue)\n\n      // remove old event listeners and add new ones\n      if (optionName === 'listeners') {\n        this.updatePerActionListeners(actionName, actionOptions.listeners, optionValue)\n      }\n\n      // if the option value is an array\n      if (isArray) {\n        actionOptions[optionName] = arr.from(optionValue)\n      }\n      // if the option value is an object\n      else if (!isArray && is.plainObject(optionValue)) {\n        // copy the object\n        actionOptions[optionName] = extend(\n          actionOptions[optionName] || {},\n          clone(optionValue))\n\n        // set anabled field to true if it exists in the defaults\n        if (is.object(defaults.perAction[optionName]) && 'enabled' in defaults.perAction[optionName]) {\n          actionOptions[optionName].enabled = optionValue.enabled !== false\n        }\n      }\n      // if the option value is a boolean and the default is an object\n      else if (is.bool(optionValue) && is.object(defaults.perAction[optionName])) {\n        actionOptions[optionName].enabled = optionValue\n      }\n      // if it's anything else, do a plain assignment\n      else {\n        actionOptions[optionName] = optionValue\n      }\n    }\n  }\n\n  /**\n   * The default function to get an Interactables bounding rect. Can be\n   * overridden using {@link Interactable.rectChecker}.\n   *\n   * @param {Element} [element] The element to measure.\n   * @return {object} The object's bounding rectangle.\n   */\n  getRect (element: Element) {\n    element = element || (is.element(this.target)\n      ? this.target\n      : null)\n\n    if (is.string(this.target)) {\n      element = element || this._context.querySelector(this.target)\n    }\n\n    return getElementRect(element)\n  }\n\n  /**\n   * Returns or sets the function used to calculate the interactable's\n   * element's rectangle\n   *\n   * @param {function} [checker] A function which returns this Interactable's\n   * bounding rectangle. See {@link Interactable.getRect}\n   * @return {function | object} The checker function or this Interactable\n   */\n  rectChecker (checker: (element: Element) => any) {\n    if (is.func(checker)) {\n      this.getRect = checker\n\n      return this\n    }\n\n    if (checker === null) {\n      delete this.getRect\n\n      return this\n    }\n\n    return this.getRect\n  }\n\n  _backCompatOption (optionName, newValue) {\n    if (trySelector(newValue) || is.object(newValue)) {\n      this.options[optionName] = newValue\n\n      for (const action of this._actions.names) {\n        this.options[action][optionName] = newValue\n      }\n\n      return this\n    }\n\n    return this.options[optionName]\n  }\n\n  /**\n   * Gets or sets the origin of the Interactable's element.  The x and y\n   * of the origin will be subtracted from action event coordinates.\n   *\n   * @param {Element | object | string} [origin] An HTML or SVG Element whose\n   * rect will be used, an object eg. { x: 0, y: 0 } or string 'parent', 'self'\n   * or any CSS selector\n   *\n   * @return {object} The current origin or this Interactable\n   */\n  origin (newValue) {\n    return this._backCompatOption('origin', newValue)\n  }\n\n  /**\n   * Returns or sets the mouse coordinate types used to calculate the\n   * movement of the pointer.\n   *\n   * @param {string} [newValue] Use 'client' if you will be scrolling while\n   * interacting; Use 'page' if you want autoScroll to work\n   * @return {string | object} The current deltaSource or this Interactable\n   */\n  deltaSource (newValue) {\n    if (newValue === 'page' || newValue === 'client') {\n      this.options.deltaSource = newValue\n\n      return this\n    }\n\n    return this.options.deltaSource\n  }\n\n  /**\n   * Gets the selector context Node of the Interactable. The default is\n   * `window.document`.\n   *\n   * @return {Node} The context Node of this Interactable\n   */\n  context () {\n    return this._context\n  }\n\n  inContext (element) {\n    return (this._context === element.ownerDocument ||\n            nodeContains(this._context, element))\n  }\n\n  testIgnoreAllow (this: Interactable, options: { ignoreFrom: IgnoreValue, allowFrom: IgnoreValue }, interactableElement: Element, eventTarget: Element) {\n    return (!this.testIgnore(options.ignoreFrom, interactableElement, eventTarget) &&\n            this.testAllow(options.allowFrom, interactableElement, eventTarget))\n  }\n\n  testAllow (this: Interactable, allowFrom: IgnoreValue, interactableElement: Element, element: Element) {\n    if (!allowFrom) { return true }\n\n    if (!is.element(element)) { return false }\n\n    if (is.string(allowFrom)) {\n      return matchesUpTo(element, allowFrom, interactableElement)\n    }\n    else if (is.element(allowFrom)) {\n      return nodeContains(allowFrom, element)\n    }\n\n    return false\n  }\n\n  testIgnore (this: Interactable, ignoreFrom: IgnoreValue, interactableElement: Element, element: Element) {\n    if (!ignoreFrom || !is.element(element)) { return false }\n\n    if (is.string(ignoreFrom)) {\n      return matchesUpTo(element, ignoreFrom, interactableElement)\n    }\n    else if (is.element(ignoreFrom)) {\n      return nodeContains(ignoreFrom, element)\n    }\n\n    return false\n  }\n\n  /**\n   * Calls listeners for the given InteractEvent type bound globally\n   * and directly to this Interactable\n   *\n   * @param {InteractEvent} iEvent The InteractEvent object to be fired on this\n   * Interactable\n   * @return {Interactable} this Interactable\n   */\n  fire (iEvent) {\n    this.events.fire(iEvent)\n\n    return this\n  }\n\n  _onOff (method: 'on' | 'off', typeArg: Interact.EventTypes, listenerArg?: Interact.ListenersArg | null, options?: any) {\n    if (is.object(typeArg) && !is.array(typeArg)) {\n      options = listenerArg\n      listenerArg = null\n    }\n\n    const addRemove = method === 'on' ? 'add' : 'remove'\n    const listeners = normalizeListeners(typeArg, listenerArg)\n\n    for (let type in listeners) {\n      if (type === 'wheel') { type = browser.wheelEvent }\n\n      for (const listener of listeners[type]) {\n        // if it is an action event type\n        if (arr.contains(this._actions.eventTypes, type)) {\n          this.events[method](type, listener)\n        }\n        // delegated event\n        else if (is.string(this.target)) {\n          events[`${addRemove}Delegate`](this.target, this._context, type, listener, options)\n        }\n        // remove listener from this Interatable's element\n        else {\n          (events[addRemove] as typeof events.remove)(this.target, type, listener, options)\n        }\n      }\n    }\n\n    return this\n  }\n\n  /**\n   * Binds a listener for an InteractEvent, pointerEvent or DOM event.\n   *\n   * @param {string | array | object} types The types of events to listen\n   * for\n   * @param {function | array | object} [listener] The event listener function(s)\n   * @param {object | boolean} [options] options object or useCapture flag for\n   * addEventListener\n   * @return {Interactable} This Interactable\n   */\n  on (types: Interact.EventTypes, listener?: Interact.ListenersArg, options?: any) {\n    return this._onOff('on', types, listener, options)\n  }\n\n  /**\n   * Removes an InteractEvent, pointerEvent or DOM event listener.\n   *\n   * @param {string | array | object} types The types of events that were\n   * listened for\n   * @param {function | array | object} [listener] The event listener function(s)\n   * @param {object | boolean} [options] options object or useCapture flag for\n   * removeEventListener\n   * @return {Interactable} This Interactable\n   */\n  off (types: string | string[] | Interact.EventTypes, listener?: Interact.ListenersArg, options?: any) {\n    return this._onOff('off', types, listener, options)\n  }\n\n  /**\n   * Reset the options of this Interactable\n   *\n   * @param {object} options The new settings to apply\n   * @return {object} This Interactable\n   */\n  set (options: Interact.OptionsArg) {\n    const defaults = this._defaults\n\n    if (!is.object(options)) {\n      options = {}\n    }\n\n    (this.options as Required<Options>) = clone(defaults.base) as Required<Options>\n\n    for (const actionName in this._actions.methodDict) {\n      const methodName = this._actions.methodDict[actionName]\n\n      this.options[actionName] = {}\n      this.setPerAction(actionName, extend(extend({}, defaults.perAction), defaults.actions[actionName]))\n\n      this[methodName](options[actionName])\n    }\n\n    for (const setting in options) {\n      if (is.func(this[setting])) {\n        this[setting](options[setting])\n      }\n    }\n\n    return this\n  }\n\n  /**\n   * Remove this interactable from the list of interactables and remove it's\n   * action capabilities and event listeners\n   *\n   * @return {interact}\n   */\n  unset () {\n    events.remove(this.target as Node, 'all')\n\n    if (is.string(this.target)) {\n      // remove delegated events\n      for (const type in events.delegatedEvents) {\n        const delegated = events.delegatedEvents[type]\n\n        if (delegated.selectors[0] === this.target &&\n            delegated.contexts[0] === this._context) {\n          delegated.selectors.splice(0, 1)\n          delegated.contexts.splice(0, 1)\n          delegated.listeners.splice(0, 1)\n\n          // remove the arrays if they are empty\n          if (!delegated.selectors.length) {\n            delegated[type] = null\n          }\n        }\n\n        events.remove(this._context, type, events.delegateListener)\n        events.remove(this._context, type, events.delegateUseCapture, true)\n      }\n    }\n    else {\n      events.remove(this.target as Node, 'all')\n    }\n  }\n}\n\nexport default Interactable\n","import * as arr from '@interactjs/utils/arr'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport * as is from '@interactjs/utils/is'\nimport Signals from '@interactjs/utils/Signals'\n\nexport default class InteractableSet {\n  signals = new Signals()\n\n  // all set interactables\n  list: Interact.Interactable[] = []\n\n  selectorMap: {\n    [selector: string]: Array<{ context: Document | Element, interactable: Interact.Interactable }>\n  } = {}\n\n  constructor (protected scope: Interact.Scope) {\n    this.signals.on('unset', ({ interactable }) => {\n      const { target, _context: context } = interactable\n      const targetMappings = is.string(target)\n        ? this.selectorMap[target]\n        : target[this.scope.id]\n\n      targetMappings.splice(targetMappings.findIndex((m) => m.context === context), 1)\n    })\n  }\n\n  new (target: Interact.Target, options?: any): Interact.Interactable {\n    options = extend(options || {}, {\n      actions: this.scope.actions,\n    })\n    const interactable = new this.scope.Interactable(target, options, this.scope.document)\n    const mappingInfo = { context: interactable._context, interactable }\n\n    this.scope.addDocument(interactable._doc)\n    this.list.push(interactable)\n\n    if (is.string(target)) {\n      if (!this.selectorMap[target]) { this.selectorMap[target] = [] }\n      this.selectorMap[target].push(mappingInfo)\n    } else {\n      if (!interactable.target[this.scope.id]) {\n        Object.defineProperty(target, this.scope.id, {\n          value: [],\n          configurable: true,\n        })\n      }\n\n      target[this.scope.id].push(mappingInfo)\n    }\n\n    this.signals.fire('new', {\n      target,\n      options,\n      interactable,\n      win: this.scope._win,\n    })\n\n    return interactable\n  }\n\n  get (target: Interact.Target, options) {\n    const context = (options && options.context) || this.scope.document\n    const isSelector = is.string(target)\n    const targetMappings = isSelector\n      ? this.selectorMap[target as string]\n      : target[this.scope.id]\n\n    if (!targetMappings) { return null }\n\n    const found = arr.find(\n      targetMappings,\n      (m) => m.context === context &&\n        (isSelector || m.interactable.inContext(target)))\n\n    return found && found.interactable\n  }\n\n  forEachMatch (element: Document | Element, callback: (interactable: any) => any) {\n    for (const interactable of this.list) {\n      let ret\n\n      if ((is.string(interactable.target)\n      // target is a selector and the element matches\n        ? (is.element(element) && domUtils.matchesSelector(element, interactable.target))\n        // target is the element\n        : element === interactable.target) &&\n        // the element is in context\n        (interactable.inContext(element))) {\n        ret = callback(interactable)\n      }\n\n      if (ret !== undefined) {\n        return ret\n      }\n    }\n  }\n}\n","import * as utils from '@interactjs/utils'\nimport Interactable from './Interactable'\nimport InteractEvent, { EventPhase } from './InteractEvent'\nimport PointerInfo from './PointerInfo'\nimport { ActionName } from './scope'\n\nexport interface ActionProps<T extends ActionName = any> {\n  name: T\n  axis?: 'x' | 'y' | 'xy'\n  edges?: {\n    [edge in keyof Interact.Rect]?: boolean\n  }\n}\n\nexport interface StartAction extends ActionProps {\n  name: ActionName | string\n}\n\nexport type InteractionProxy = Pick<Interaction,\n  'pointerIsDown' |\n  'pointerWasMoved' |\n  'start' |\n  'move' |\n  'end' |\n  'stop' |\n  'interacting' |\n  '_proxy'\n>\n\nexport class Interaction<T extends ActionName = any> {\n  // current interactable being interacted with\n  interactable: Interactable = null\n\n  // the target element of the interactable\n  element: Element = null\n  rect: Interact.Rect & Interact.Size\n  edges: {\n    [P in keyof Interact.Rect]?: boolean\n  }\n\n  _signals: utils.Signals\n\n  // action that's ready to be fired on next move event\n  prepared: ActionProps<T> = {\n    name : null,\n    axis : null,\n    edges: null,\n  }\n\n  pointerType: string\n\n  // keep track of added pointers\n  pointers: PointerInfo[] = []\n\n  // pointerdown/mousedown/touchstart event\n  downEvent: Interact.PointerEventType = null\n\n  downPointer: Interact.PointerType = {} as Interact.PointerType\n\n  _latestPointer: {\n    pointer: Interact.EventTarget\n    event: Interact.PointerEventType\n    eventTarget: Node,\n  } = {\n    pointer: null,\n    event: null,\n    eventTarget: null,\n  }\n\n  // previous action event\n  prevEvent: InteractEvent<T> = null\n\n  pointerIsDown = false\n  pointerWasMoved = false\n  _interacting = false\n  _ending = false\n  _proxy: InteractionProxy = null\n\n  simulation = null\n\n  get pointerMoveTolerance () {\n    return 1\n  }\n\n  /**\n   * @alias Interaction.prototype.move\n   */\n  doMove = utils.warnOnce(\n    function (this: Interaction, signalArg: any) {\n      this.move(signalArg)\n    },\n    'The interaction.doMove() method has been renamed to interaction.move()')\n\n  coords = {\n    // Starting InteractEvent pointer coordinates\n    start: utils.pointer.newCoords(),\n    // Previous native pointer move event coordinates\n    prev: utils.pointer.newCoords(),\n    // current native pointer move event coordinates\n    cur: utils.pointer.newCoords(),\n    // Change in coordinates and time of the pointer\n    delta: utils.pointer.newCoords(),\n    // pointer velocity\n    velocity: utils.pointer.newCoords(),\n  }\n\n  /** */\n  constructor ({ pointerType, signals }: { pointerType?: string, signals: utils.Signals }) {\n    this._signals = signals\n    this.pointerType = pointerType\n\n    const that = this\n\n    this._proxy = {\n      get pointerIsDown () { return that.pointerIsDown },\n      get pointerWasMoved () { return that.pointerWasMoved },\n      start (action, i, e) { return that.start(action, i, e) },\n      move (arg) { return that.move(arg) },\n      end (event) { return that.end(event) },\n      stop () { return that.stop() },\n      interacting () { return that.interacting() },\n      get _proxy () { return this },\n    }\n\n    this._signals.fire('new', { interaction: this })\n  }\n\n  pointerDown (pointer: Interact.PointerType, event: Interact.PointerEventType, eventTarget: EventTarget) {\n    const pointerIndex = this.updatePointer(pointer, event, eventTarget, true)\n\n    this._signals.fire('down', {\n      pointer,\n      event,\n      eventTarget,\n      pointerIndex,\n      interaction: this,\n    })\n  }\n\n  /**\n   * ```js\n   * interact(target)\n   *   .draggable({\n   *     // disable the default drag start by down->move\n   *     manualStart: true\n   *   })\n   *   // start dragging after the user holds the pointer down\n   *   .on('hold', function (event) {\n   *     var interaction = event.interaction\n   *\n   *     if (!interaction.interacting()) {\n   *       interaction.start({ name: 'drag' },\n   *                         event.interactable,\n   *                         event.currentTarget)\n   *     }\n   * })\n   * ```\n   *\n   * Start an action with the given Interactable and Element as tartgets. The\n   * action must be enabled for the target Interactable and an appropriate\n   * number of pointers must be held down - 1 for drag/resize, 2 for gesture.\n   *\n   * Use it with `interactable.<action>able({ manualStart: false })` to always\n   * [start actions manually](https://github.com/taye/interact.js/issues/114)\n   *\n   * @param {object} action   The action to be performed - drag, resize, etc.\n   * @param {Interactable} target  The Interactable to target\n   * @param {Element} element The DOM Element to target\n   * @return {object} interact\n   */\n  start (action: StartAction, interactable: Interactable, element: Element) {\n    if (this.interacting() ||\n        !this.pointerIsDown ||\n        this.pointers.length < (action.name === ActionName.Gesture ? 2 : 1) ||\n        !interactable.options[action.name].enabled) {\n      return false\n    }\n\n    utils.copyAction(this.prepared, action)\n\n    this.interactable = interactable\n    this.element      = element\n    this.rect         = interactable.getRect(element)\n    this.edges        = this.prepared.edges\n    this._interacting = this._doPhase({\n      interaction: this,\n      event: this.downEvent,\n      phase: EventPhase.Start,\n    })\n\n    return this._interacting\n  }\n\n  pointerMove (pointer: Interact.PointerType, event: Interact.PointerEventType, eventTarget: EventTarget) {\n    if (!this.simulation) {\n      this.updatePointer(pointer, event, eventTarget, false)\n      utils.pointer.setCoords(this.coords.cur, this.pointers.map((p) => p.pointer), this._now())\n    }\n\n    const duplicateMove = (this.coords.cur.page.x === this.coords.prev.page.x &&\n                           this.coords.cur.page.y === this.coords.prev.page.y &&\n                           this.coords.cur.client.x === this.coords.prev.client.x &&\n                           this.coords.cur.client.y === this.coords.prev.client.y)\n\n    let dx\n    let dy\n\n    // register movement greater than pointerMoveTolerance\n    if (this.pointerIsDown && !this.pointerWasMoved) {\n      dx = this.coords.cur.client.x - this.coords.start.client.x\n      dy = this.coords.cur.client.y - this.coords.start.client.y\n\n      this.pointerWasMoved = utils.hypot(dx, dy) > this.pointerMoveTolerance\n    }\n\n    const signalArg = {\n      pointer,\n      pointerIndex: this.getPointerIndex(pointer),\n      event,\n      eventTarget,\n      dx,\n      dy,\n      duplicate: duplicateMove,\n      interaction: this,\n    }\n\n    if (!duplicateMove) {\n      // set pointer coordinate, time changes and velocity\n      utils.pointer.setCoordDeltas(this.coords.delta, this.coords.prev, this.coords.cur)\n      utils.pointer.setCoordVelocity(this.coords.velocity, this.coords.delta)\n    }\n\n    this._signals.fire('move', signalArg)\n\n    if (!duplicateMove) {\n      // if interacting, fire an 'action-move' signal etc\n      if (this.interacting()) {\n        this.move(signalArg)\n      }\n\n      if (this.pointerWasMoved) {\n        utils.pointer.copyCoords(this.coords.prev, this.coords.cur)\n      }\n    }\n  }\n\n  /**\n   * ```js\n   * interact(target)\n   *   .draggable(true)\n   *   .on('dragmove', function (event) {\n   *     if (someCondition) {\n   *       // change the snap settings\n   *       event.interactable.draggable({ snap: { targets: [] }})\n   *       // fire another move event with re-calculated snap\n   *       event.interaction.move()\n   *     }\n   *   })\n   * ```\n   *\n   * Force a move of the current action at the same coordinates. Useful if\n   * snap/restrict has been changed and you want a movement with the new\n   * settings.\n   */\n  move (signalArg?) {\n    signalArg = utils.extend({\n      pointer: this._latestPointer.pointer,\n      event: this._latestPointer.event,\n      eventTarget: this._latestPointer.eventTarget,\n      interaction: this,\n    }, signalArg || {})\n\n    signalArg.phase = EventPhase.Move\n\n    this._doPhase(signalArg)\n  }\n\n  // End interact move events and stop auto-scroll unless simulation is running\n  pointerUp (pointer: Interact.PointerType, event: Interact.PointerEventType, eventTarget: EventTarget, curEventTarget: EventTarget) {\n    let pointerIndex = this.getPointerIndex(pointer)\n\n    if (pointerIndex === -1) {\n      pointerIndex = this.updatePointer(pointer, event, eventTarget, false)\n    }\n\n    this._signals.fire(/cancel$/i.test(event.type) ? 'cancel' : 'up', {\n      pointer,\n      pointerIndex,\n      event,\n      eventTarget,\n      curEventTarget,\n      interaction: this,\n    })\n\n    if (!this.simulation) {\n      this.end(event)\n    }\n\n    this.pointerIsDown = false\n    this.removePointer(pointer, event)\n  }\n\n  documentBlur (event) {\n    this.end(event)\n    this._signals.fire('blur', { event, interaction: this })\n  }\n\n  /**\n   * ```js\n   * interact(target)\n   *   .draggable(true)\n   *   .on('move', function (event) {\n   *     if (event.pageX > 1000) {\n   *       // end the current action\n   *       event.interaction.end()\n   *       // stop all further listeners from being called\n   *       event.stopImmediatePropagation()\n   *     }\n   *   })\n   * ```\n   *\n   * @param {PointerEvent} [event]\n   */\n  end (event?: Interact.PointerEventType) {\n    this._ending = true\n    event = event || this._latestPointer.event\n    let endPhaseResult\n\n    if (this.interacting()) {\n      endPhaseResult = this._doPhase({\n        event,\n        interaction: this,\n        phase: EventPhase.End,\n      })\n    }\n\n    this._ending = false\n\n    if (endPhaseResult === true) {\n      this.stop()\n    }\n  }\n\n  currentAction () {\n    return this._interacting ? this.prepared.name : null\n  }\n\n  interacting () {\n    return this._interacting\n  }\n\n  /** */\n  stop () {\n    this._signals.fire('stop', { interaction: this })\n\n    this.interactable = this.element = null\n\n    this._interacting = false\n    this.prepared.name = this.prevEvent = null\n  }\n\n  getPointerIndex (pointer) {\n    const pointerId = utils.pointer.getPointerId(pointer)\n\n    // mouse and pen interactions may have only one pointer\n    return (this.pointerType === 'mouse' || this.pointerType === 'pen')\n      ? this.pointers.length - 1\n      : utils.arr.findIndex(this.pointers, (curPointer) => curPointer.id === pointerId)\n  }\n\n  getPointerInfo (pointer) {\n    return this.pointers[this.getPointerIndex(pointer)]\n  }\n\n  updatePointer (pointer: Interact.PointerType, event: Interact.PointerEventType, eventTarget: EventTarget, down?: boolean) {\n    const id = utils.pointer.getPointerId(pointer)\n    let pointerIndex = this.getPointerIndex(pointer)\n    let pointerInfo = this.pointers[pointerIndex]\n\n    down = down === false\n      ? false\n      : down || /(down|start)$/i.test(event.type)\n\n    if (!pointerInfo) {\n      pointerInfo = new PointerInfo(\n        id,\n        pointer,\n        event,\n        null,\n        null,\n      )\n\n      pointerIndex = this.pointers.length\n      this.pointers.push(pointerInfo)\n    }\n    else {\n      pointerInfo.pointer = pointer\n    }\n\n    if (down) {\n      this.pointerIsDown = true\n\n      if (!this.interacting()) {\n        utils.pointer.setCoords(this.coords.start, this.pointers.map((p) => p.pointer), this._now())\n\n        utils.pointer.copyCoords(this.coords.cur, this.coords.start)\n        utils.pointer.copyCoords(this.coords.prev, this.coords.start)\n        utils.pointer.pointerExtend(this.downPointer, pointer)\n\n        this.downEvent = event\n        pointerInfo.downTime = this.coords.cur.timeStamp\n        pointerInfo.downTarget = eventTarget\n\n        this.pointerWasMoved = false\n      }\n    }\n\n    this._updateLatestPointer(pointer, event, eventTarget)\n\n    this._signals.fire('update-pointer', {\n      pointer,\n      event,\n      eventTarget,\n      down,\n      pointerInfo,\n      pointerIndex,\n      interaction: this,\n    })\n\n    return pointerIndex\n  }\n\n  removePointer (pointer, event) {\n    const pointerIndex = this.getPointerIndex(pointer)\n\n    if (pointerIndex === -1) { return }\n\n    const pointerInfo = this.pointers[pointerIndex]\n\n    this._signals.fire('remove-pointer', {\n      pointer,\n      event,\n      pointerIndex,\n      pointerInfo,\n      interaction: this,\n    })\n\n    this.pointers.splice(pointerIndex, 1)\n  }\n\n  _updateLatestPointer (pointer, event, eventTarget) {\n    this._latestPointer.pointer = pointer\n    this._latestPointer.event = event\n    this._latestPointer.eventTarget = eventTarget\n  }\n\n  _createPreparedEvent (event: Interact.PointerEventType, phase: EventPhase, preEnd: boolean, type: string) {\n    const actionName = this.prepared.name\n\n    return new InteractEvent(this, event, actionName, phase, this.element, null, preEnd, type)\n  }\n\n  _fireEvent (iEvent) {\n    this.interactable.fire(iEvent)\n\n    if (!this.prevEvent || iEvent.timeStamp >= this.prevEvent.timeStamp) {\n      this.prevEvent = iEvent\n    }\n  }\n\n  _doPhase (signalArg: Partial<Interact.SignalArg>) {\n    const { event, phase, preEnd, type } = signalArg\n    const beforeResult = this._signals.fire(`before-action-${phase}`, signalArg)\n\n    if (beforeResult === false) {\n      return false\n    }\n\n    const iEvent = signalArg.iEvent = this._createPreparedEvent(event, phase, preEnd, type)\n    const { rect } = this\n\n    if (rect) {\n      // update the rect modifications\n      const edges = this.edges || this.prepared.edges || { left: true, right: true, top: true, bottom: true }\n\n      if (edges.top)    { rect.top    += iEvent.delta.y }\n      if (edges.bottom) { rect.bottom += iEvent.delta.y }\n      if (edges.left)   { rect.left   += iEvent.delta.x }\n      if (edges.right)  { rect.right  += iEvent.delta.x }\n\n      rect.width = rect.right - rect.left\n      rect.height = rect.bottom - rect.top\n    }\n\n    this._signals.fire(`action-${phase}`, signalArg)\n\n    this._fireEvent(iEvent)\n\n    this._signals.fire(`after-action-${phase}`, signalArg)\n\n    return true\n  }\n\n  _now () { return Date.now() }\n}\n\nexport default Interaction\nexport { PointerInfo }\n","export class PointerInfo {\n  constructor (\n    public id: number,\n    public pointer: Interact.PointerType,\n    public event: Interact.PointerEventType,\n    public downTime: number,\n    public downTarget: EventTarget,\n  ) {}\n}\n\nexport default PointerInfo\n","// tslint:disable no-empty-interface\n\nexport interface Defaults {\n  base: BaseDefaults\n  perAction: PerActionDefaults\n  actions: ActionDefaults\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface ActionDefaults {\n}\n\nexport interface BaseDefaults {\n  preventDefault?: 'auto' | 'never' | string\n  deltaSource?: 'page' | 'client'\n  context?: Window | Document | Element\n   [key: string]: any\n}\n\nexport interface PerActionDefaults {\n  enabled?: boolean\n  origin?: Interact.Point | string | Element\n  listeners?: Interact.Listeners\n  allowFrom?: string | Element\n  ignoreFrom?: string | Element\n}\n\nexport type Options = Partial<BaseDefaults> & Partial<PerActionDefaults> & {\n  [P in keyof ActionDefaults]?: Partial<ActionDefaults[P]>\n}\n\n// export interface Options extends BaseDefaults, PerActionDefaults {}\n\nexport interface OptionsArg extends BaseDefaults, Interact.OrBoolean<PerActionDefaults> {}\n\nexport const defaults: Defaults = {\n  base: {\n    preventDefault: 'auto',\n    deltaSource: 'page',\n  },\n\n  perAction: {\n    enabled: false,\n    origin: { x: 0, y: 0 },\n  },\n\n  actions: {} as ActionDefaults,\n}\n\nexport default defaults\n","import { matchesSelector, nodeContains } from '@interactjs/utils/domUtils'\nimport events from '@interactjs/utils/events'\nimport * as is from '@interactjs/utils/is'\nimport { getWindow } from '@interactjs/utils/window'\n\nfunction preventDefault (interactable, newValue) {\n  if (/^(always|never|auto)$/.test(newValue)) {\n    interactable.options.preventDefault = newValue\n    return interactable\n  }\n\n  if (is.bool(newValue)) {\n    interactable.options.preventDefault = newValue ? 'always' : 'never'\n    return interactable\n  }\n\n  return interactable.options.preventDefault\n}\n\nfunction checkAndPreventDefault (interactable, scope, event) {\n  const setting = interactable.options.preventDefault\n\n  if (setting === 'never') { return }\n\n  if (setting === 'always') {\n    event.preventDefault()\n    return\n  }\n\n  // setting === 'auto'\n\n  // if the browser supports passive event listeners and isn't running on iOS,\n  // don't preventDefault of touch{start,move} events. CSS touch-action and\n  // user-select should be used instead of calling event.preventDefault().\n  if (events.supportsPassive && /^touch(start|move)$/.test(event.type)) {\n    const doc = getWindow(event.target).document\n    const docOptions = scope.getDocOptions(doc)\n\n    if (!(docOptions && docOptions.events) || docOptions.events.passive !== false) {\n      return\n    }\n  }\n\n  // don't preventDefault of pointerdown events\n  if (/^(mouse|pointer|touch)*(down|start)/i.test(event.type)) {\n    return\n  }\n\n  // don't preventDefault on editable elements\n  if (is.element(event.target) &&\n      matchesSelector(event.target, 'input,select,textarea,[contenteditable=true],[contenteditable=true] *')) {\n    return\n  }\n\n  event.preventDefault()\n}\n\nfunction onInteractionEvent ({ interaction, event }) {\n  if (interaction.interactable) {\n    interaction.interactable.checkAndPreventDefault(event)\n  }\n}\n\nexport function install (scope) {\n  /** @lends Interactable */\n  const Interactable = scope.Interactable\n\n  /**\n   * Returns or sets whether to prevent the browser's default behaviour in\n   * response to pointer events. Can be set to:\n   *  - `'always'` to always prevent\n   *  - `'never'` to never prevent\n   *  - `'auto'` to let interact.js try to determine what would be best\n   *\n   * @param {string} [newValue] `'always'`, `'never'` or `'auto'`\n   * @return {string | Interactable} The current setting or this Interactable\n   */\n  Interactable.prototype.preventDefault = function (newValue) {\n    return preventDefault(this, newValue)\n  }\n\n  Interactable.prototype.checkAndPreventDefault = function (event) {\n    return checkAndPreventDefault(this, scope, event)\n  }\n\n  for (const eventSignal of ['down', 'move', 'up', 'cancel']) {\n    scope.interactions.signals.on(eventSignal, onInteractionEvent)\n  }\n\n  // prevent native HTML5 drag on interact.js target elements\n  scope.interactions.eventMap.dragstart = function preventNativeDrag (event) {\n    for (const interaction of scope.interactions.list) {\n      if (interaction.element &&\n        (interaction.element === event.target ||\n          nodeContains(interaction.element, event.target))) {\n        interaction.interactable.checkAndPreventDefault(event)\n        return\n      }\n    }\n  }\n}\n\nexport type Install = typeof install\n\nexport default {\n  id: 'core/interactablePreventDefault',\n  install,\n}\n","import { some } from '@interactjs/utils/arr'\nimport * as dom from '@interactjs/utils/domUtils'\n\nexport interface SearchDetails {\n  pointer: Interact.PointerType\n  pointerId: number\n  pointerType: string\n  eventType: string\n  eventTarget: Interact.EventTarget\n  curEventTarget: Interact.EventTarget\n  scope: Interact.Scope\n}\n\nconst finder = {\n  methodOrder: [ 'simulationResume', 'mouseOrPen', 'hasPointer', 'idle' ],\n\n  search (details) {\n    for (const method of finder.methodOrder) {\n      const interaction = finder[method](details)\n\n      if (interaction) {\n        return interaction\n      }\n    }\n  },\n\n  // try to resume simulation with a new pointer\n  simulationResume ({ pointerType, eventType, eventTarget, scope }: SearchDetails) {\n    if (!/down|start/i.test(eventType)) {\n      return null\n    }\n\n    for (const interaction of scope.interactions.list) {\n      let element = eventTarget\n\n      if (interaction.simulation && interaction.simulation.allowResume &&\n          (interaction.pointerType === pointerType)) {\n        while (element) {\n          // if the element is the interaction element\n          if (element === interaction.element) {\n            return interaction\n          }\n          element = dom.parentNode(element)\n        }\n      }\n    }\n\n    return null\n  },\n\n  // if it's a mouse or pen interaction\n  mouseOrPen ({ pointerId, pointerType, eventType, scope }: SearchDetails) {\n    if (pointerType !== 'mouse' && pointerType !== 'pen') {\n      return null\n    }\n\n    let firstNonActive\n\n    for (const interaction of scope.interactions.list) {\n      if (interaction.pointerType === pointerType) {\n        // if it's a down event, skip interactions with running simulations\n        if (interaction.simulation && !hasPointerId(interaction, pointerId)) { continue }\n\n        // if the interaction is active, return it immediately\n        if (interaction.interacting()) {\n          return interaction\n        }\n        // otherwise save it and look for another active interaction\n        else if (!firstNonActive) {\n          firstNonActive = interaction\n        }\n      }\n    }\n\n    // if no active mouse interaction was found use the first inactive mouse\n    // interaction\n    if (firstNonActive) {\n      return firstNonActive\n    }\n\n    // find any mouse or pen interaction.\n    // ignore the interaction if the eventType is a *down, and a simulation\n    // is active\n    for (const interaction of scope.interactions.list) {\n      if (interaction.pointerType === pointerType && !(/down/i.test(eventType) && interaction.simulation)) {\n        return interaction\n      }\n    }\n\n    return null\n  },\n\n  // get interaction that has this pointer\n  hasPointer ({ pointerId, scope }: SearchDetails) {\n    for (const interaction of scope.interactions.list) {\n      if (hasPointerId(interaction, pointerId)) {\n        return interaction\n      }\n    }\n\n    return null\n  },\n\n  // get first idle interaction with a matching pointerType\n  idle ({ pointerType, scope }: SearchDetails) {\n    for (const interaction of scope.interactions.list) {\n      // if there's already a pointer held down\n      if (interaction.pointers.length === 1) {\n        const target = interaction.interactable\n        // don't add this pointer if there is a target interactable and it\n        // isn't gesturable\n        if (target && !target.options.gesture.enabled) {\n          continue\n        }\n      }\n      // maximum of 2 pointers per interaction\n      else if (interaction.pointers.length >= 2) {\n        continue\n      }\n\n      if (!interaction.interacting() && (pointerType === interaction.pointerType)) {\n        return interaction\n      }\n    }\n\n    return null\n  },\n}\n\nfunction hasPointerId (interaction, pointerId) {\n  return some(interaction.pointers, ({ id }) => id === pointerId)\n}\n\nexport default finder\n","import browser from '@interactjs/utils/browser'\nimport domObjects from '@interactjs/utils/domObjects'\nimport events from '@interactjs/utils/events'\nimport pointerUtils from '@interactjs/utils/pointerUtils'\nimport Signals from '@interactjs/utils/Signals'\nimport InteractionBase from './Interaction'\nimport finder, { SearchDetails } from './interactionFinder'\nimport { Scope } from './scope'\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    Interaction: typeof InteractionBase\n    interactions: {\n      signals: Signals\n      new: (options: any) => InteractionBase\n      list: InteractionBase[]\n      listeners: { [type: string]: Interact.Listener }\n      eventMap: any\n      pointerMoveTolerance: number\n    }\n    prevTouchTime: number\n  }\n}\n\nconst methodNames = [\n  'pointerDown', 'pointerMove', 'pointerUp',\n  'updatePointer', 'removePointer', 'windowBlur',\n]\n\nfunction install (scope: Scope) {\n  const signals = new Signals()\n\n  const listeners = {} as any\n\n  for (const method of methodNames) {\n    listeners[method] = doOnInteractions(method, scope)\n  }\n\n  const pEventTypes = browser.pEventTypes\n  const eventMap = {} as { [key: string]: Interact.Listener }\n\n  if (domObjects.PointerEvent) {\n    eventMap[pEventTypes.down  ] = listeners.pointerDown\n    eventMap[pEventTypes.move  ] = listeners.pointerMove\n    eventMap[pEventTypes.up    ] = listeners.pointerUp\n    eventMap[pEventTypes.cancel] = listeners.pointerUp\n  }\n  else {\n    eventMap.mousedown   = listeners.pointerDown\n    eventMap.mousemove   = listeners.pointerMove\n    eventMap.mouseup     = listeners.pointerUp\n\n    eventMap.touchstart  = listeners.pointerDown\n    eventMap.touchmove   = listeners.pointerMove\n    eventMap.touchend    = listeners.pointerUp\n    eventMap.touchcancel = listeners.pointerUp\n  }\n\n  eventMap.blur = (event) => {\n    for (const interaction of scope.interactions.list) {\n      interaction.documentBlur(event)\n    }\n  }\n\n  scope.signals.on('add-document', onDocSignal)\n  scope.signals.on('remove-document', onDocSignal)\n\n  // for ignoring browser's simulated mouse events\n  scope.prevTouchTime = 0\n\n  scope.Interaction = class Interaction extends InteractionBase {\n    get pointerMoveTolerance () {\n      return scope.interactions.pointerMoveTolerance\n    }\n\n    set pointerMoveTolerance (value) {\n      scope.interactions.pointerMoveTolerance = value\n    }\n\n    _now () { return scope.now() }\n  }\n  scope.interactions = {\n    signals,\n    // all active and idle interactions\n    list: [],\n    new (options: { pointerType?: string, signals?: Signals }) {\n      options.signals = signals\n\n      const interaction = new scope.Interaction(options as Required<typeof options>)\n\n      scope.interactions.list.push(interaction)\n      return interaction\n    },\n    listeners,\n    eventMap,\n    pointerMoveTolerance: 1,\n  }\n}\n\nfunction doOnInteractions (method, scope) {\n  return function (event) {\n    const interactions = scope.interactions.list\n\n    const pointerType = pointerUtils.getPointerType(event)\n    const [eventTarget, curEventTarget] = pointerUtils.getEventTargets(event)\n    const matches = [] // [ [pointer, interaction], ...]\n\n    if (browser.supportsTouch && /touch/.test(event.type)) {\n      scope.prevTouchTime = scope.now()\n\n      for (const changedTouch of event.changedTouches) {\n        const pointer = changedTouch\n        const pointerId = pointerUtils.getPointerId(pointer)\n        const searchDetails: SearchDetails = {\n          pointer,\n          pointerId,\n          pointerType,\n          eventType: event.type,\n          eventTarget,\n          curEventTarget,\n          scope,\n        }\n        const interaction = getInteraction(searchDetails)\n\n        matches.push([\n          searchDetails.pointer,\n          searchDetails.eventTarget,\n          searchDetails.curEventTarget,\n          interaction,\n        ])\n      }\n    }\n    else {\n      let invalidPointer = false\n\n      if (!browser.supportsPointerEvent && /mouse/.test(event.type)) {\n        // ignore mouse events while touch interactions are active\n        for (let i = 0; i < interactions.length && !invalidPointer; i++) {\n          invalidPointer = interactions[i].pointerType !== 'mouse' && interactions[i].pointerIsDown\n        }\n\n        // try to ignore mouse events that are simulated by the browser\n        // after a touch event\n        invalidPointer = invalidPointer ||\n          (scope.now() - scope.prevTouchTime < 500) ||\n          // on iOS and Firefox Mobile, MouseEvent.timeStamp is zero if simulated\n          event.timeStamp === 0\n      }\n\n      if (!invalidPointer) {\n        const searchDetails = {\n          pointer: event,\n          pointerId: pointerUtils.getPointerId(event),\n          pointerType,\n          eventType: event.type,\n          curEventTarget,\n          eventTarget,\n          scope,\n        }\n\n        const interaction = getInteraction(searchDetails)\n\n        matches.push([\n          searchDetails.pointer,\n          searchDetails.eventTarget,\n          searchDetails.curEventTarget,\n          interaction,\n        ])\n      }\n    }\n\n    // eslint-disable-next-line no-shadow\n    for (const [pointer, eventTarget, curEventTarget, interaction] of matches) {\n      interaction[method](pointer, event, eventTarget, curEventTarget)\n    }\n  }\n}\n\nfunction getInteraction (searchDetails: SearchDetails) {\n  const { pointerType, scope } = searchDetails\n\n  const foundInteraction = finder.search(searchDetails)\n  const signalArg = { interaction: foundInteraction, searchDetails }\n\n  scope.interactions.signals.fire('find', signalArg)\n\n  return signalArg.interaction || scope.interactions.new({ pointerType })\n}\n\nfunction onDocSignal ({ doc, scope, options }, signalName) {\n  const { eventMap } = scope.interactions\n  const eventMethod = signalName.indexOf('add') === 0\n    ? events.add : events.remove\n\n  if (scope.browser.isIOS && !options.events) {\n    options.events = { passive: false }\n  }\n\n  // delegate event listener\n  for (const eventType in events.delegatedEvents) {\n    eventMethod(doc, eventType, events.delegateListener)\n    eventMethod(doc, eventType, events.delegateUseCapture, true)\n  }\n\n  const eventOptions = options && options.events\n\n  for (const eventType in eventMap) {\n    eventMethod(doc, eventType, eventMap[eventType], eventOptions)\n  }\n}\n\nexport default {\n  id: 'core/interactions',\n  install,\n  onDocSignal,\n  doOnInteractions,\n  methodNames,\n}\n","import * as utils from '@interactjs/utils'\nimport domObjects from '@interactjs/utils/domObjects'\nimport defaults from './defaultOptions'\nimport Eventable from './Eventable'\nimport InteractableBase from './Interactable'\nimport InteractableSet from './InteractableSet'\nimport InteractEvent from './InteractEvent'\nimport interactions from './interactions'\n\nconst {\n  win,\n  browser,\n  raf,\n  Signals,\n  events,\n} = utils\n\nexport enum ActionName {\n}\n\nexport interface Actions {\n  names: ActionName[]\n  methodDict: { [key: string]: string }\n  eventTypes: string[]\n}\n\nexport function createScope () {\n  return new Scope()\n}\n\nexport type Defaults = typeof defaults\n\nexport interface Plugin {\n  id?: string\n  install (scope: Scope, options?: any): void\n  [key: string]: any\n}\n\nexport class Scope {\n  id = `__interact_scope_${Math.floor(Math.random() * 100)}`\n  signals = new Signals()\n  browser = browser\n  events = events\n  utils = utils\n  defaults: Defaults = utils.clone(defaults) as Defaults\n  Eventable = Eventable\n  actions: Actions = {\n    names: [],\n    methodDict: {},\n    eventTypes: [],\n  }\n\n  InteractEvent = InteractEvent\n  Interactable!: typeof InteractableBase\n  interactables = new InteractableSet(this)\n\n  // main window\n  _win!: Window\n\n  // main document\n  document!: Document\n\n  // main window\n  window!: Window\n\n  // all documents being listened to\n  documents: Array<{ doc: Document, options: any }> = []\n\n  _plugins: Plugin[] = []\n  _pluginMap: { [id: string]: Plugin } = {}\n\n  constructor () {\n    const scope = this as Scope\n\n    ; (this as { Interactable: typeof InteractableBase }).Interactable = class Interactable extends InteractableBase implements InteractableBase {\n      get _defaults () { return scope.defaults }\n\n      set (options: any) {\n        super.set(options)\n\n        scope.interactables.signals.fire('set', {\n          options,\n          interactable: this,\n        })\n\n        return this\n      }\n\n      unset () {\n        super.unset()\n        for (const interaction of scope.interactions.list) {\n          if (interaction.interactable === this) {\n            interaction.stop()\n          }\n        }\n\n        scope.interactables.signals.fire('unset', { interactable: this })\n      }\n    }\n  }\n\n  onWindowUnload = (event: BeforeUnloadEvent) => this.removeDocument(event.target as Document)\n\n  init (window: Window) {\n    return initScope(this, window)\n  }\n\n  pluginIsInstalled (plugin: Plugin) {\n    return this._pluginMap[plugin.id] || this._plugins.indexOf(plugin) !== -1\n  }\n\n  usePlugin (plugin: Plugin, options?: { [key: string]: any }) {\n    if (this.pluginIsInstalled(plugin)) {\n      return this\n    }\n\n    if (plugin.id) { this._pluginMap[plugin.id] = plugin }\n\n    plugin.install(this, options)\n    this._plugins.push(plugin)\n\n    return this\n  }\n\n  addDocument (doc: Document, options?: any): void | false {\n    // do nothing if document is already known\n    if (this.getDocIndex(doc) !== -1) { return false }\n\n    const window = win.getWindow(doc)\n\n    options = options ? utils.extend({}, options) : {}\n\n    this.documents.push({ doc, options })\n    events.documents.push(doc)\n\n    // don't add an unload event for the main document\n    // so that the page may be cached in browser history\n    if (doc !== this.document) {\n      events.add(window, 'unload', this.onWindowUnload)\n    }\n\n    this.signals.fire('add-document', { doc, window, scope: this, options })\n  }\n\n  removeDocument (doc: Document) {\n    const index = this.getDocIndex(doc)\n\n    const window = win.getWindow(doc)\n    const options = this.documents[index].options\n\n    events.remove(window, 'unload', this.onWindowUnload)\n\n    this.documents.splice(index, 1)\n    events.documents.splice(index, 1)\n\n    this.signals.fire('remove-document', { doc, window, scope: this, options })\n  }\n\n  getDocIndex (doc: Document) {\n    for (let i = 0; i < this.documents.length; i++) {\n      if (this.documents[i].doc === doc) {\n        return i\n      }\n    }\n\n    return -1\n  }\n\n  getDocOptions (doc: Document) {\n    const docIndex = this.getDocIndex(doc)\n\n    return docIndex === -1 ? null : this.documents[docIndex].options\n  }\n\n  now () {\n    return ((this.window as any).Date as typeof Date || Date).now()\n  }\n}\n\nexport function initScope (scope: Scope, window: Window) {\n  win.init(window)\n  domObjects.init(window)\n  browser.init(window)\n  raf.init(window)\n  events.init(window)\n\n  scope.usePlugin(interactions)\n  scope.document = window.document\n  scope.window = window\n\n  return scope\n}\n","/* eslint-disable no-console */\n/* global process */\nimport domObjects from '@interactjs/utils/domObjects'\nimport { parentNode } from '@interactjs/utils/domUtils'\nimport * as is from '@interactjs/utils/is'\nimport win from '@interactjs/utils/window'\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    logger: Logger\n  }\n}\n\nexport interface Logger {\n  warn: (...args: any[]) => void\n  error: (...args: any[]) => void\n  log: (...args: any[]) => void\n}\n\nexport const links = {\n  touchAction: 'https://developer.mozilla.org/en-US/docs/Web/CSS/touch-action',\n  boxSizing: 'https://developer.mozilla.org/en-US/docs/Web/CSS/box-sizing',\n}\n\nexport const install = process.env.NODE_ENV === 'production'\n  ? () => {}\n  // eslint-disable-next-line no-restricted-syntax\n  : function install (scope: Interact.Scope, { logger }: { logger?: Logger } = {}) {\n    logger = logger || console\n    if (process.env.NODE_ENV !== 'production') {\n      scope.logger = logger\n      scope.interactions.signals.on('action-start', ({ interaction }) => {\n        touchAction(interaction, scope.logger)\n        boxSizing(interaction, scope.logger)\n        noListeners(interaction, scope.logger)\n      })\n    }\n  }\n\nexport const touchActionMessage = '[interact.js] Consider adding CSS \"touch-action: none\" to this element\\n'\nexport const boxSizingMessage = '[interact.js] Consider adding CSS \"box-sizing: border-box\" to this resizable element'\nexport const noListenersMessage = '[interact.js] There are no listeners set for this action'\n\nexport function touchAction ({ element }: Interact.Interaction, logger: Logger) {\n  if (!parentHasStyle(element, 'touchAction', /pan-|pinch|none/)) {\n    logger.warn(\n      touchActionMessage,\n      element,\n      links.touchAction)\n  }\n}\n\nexport function boxSizing (interaction: Interact.Interaction, logger: Logger) {\n  const { element } = interaction\n\n  if (\n    interaction.prepared.name === 'resize' &&\n    element instanceof domObjects.HTMLElement &&\n    !hasStyle(element, 'boxSizing', /border-box/)\n  ) {\n    logger.warn(\n      boxSizingMessage,\n      element,\n      links.boxSizing)\n  }\n}\n\nexport function noListeners (interaction: Interact.Interaction, logger: Logger) {\n  const actionName = interaction.prepared.name\n  const moveListeners = interaction.interactable.events.types[`${actionName}move`] || []\n\n  if (!moveListeners.length) {\n    logger.warn(\n      noListenersMessage,\n      actionName,\n      interaction.interactable)\n  }\n}\n\nfunction hasStyle (element: HTMLElement, prop: keyof CSSStyleDeclaration, styleRe: RegExp) {\n  return styleRe.test(element.style[prop] || win.window.getComputedStyle(element)[prop])\n}\n\nfunction parentHasStyle (element: Element, prop: keyof CSSStyleDeclaration, styleRe: RegExp) {\n  let parent = element as HTMLElement\n\n  while (is.element(parent)) {\n    if (hasStyle(parent, prop, styleRe)) {\n      return true\n    }\n\n    parent = parentNode(parent)\n  }\n\n  return false\n}\n\nexport default {\n  id: 'dev-tools',\n  install,\n}\n","import { EventPhase } from '@interactjs/core/InteractEvent'\nimport modifiers from '@interactjs/modifiers/base'\nimport * as utils from '@interactjs/utils'\nimport raf from '@interactjs/utils/raf'\n\ndeclare module '@interactjs/core/InteractEvent' {\n  // eslint-disable-next-line no-shadow\n  enum EventPhase {\n    Resume = 'resume',\n    InertiaStart = 'inertiastart',\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    inertia?: {\n      active: boolean\n      smoothEnd: boolean\n      allowResume: boolean\n\n      startEvent?: Interact.InteractEvent\n      upCoords: {\n        page: Interact.Point\n        client: Interact.Point\n        timeStamp: number\n      }\n\n      xe?: number\n      ye?: number\n      sx?: number\n      sy?: number\n\n      t0?: number\n      te?: number\n      v0?: number\n      vx0?: number\n      vy0?: number\n      duration?: number\n      modifiedXe?: number\n      modifiedYe?: number\n\n      lambda_v0?: number // eslint-disable-line camelcase\n      one_ve_v0?: number // eslint-disable-line camelcase\n      timeout: any\n    }\n  }\n}\n\ndeclare module '@interactjs/core/defaultOptions' {\n  interface PerActionDefaults {\n    inertia?: {\n      enabled?: boolean,\n      resistance?: number,        // the lambda in exponential decay\n      minSpeed?: number,          // target speed must be above this for inertia to start\n      endSpeed?: number,          // the speed at which inertia is slow enough to stop\n      allowResume?: true,         // allow resuming an action in inertia phase\n      smoothEndDuration?: number, // animate to snap/restrict endOnly if there's no inertia\n    } | boolean // FIXME\n  }\n}\n\n(EventPhase as any).Resume = 'resume'\n; (EventPhase as any).InertiaStart = 'inertiastart'\n\nfunction install (scope: Interact.Scope) {\n  const {\n    interactions,\n    defaults,\n  } = scope\n\n  interactions.signals.on('new', ({ interaction }) => {\n    interaction.inertia = {\n      active     : false,\n      smoothEnd  : false,\n      allowResume: false,\n      upCoords   : {} as any,\n      timeout    : null,\n    }\n  })\n\n  // FIXME proper signal typing\n  interactions.signals.on('before-action-end', (arg) => release(arg as any, scope))\n  interactions.signals.on('down', (arg) => resume(arg as any, scope))\n  interactions.signals.on('stop', (arg) => stop(arg as any))\n\n  defaults.perAction.inertia = {\n    enabled          : false,\n    resistance       : 10,    // the lambda in exponential decay\n    minSpeed         : 100,   // target speed must be above this for inertia to start\n    endSpeed         : 10,    // the speed at which inertia is slow enough to stop\n    allowResume      : true,  // allow resuming an action in inertia phase\n    smoothEndDuration: 300,   // animate to snap/restrict endOnly if there's no inertia\n  }\n\n  scope.usePlugin(modifiers)\n}\n\nfunction resume (\n  { interaction, event, pointer, eventTarget }: Interact.SignalArg,\n  scope: Interact.Scope\n) {\n  const state = interaction.inertia\n\n  // Check if the down event hits the current inertia target\n  if (state.active) {\n    let element = eventTarget\n\n    // climb up the DOM tree from the event target\n    while (utils.is.element(element)) {\n      // if interaction element is the current inertia target element\n      if (element === interaction.element) {\n        // stop inertia\n        raf.cancel(state.timeout)\n        state.active = false\n        interaction.simulation = null\n\n        // update pointers to the down event's coordinates\n        interaction.updatePointer(pointer, event, eventTarget, true)\n        utils.pointer.setCoords(\n          interaction.coords.cur,\n          interaction.pointers.map((p) => p.pointer),\n          interaction._now()\n        )\n\n        // fire appropriate signals\n        const signalArg = {\n          interaction,\n        }\n\n        scope.interactions.signals.fire('action-resume', signalArg)\n\n        // fire a reume event\n        const resumeEvent = new scope.InteractEvent(\n          interaction, event, interaction.prepared.name, EventPhase.Resume, interaction.element)\n\n        interaction._fireEvent(resumeEvent)\n\n        utils.pointer.copyCoords(interaction.coords.prev, interaction.coords.cur)\n        break\n      }\n\n      element = utils.dom.parentNode(element)\n    }\n  }\n}\n\nfunction release<T extends Interact.ActionName> (\n  { interaction, event, noPreEnd }: Interact.SignalArg,\n  scope: Interact.Scope\n) {\n  const state = interaction.inertia\n\n  if (!interaction.interacting() ||\n    (interaction.simulation && interaction.simulation.active) ||\n  noPreEnd) {\n    return null\n  }\n\n  const options = getOptions(interaction)\n\n  const now = interaction._now()\n  const { client: velocityClient } = interaction.coords.velocity\n  const pointerSpeed = utils.hypot(velocityClient.x, velocityClient.y)\n\n  let smoothEnd = false\n  let modifierResult: ReturnType<typeof modifiers.setAll>\n\n  // check if inertia should be started\n  const inertiaPossible = (options && options.enabled &&\n                     interaction.prepared.name !== 'gesture' &&\n                     event !== state.startEvent)\n\n  const inertia = (inertiaPossible &&\n    (now - interaction.coords.cur.timeStamp) < 50 &&\n    pointerSpeed > options.minSpeed &&\n    pointerSpeed > options.endSpeed)\n\n  const modifierArg = {\n    interaction,\n    pageCoords: utils.extend({}, interaction.coords.cur.page),\n    states: inertiaPossible && interaction.modifiers.states.map(\n      (modifierStatus) => utils.extend({}, modifierStatus)\n    ),\n    preEnd: true,\n    prevCoords: undefined,\n    requireEndOnly: null,\n  }\n\n  // smoothEnd\n  if (inertiaPossible && !inertia) {\n    modifierArg.prevCoords = interaction.prevEvent.page\n    modifierArg.requireEndOnly = false\n    modifierResult = modifiers.setAll(modifierArg)\n\n    if (modifierResult.changed) {\n      smoothEnd = true\n    }\n  }\n\n  if (!(inertia || smoothEnd)) { return null }\n\n  utils.pointer.copyCoords(state.upCoords, interaction.coords.cur)\n\n  interaction.pointers[0].pointer = state.startEvent = new scope.InteractEvent(\n    interaction,\n    event,\n    // FIXME add proper typing Action.name\n    interaction.prepared.name as T,\n    EventPhase.InertiaStart,\n    interaction.element,\n  )\n\n  state.t0 = now\n\n  state.active = true\n  state.allowResume = options.allowResume\n  interaction.simulation = state\n\n  interaction.interactable.fire(state.startEvent)\n\n  if (inertia) {\n    state.vx0 = interaction.coords.velocity.client.x\n    state.vy0 = interaction.coords.velocity.client.y\n    state.v0 = pointerSpeed\n\n    calcInertia(interaction, state)\n\n    utils.extend(modifierArg.pageCoords, interaction.coords.cur.page)\n\n    modifierArg.pageCoords.x += state.xe\n    modifierArg.pageCoords.y += state.ye\n    modifierArg.prevCoords = undefined\n    modifierArg.requireEndOnly = true\n\n    modifierResult = modifiers.setAll(modifierArg)\n\n    state.modifiedXe += modifierResult.delta.x\n    state.modifiedYe += modifierResult.delta.y\n\n    state.timeout = raf.request(() => inertiaTick(interaction))\n  }\n  else {\n    state.smoothEnd = true\n    state.xe = modifierResult.delta.x\n    state.ye = modifierResult.delta.y\n\n    state.sx = state.sy = 0\n\n    state.timeout = raf.request(() => smothEndTick(interaction))\n  }\n\n  return false\n}\n\nfunction stop ({ interaction }: Interact.SignalArg) {\n  const state = interaction.inertia\n  if (state.active) {\n    raf.cancel(state.timeout)\n    state.active = false\n    interaction.simulation = null\n  }\n}\n\nfunction calcInertia (interaction: Interact.Interaction, state) {\n  const options = getOptions(interaction)\n  const lambda = options.resistance\n  const inertiaDur = -Math.log(options.endSpeed / state.v0) / lambda\n\n  state.x0 = interaction.prevEvent.page.x\n  state.y0 = interaction.prevEvent.page.y\n  state.t0 = state.startEvent.timeStamp / 1000\n  state.sx = state.sy = 0\n\n  state.modifiedXe = state.xe = (state.vx0 - inertiaDur) / lambda\n  state.modifiedYe = state.ye = (state.vy0 - inertiaDur) / lambda\n  state.te = inertiaDur\n\n  state.lambda_v0 = lambda / state.v0\n  state.one_ve_v0 = 1 - options.endSpeed / state.v0\n}\n\nfunction inertiaTick (interaction: Interact.Interaction) {\n  updateInertiaCoords(interaction)\n  utils.pointer.setCoordDeltas(interaction.coords.delta, interaction.coords.prev, interaction.coords.cur)\n  utils.pointer.setCoordVelocity(interaction.coords.velocity, interaction.coords.delta)\n\n  const state = interaction.inertia\n  const options = getOptions(interaction)\n  const lambda = options.resistance\n  const t = interaction._now() / 1000 - state.t0\n\n  if (t < state.te) {\n    const progress =  1 - (Math.exp(-lambda * t) - state.lambda_v0) / state.one_ve_v0\n\n    if (state.modifiedXe === state.xe && state.modifiedYe === state.ye) {\n      state.sx = state.xe * progress\n      state.sy = state.ye * progress\n    }\n    else {\n      const quadPoint = utils.getQuadraticCurvePoint(\n        0, 0,\n        state.xe, state.ye,\n        state.modifiedXe, state.modifiedYe,\n        progress)\n\n      state.sx = quadPoint.x\n      state.sy = quadPoint.y\n    }\n\n    interaction.move()\n\n    state.timeout = raf.request(() => inertiaTick(interaction))\n  }\n  else {\n    state.sx = state.modifiedXe\n    state.sy = state.modifiedYe\n\n    interaction.move()\n    interaction.end(state.startEvent)\n    state.active = false\n    interaction.simulation = null\n  }\n\n  utils.pointer.copyCoords(interaction.coords.prev, interaction.coords.cur)\n}\n\nfunction smothEndTick (interaction: Interact.Interaction) {\n  updateInertiaCoords(interaction)\n\n  const state = interaction.inertia\n  const t = interaction._now() - state.t0\n  const { smoothEndDuration: duration } = getOptions(interaction)\n\n  if (t < duration) {\n    state.sx = utils.easeOutQuad(t, 0, state.xe, duration)\n    state.sy = utils.easeOutQuad(t, 0, state.ye, duration)\n\n    interaction.move()\n\n    state.timeout = raf.request(() => smothEndTick(interaction))\n  }\n  else {\n    state.sx = state.xe\n    state.sy = state.ye\n\n    interaction.move()\n    interaction.end(state.startEvent)\n\n    state.smoothEnd =\n      state.active = false\n    interaction.simulation = null\n  }\n}\n\nfunction updateInertiaCoords (interaction: Interact.Interaction) {\n  const state = interaction.inertia\n\n  // return if inertia isn't running\n  if (!state.active) { return }\n\n  const pageUp   = state.upCoords.page\n  const clientUp = state.upCoords.client\n\n  utils.pointer.setCoords(interaction.coords.cur, [ {\n    pageX  : pageUp.x   + state.sx,\n    pageY  : pageUp.y   + state.sy,\n    clientX: clientUp.x + state.sx,\n    clientY: clientUp.y + state.sy,\n  } ], interaction._now())\n}\n\nfunction getOptions ({ interactable, prepared }: Interact.Interaction) {\n  return interactable &&\n    interactable.options &&\n    prepared.name &&\n    interactable.options[prepared.name].inertia\n}\n\nexport default {\n  id: 'inertia',\n  install,\n  calcInertia,\n  inertiaTick,\n  smothEndTick,\n  updateInertiaCoords,\n}\n","import * as actions from '@interactjs/actions'\nimport autoScroll from '@interactjs/auto-scroll'\nimport * as autoStart from '@interactjs/auto-start'\nimport interactablePreventDefault from '@interactjs/core/interactablePreventDefault'\nimport devTools from '@interactjs/dev-tools'\nimport inertia from '@interactjs/inertia'\nimport * as modifiers from '@interactjs/modifiers'\nimport modifiersBase from '@interactjs/modifiers/base'\nimport * as pointerEvents from '@interactjs/pointer-events'\nimport reflow from '@interactjs/reflow'\nimport interact, { scope } from './interact'\n\nexport function init (window: Window): typeof interact {\n  scope.init(window)\n\n  interact.use(interactablePreventDefault)\n\n  // inertia\n  interact.use(inertia)\n\n  // pointerEvents\n  interact.use(pointerEvents)\n\n  // autoStart, hold\n  interact.use(autoStart)\n\n  // drag and drop, resize, gesture\n  interact.use(actions)\n\n  // snap, resize, etc.\n  interact.use(modifiersBase)\n\n  // for backwrads compatibility\n  for (const type in modifiers) {\n    const { _defaults, _methods } = modifiers[type]\n\n    _defaults._methods = _methods\n    scope.defaults.perAction[type] = _defaults\n  }\n\n  // autoScroll\n  interact.use(autoScroll)\n\n  // reflow\n  interact.use(reflow)\n\n  // eslint-disable-next-line no-undef\n  if (process.env.NODE_ENV !== 'production') {\n    interact.use(devTools)\n  }\n\n  return interact\n}\n\n// eslint-disable-next-line no-undef\ninteract.version = init.version = process.env.npm_package_version\n\nexport default interact\nexport {\n  interact,\n  actions,\n  autoScroll,\n  interactablePreventDefault,\n  inertia,\n  modifiersBase as modifiers,\n  pointerEvents,\n  reflow,\n}\n","/** @module interact */\n\nimport { Options } from '@interactjs/core/defaultOptions'\nimport Interactable from '@interactjs/core/Interactable'\nimport { Scope } from '@interactjs/core/scope'\nimport * as utils from '@interactjs/utils'\nimport browser from '@interactjs/utils/browser'\nimport events from '@interactjs/utils/events'\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    interact: InteractStatic\n  }\n}\n\nexport interface InteractStatic {\n  (target: Interact.Target, options?: Options): Interactable\n  on: typeof on\n  pointerMoveTolerance: typeof pointerMoveTolerance\n  stop: typeof stop\n  supportsPointerEvent: typeof supportsPointerEvent\n  supportsTouch: typeof supportsTouch\n  debug: typeof debug\n  off: typeof off\n  isSet: typeof isSet\n  use: typeof use\n  getPointerAverage: typeof utils.pointer.pointerAverage\n  getTouchBBox: typeof utils.pointer.touchBBox\n  getTouchDistance: typeof utils.pointer.touchDistance\n  getTouchAngle: typeof utils.pointer.touchAngle\n  getElementRect: typeof utils.dom.getElementRect\n  getElementClientRect: typeof utils.dom.getElementClientRect\n  matchesSelector: typeof utils.dom.matchesSelector\n  closest: typeof utils.dom.closest\n  addDocument: typeof scope.addDocument\n  removeDocument: typeof scope.removeDocument\n  version: string\n}\n\nconst globalEvents: any = {}\nconst scope = new Scope()\n\n/**\n * ```js\n * interact('#draggable').draggable(true)\n *\n * var rectables = interact('rect')\n * rectables\n *   .gesturable(true)\n *   .on('gesturemove', function (event) {\n *       // ...\n *   })\n * ```\n *\n * The methods of this variable can be used to set elements as interactables\n * and also to change various default settings.\n *\n * Calling it as a function and passing an element or a valid CSS selector\n * string returns an Interactable object which has various methods to configure\n * it.\n *\n * @global\n *\n * @param {Element | string} target The HTML or SVG Element to interact with\n * or CSS selector\n * @return {Interactable}\n */\nexport const interact: InteractStatic = function interact (target: Interact.Target, options?: any) {\n  let interactable = scope.interactables.get(target, options)\n\n  if (!interactable) {\n    interactable = scope.interactables.new(target, options)\n    interactable.events.global = globalEvents\n  }\n\n  return interactable\n} as InteractStatic\n\n/**\n * Use a plugin\n *\n * @alias module:interact.use\n *\n * @param {Object} plugin\n * @param {function} plugin.install\n * @return {interact}\n */\ninteract.use = use\nfunction use (plugin: Interact.Plugin, options?: { [key: string]: any }) {\n  scope.usePlugin(plugin, options)\n\n  return interact\n}\n\n/**\n * Check if an element or selector has been set with the {@link interact}\n * function\n *\n * @alias module:interact.isSet\n *\n * @param {Element} element The Element being searched for\n * @return {boolean} Indicates if the element or CSS selector was previously\n * passed to interact\n */\ninteract.isSet = isSet\nfunction isSet (target: Element, options?: any) {\n  return !!scope.interactables.get(target, options && options.context)\n}\n\n/**\n * Add a global listener for an InteractEvent or adds a DOM event to `document`\n *\n * @alias module:interact.on\n *\n * @param {string | array | object} type The types of events to listen for\n * @param {function} listener The function event (s)\n * @param {object | boolean} [options] object or useCapture flag for\n * addEventListener\n * @return {object} interact\n */\ninteract.on = on\nfunction on (type: string | Interact.EventTypes, listener: Interact.ListenersArg, options?) {\n  if (utils.is.string(type) && type.search(' ') !== -1) {\n    type = type.trim().split(/ +/)\n  }\n\n  if (utils.is.array(type)) {\n    for (const eventType of (type as any[])) {\n      interact.on(eventType, listener, options)\n    }\n\n    return interact\n  }\n\n  if (utils.is.object(type)) {\n    for (const prop in type) {\n      interact.on(prop, (type as Interact.EventTypes)[prop], listener)\n    }\n\n    return interact\n  }\n\n  // if it is an InteractEvent type, add listener to globalEvents\n  if (utils.arr.contains(scope.actions.eventTypes, type)) {\n    // if this type of event was never bound\n    if (!globalEvents[type]) {\n      globalEvents[type] = [listener]\n    }\n    else {\n      globalEvents[type].push(listener)\n    }\n  }\n  // If non InteractEvent type, addEventListener to document\n  else {\n    events.add(scope.document, type, listener as Interact.Listener, { options })\n  }\n\n  return interact\n}\n\n/**\n * Removes a global InteractEvent listener or DOM event from `document`\n *\n * @alias module:interact.off\n *\n * @param {string | array | object} type The types of events that were listened\n * for\n * @param {function} listener The listener function to be removed\n * @param {object | boolean} options [options] object or useCapture flag for\n * removeEventListener\n * @return {object} interact\n */\ninteract.off = off\nfunction off (type, listener, options) {\n  if (utils.is.string(type) && type.search(' ') !== -1) {\n    type = type.trim().split(/ +/)\n  }\n\n  if (utils.is.array(type)) {\n    for (const eventType of type) {\n      interact.off(eventType, listener, options)\n    }\n\n    return interact\n  }\n\n  if (utils.is.object(type)) {\n    for (const prop in type) {\n      interact.off(prop, type[prop], listener)\n    }\n\n    return interact\n  }\n\n  if (!utils.arr.contains(scope.actions.eventTypes, type)) {\n    events.remove(scope.document, type, listener, options)\n  }\n  else {\n    let index\n\n    if (type in globalEvents &&\n        (index = globalEvents[type].indexOf(listener)) !== -1) {\n      globalEvents[type].splice(index, 1)\n    }\n  }\n\n  return interact\n}\n\n/**\n * Returns an object which exposes internal data\n * @alias module:interact.debug\n *\n * @return {object} An object with properties that outline the current state\n * and expose internal functions and variables\n */\ninteract.debug = debug\nfunction debug () {\n  return scope\n}\n\n// expose the functions used to calculate multi-touch properties\ninteract.getPointerAverage  = utils.pointer.pointerAverage\ninteract.getTouchBBox       = utils.pointer.touchBBox\ninteract.getTouchDistance   = utils.pointer.touchDistance\ninteract.getTouchAngle      = utils.pointer.touchAngle\n\ninteract.getElementRect       = utils.dom.getElementRect\ninteract.getElementClientRect = utils.dom.getElementClientRect\ninteract.matchesSelector      = utils.dom.matchesSelector\ninteract.closest              = utils.dom.closest\n\n/**\n * @alias module:interact.supportsTouch\n *\n * @return {boolean} Whether or not the browser supports touch input\n */\ninteract.supportsTouch = supportsTouch\nfunction supportsTouch () {\n  return browser.supportsTouch\n}\n\n/**\n * @alias module:interact.supportsPointerEvent\n *\n * @return {boolean} Whether or not the browser supports PointerEvents\n */\ninteract.supportsPointerEvent = supportsPointerEvent\nfunction supportsPointerEvent () {\n  return browser.supportsPointerEvent\n}\n\n/**\n * Cancels all interactions (end events are not fired)\n *\n * @alias module:interact.stop\n *\n * @return {object} interact\n */\ninteract.stop = stop\nfunction stop () {\n  for (const interaction of scope.interactions.list) {\n    interaction.stop()\n  }\n\n  return interact\n}\n\n/**\n * Returns or sets the distance the pointer must be moved before an action\n * sequence occurs. This also affects tolerance for tap events.\n *\n * @alias module:interact.pointerMoveTolerance\n *\n * @param {number} [newValue] The movement from the start position must be greater than this value\n * @return {interact | number}\n */\ninteract.pointerMoveTolerance = pointerMoveTolerance\nfunction pointerMoveTolerance (newValue) {\n  if (utils.is.number(newValue)) {\n    scope.interactions.pointerMoveTolerance = newValue\n\n    return interact\n  }\n\n  return scope.interactions.pointerMoveTolerance\n}\n\nscope.interactables.signals.on('unset', ({ interactable }) => {\n  scope.interactables.list.splice(scope.interactables.list.indexOf(interactable), 1)\n\n  // Stop related interactions when an Interactable is unset\n  for (const interaction of scope.interactions.list) {\n    if (interaction.interactable === interactable && interaction.interacting() && interaction._ending) {\n      interaction.stop()\n    }\n  }\n})\n\ninteract.addDocument = (doc, options) => scope.addDocument(doc, options)\ninteract.removeDocument = (doc) => scope.removeDocument(doc)\n\nscope.interact = interact\n\nexport { scope }\nexport default interact\n","import interact, { init as initInteract } from '@interactjs/interact'\nimport * as modifiers from '@interactjs/modifiers'\nimport '@interactjs/types'\nimport extend from '@interactjs/utils/extend'\nimport * as snappers from '@interactjs/utils/snappers'\n\ndeclare module '@interactjs/interact/interact' {\n    interface InteractStatic {\n        modifiers?: any\n        snappers?: typeof snappers & { [key: string]: any }\n        createSnapGrid?: typeof snappers.grid\n    }\n}\n\nif (typeof window === 'object' && !!window) {\n  init(window)\n}\n\nexport function init (win: Window) {\n  initInteract(win)\n\n  return interact.use({\n    id: 'interactjs',\n    install (scope) {\n      interact.modifiers = extend(scope.modifiers, modifiers)\n      interact.snappers = snappers\n      interact.createSnapGrid = interact.snappers.grid\n    },\n  })\n}\n\nexport default interact\ninteract['default'] = interact // tslint:disable-line no-string-literal\ninteract['init'] = init // tslint:disable-line no-string-literal\n\nif (typeof module === 'object' && !!module) {\n  module.exports = interact\n}\n","import { Scope } from '@interactjs/core/scope'\nimport extend from '@interactjs/utils/extend'\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    modifiers?: any\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    modifiers?: {\n      states: any[]\n      result?: {\n        delta: {\n          x: number\n          y: number\n        }\n        rectDelta: {\n          left: number\n          right: number\n          top: number\n          bottom: number\n        }\n        coords: Interact.Point\n        changed: boolean\n      }\n      [index: string]: any\n    }\n  }\n}\n\ndeclare module '@interactjs/core/defaultOptions' {\n  interface PerActionDefaults {\n    modifiers?: Array<ReturnType<typeof makeModifier>>\n  }\n}\n\nfunction install (scope: Scope) {\n  const {\n    interactions,\n  } = scope\n\n  scope.defaults.perAction.modifiers = []\n  scope.modifiers = {}\n\n  interactions.signals.on('new', ({ interaction }) => {\n    interaction.modifiers = {\n      startOffset: { left: 0, right: 0, top: 0, bottom: 0 },\n      offsets    : {},\n      states   : null,\n      result     : null,\n    }\n  })\n\n  interactions.signals.on('before-action-start', (arg) => {\n    start(arg as any, arg.interaction.coords.start.page, scope.modifiers)\n  })\n\n  interactions.signals.on('action-resume', (arg) => {\n    beforeMove(arg as any)\n    start(arg as any, arg.interaction.coords.cur.page, scope.modifiers)\n  })\n\n  interactions.signals.on('after-action-move', restoreCoords as any)\n  interactions.signals.on('before-action-move', beforeMove)\n\n  interactions.signals.on('before-action-start', setCoords)\n  interactions.signals.on('after-action-start', restoreCoords as any)\n\n  interactions.signals.on('before-action-end', beforeEnd)\n  interactions.signals.on('stop', stop)\n}\n\nfunction start (\n  { interaction, phase }: Interact.SignalArg,\n  pageCoords: Interact.Point,\n  registeredModifiers,\n) {\n  const { interactable, element } = interaction\n  const modifierList = getModifierList(interaction, registeredModifiers)\n  const states = prepareStates(modifierList)\n\n  const rect = extend({}, interaction.rect)\n\n  if (!('width'  in rect)) { rect.width  = rect.right  - rect.left }\n  if (!('height' in rect)) { rect.height = rect.bottom - rect.top  }\n\n  const startOffset = getRectOffset(rect, pageCoords)\n\n  interaction.modifiers.startOffset = startOffset\n  interaction.modifiers.startDelta = { x: 0, y: 0 }\n\n  const arg: Partial<Interact.SignalArg> = {\n    interaction,\n    interactable,\n    element,\n    pageCoords,\n    phase,\n    rect,\n    startOffset,\n    states,\n    preEnd: false,\n    requireEndOnly: false,\n  }\n\n  interaction.modifiers.states = states\n  interaction.modifiers.result = null\n  startAll(arg)\n\n  arg.pageCoords = extend({}, interaction.coords.start.page)\n\n  const result = interaction.modifiers.result = setAll(arg)\n\n  return result\n}\n\nexport function startAll (arg) {\n  for (const state of arg.states) {\n    if (state.methods.start) {\n      arg.state = state\n      state.methods.start(arg)\n    }\n  }\n}\n\nexport function setAll (arg: Partial<Interact.SignalArg>) {\n  const {\n    interaction,\n    modifiersState = interaction.modifiers,\n    prevCoords = modifiersState.result\n      ? modifiersState.result.coords\n      : interaction.coords.prev.page,\n    phase,\n    preEnd,\n    requireEndOnly,\n    rect,\n    skipModifiers,\n  } = arg\n\n  const states = skipModifiers\n    ? arg.states.slice(modifiersState.skip)\n    : arg.states\n\n  arg.coords = extend({}, arg.pageCoords)\n  arg.rect = extend({}, rect)\n\n  const result = {\n    delta: { x: 0, y: 0 },\n    rectDelta: {\n      left  : 0,\n      right : 0,\n      top   : 0,\n      bottom: 0,\n    },\n    coords: arg.coords,\n    changed: true,\n  }\n\n  for (const state of states) {\n    const { options } = state\n\n    if (!state.methods.set ||\n      !shouldDo(options, preEnd, requireEndOnly, phase)) { continue }\n\n    arg.state = state\n    state.methods.set(arg)\n  }\n\n  result.delta.x = arg.coords.x - arg.pageCoords.x\n  result.delta.y = arg.coords.y - arg.pageCoords.y\n\n  let rectChanged = false\n\n  if (rect) {\n    result.rectDelta.left   = arg.rect.left - rect.left\n    result.rectDelta.right  = arg.rect.right - rect.right\n    result.rectDelta.top    = arg.rect.top - rect.top\n    result.rectDelta.bottom = arg.rect.bottom - rect.bottom\n\n    rectChanged = result.rectDelta.left !== 0 ||\n      result.rectDelta.right !== 0 ||\n      result.rectDelta.top !== 0 ||\n      result.rectDelta.bottom !== 0\n  }\n\n  result.changed = prevCoords.x !== result.coords.x ||\n    prevCoords.y !== result.coords.y ||\n    rectChanged\n\n  return result\n}\n\nfunction beforeMove (arg: Interact.SignalArg): void | false {\n  const { interaction, phase, preEnd, skipModifiers } = arg\n  const { interactable, element } = interaction\n  const modifierResult = setAll(\n    {\n      interaction,\n      interactable,\n      element,\n      preEnd,\n      phase,\n      pageCoords: interaction.coords.cur.page,\n      rect: interaction.rect,\n      states: interaction.modifiers.states,\n      requireEndOnly: false,\n      skipModifiers,\n    })\n\n  interaction.modifiers.result = modifierResult\n\n  // don't fire an action move if a modifier would keep the event in the same\n  // cordinates as before\n  if (!modifierResult.changed && interaction.interacting()) {\n    return false\n  }\n\n  setCoords(arg)\n}\n\nfunction beforeEnd (arg): void | false {\n  const { interaction, event, noPreEnd } = arg\n  const states = interaction.modifiers.states\n\n  if (noPreEnd || !states || !states.length) {\n    return\n  }\n\n  let didPreEnd = false\n\n  for (const state of states) {\n    arg.state = state\n    const { options, methods } = state\n\n    const endResult = methods.beforeEnd && methods.beforeEnd(arg)\n\n    if (endResult === false) {\n      return false\n    }\n\n    // if the endOnly option is true for any modifier\n    if (!didPreEnd && shouldDo(options, true, true)) {\n      // fire a move event at the modified coordinates\n      interaction.move({ event, preEnd: true })\n      didPreEnd = true\n    }\n  }\n}\n\nfunction stop (arg) {\n  const { interaction } = arg\n  const states = interaction.modifiers.states\n\n  if (!states || !states.length) {\n    return\n  }\n\n  const modifierArg = extend({\n    states,\n    interactable: interaction.interactable,\n    element: interaction.element,\n  }, arg)\n\n  restoreCoords(arg)\n\n  for (const state of states) {\n    modifierArg.state = state\n\n    if (state.methods.stop) { state.methods.stop(modifierArg) }\n  }\n\n  arg.interaction.modifiers.states = null\n}\n\nfunction getModifierList (interaction, registeredModifiers) {\n  const actionOptions = interaction.interactable.options[interaction.prepared.name]\n  const actionModifiers = actionOptions.modifiers\n\n  if (actionModifiers && actionModifiers.length) {\n    return actionModifiers\n      .filter((modifier) => !modifier.options || modifier.options.enabled !== false)\n      .map((modifier) => {\n        if (!modifier.methods && modifier.type) {\n          return registeredModifiers[modifier.type](modifier)\n        }\n\n        return modifier\n      })\n  }\n\n  return ['snap', 'snapSize', 'snapEdges', 'restrict', 'restrictEdges', 'restrictSize']\n    .map((type) => {\n      const options = actionOptions[type]\n\n      return options && options.enabled && {\n        options,\n        methods: options._methods,\n      }\n    })\n    .filter((m) => !!m)\n}\n\nexport function prepareStates (modifierList) {\n  const states = []\n\n  for (let index = 0; index < modifierList.length; index++) {\n    const { options, methods, name } = modifierList[index]\n\n    if (options && options.enabled === false) { continue }\n\n    const state = {\n      options,\n      methods,\n      index,\n      name,\n    }\n\n    states.push(state)\n  }\n\n  return states\n}\n\nfunction setCoords (arg) {\n  const { interaction, phase } = arg\n  const curCoords = arg.curCoords || interaction.coords.cur\n  const startCoords = arg.startCoords || interaction.coords.start\n  const { result, startDelta } = interaction.modifiers\n  const curDelta = result.delta\n\n  if (phase === 'start') {\n    extend(interaction.modifiers.startDelta, result.delta)\n  }\n\n  for (const [coordsSet, delta] of [[startCoords, startDelta], [curCoords, curDelta]]) {\n    coordsSet.page.x   += delta.x\n    coordsSet.page.y   += delta.y\n    coordsSet.client.x += delta.x\n    coordsSet.client.y += delta.y\n  }\n\n  const { rectDelta } = interaction.modifiers.result\n  const rect = arg.rect || interaction.rect\n\n  rect.left   += rectDelta.left\n  rect.right  += rectDelta.right\n  rect.top    += rectDelta.top\n  rect.bottom += rectDelta.bottom\n\n  rect.width = rect.right - rect.left\n  rect.height = rect.bottom - rect.top\n}\n\nfunction restoreCoords ({ interaction: { coords, rect, modifiers } }: Interact.SignalArg) {\n  if (!modifiers.result) { return }\n\n  const { startDelta } = modifiers\n  const { delta: curDelta, rectDelta } = modifiers.result\n\n  for (const [coordsSet, delta] of [[coords.start, startDelta], [coords.cur, curDelta]]) {\n    coordsSet.page.x -= delta.x\n    coordsSet.page.y -= delta.y\n    coordsSet.client.x -= delta.x\n    coordsSet.client.y -= delta.y\n  }\n\n  rect.left -= rectDelta.left\n  rect.right -= rectDelta.right\n  rect.top -= rectDelta.top\n  rect.bottom -= rectDelta.bottom\n}\n\nfunction shouldDo (options, preEnd?: boolean, requireEndOnly?: boolean, phase?: string) {\n  return options\n    ? options.enabled !== false &&\n      (preEnd || !options.endOnly) &&\n      (!requireEndOnly || options.endOnly || options.alwaysOnEnd) &&\n      (options.setStart || phase !== 'start')\n    : !requireEndOnly\n}\n\nfunction getRectOffset (rect, coords) {\n  return rect\n    ? {\n      left  : coords.x - rect.left,\n      top   : coords.y - rect.top,\n      right : rect.right  - coords.x,\n      bottom: rect.bottom - coords.y,\n    }\n    : {\n      left  : 0,\n      top   : 0,\n      right : 0,\n      bottom: 0,\n    }\n}\n\nfunction makeModifier<Options extends { [key: string]: any }> (module: { defaults: Options, [key: string]: any }, name?: string) {\n  const { defaults } = module\n  const methods = {\n    start: module.start,\n    set: module.set,\n    beforeEnd: module.beforeEnd,\n    stop: module.stop,\n  }\n\n  const modifier = (options?: Partial<Options>) => {\n    options = options || {}\n\n    // add missing defaults to options\n    options.enabled = options.enabled !== false\n\n    for (const prop in defaults) {\n      if (!(prop in options)) {\n        options[prop] = defaults[prop]\n      }\n    }\n\n    return { options, methods, name }\n  }\n\n  if (typeof name === 'string') {\n    Object.defineProperty(\n      modifier,\n      'name',\n      { value: name })\n\n    // for backwrads compatibility\n    modifier._defaults = defaults\n    modifier._methods = methods\n  }\n\n  return modifier\n}\n\nexport default {\n  id: 'modifiers/base',\n  install,\n  startAll,\n  setAll,\n  prepareStates,\n  start,\n  beforeMove,\n  beforeEnd,\n  stop,\n  shouldDo,\n  getModifierList,\n  getRectOffset,\n  makeModifier,\n} as Interact.Plugin\n\nexport {\n  makeModifier,\n}\n","import base from './base'\nimport restrictEdgesModule from './restrict/edges'\nimport restrictModule from './restrict/pointer'\nimport restrictSizeModule from './restrict/size'\nimport snapEdgesModule from './snap/edges'\nimport snapModule from './snap/pointer'\nimport snapSizeModule from './snap/size'\n\nconst { makeModifier } = base\n\nexport const snap = makeModifier(snapModule, 'snap')\nexport const snapSize = makeModifier(snapSizeModule, 'snapSize')\nexport const snapEdges = makeModifier(snapEdgesModule, 'snapEdges')\nexport const restrict = makeModifier(restrictModule, 'restrict')\nexport const restrictEdges = makeModifier(restrictEdgesModule, 'restrictEdges')\nexport const restrictSize = makeModifier(restrictSizeModule, 'restrictSize')\n","// This module adds the options.resize.restrictEdges setting which sets min and\n// max for the top, left, bottom and right edges of the target being resized.\n//\n// interact(target).resize({\n//   edges: { top: true, left: true },\n//   restrictEdges: {\n//     inner: { top: 200, left: 200, right: 400, bottom: 400 },\n//     outer: { top:   0, left:   0, right: 600, bottom: 600 },\n//   },\n// })\n\nimport Interaction from '@interactjs/core/Interaction'\nimport extend from '@interactjs/utils/extend'\nimport rectUtils from '@interactjs/utils/rect'\nimport restrict from './pointer'\n\nconst { getRestrictionRect } = restrict\nconst noInner = { top: +Infinity, left: +Infinity, bottom: -Infinity, right: -Infinity }\nconst noOuter = { top: -Infinity, left: -Infinity, bottom: +Infinity, right: +Infinity }\n\nfunction start ({ interaction, state }: { interaction: Interaction, state: any }) {\n  const { options } = state\n  const startOffset = interaction.modifiers.startOffset\n  let offset\n\n  if (options) {\n    const offsetRect = getRestrictionRect(options.offset, interaction, interaction.coords.start.page)\n\n    offset = rectUtils.rectToXY(offsetRect)\n  }\n\n  offset = offset || { x: 0, y: 0 }\n\n  state.offset = {\n    top:    offset.y + startOffset.top,\n    left:   offset.x + startOffset.left,\n    bottom: offset.y - startOffset.bottom,\n    right:  offset.x - startOffset.right,\n  }\n}\n\nfunction set ({ coords, interaction, state }: {\n  coords: Interact.Point,\n  interaction: Interaction,\n  state: any\n}) {\n  const { offset, options } = state\n  const edges = interaction.prepared._linkedEdges || interaction.prepared.edges\n\n  if (!edges) {\n    return\n  }\n\n  const page = extend({}, coords)\n  const inner = getRestrictionRect(options.inner, interaction, page) || {}\n  const outer = getRestrictionRect(options.outer, interaction, page) || {}\n\n  fixRect(inner, noInner)\n  fixRect(outer, noOuter)\n\n  if (edges.top) {\n    coords.y = Math.min(Math.max(outer.top    + offset.top,    page.y), inner.top    + offset.top)\n  }\n  else if (edges.bottom) {\n    coords.y = Math.max(Math.min(outer.bottom + offset.bottom, page.y), inner.bottom + offset.bottom)\n  }\n  if (edges.left) {\n    coords.x = Math.min(Math.max(outer.left   + offset.left,   page.x), inner.left   + offset.left)\n  }\n  else if (edges.right) {\n    coords.x = Math.max(Math.min(outer.right  + offset.right,  page.x), inner.right  + offset.right)\n  }\n}\n\nfunction fixRect (rect, defaults) {\n  for (const edge of ['top', 'left', 'bottom', 'right']) {\n    if (!(edge in rect)) {\n      rect[edge] = defaults[edge]\n    }\n  }\n\n  return rect\n}\n\nconst restrictEdges = {\n  noInner,\n  noOuter,\n  getRestrictionRect,\n  start,\n  set,\n  defaults: {\n    enabled: false,\n    inner: null,\n    outer: null,\n    offset: null,\n  },\n}\n\nexport default restrictEdges\n","import * as is from '@interactjs/utils/is'\nimport rectUtils from '@interactjs/utils/rect'\n\nfunction start ({ rect, startOffset, state }) {\n  const { options } = state\n  const { elementRect } = options\n  const offset = {} as { [key: string]: number }\n\n  if (rect && elementRect) {\n    offset.left = startOffset.left - (rect.width  * elementRect.left)\n    offset.top  = startOffset.top  - (rect.height * elementRect.top)\n\n    offset.right  = startOffset.right  - (rect.width  * (1 - elementRect.right))\n    offset.bottom = startOffset.bottom - (rect.height * (1 - elementRect.bottom))\n  }\n  else {\n    offset.left = offset.top = offset.right = offset.bottom = 0\n  }\n\n  state.offset = offset\n}\n\nfunction set ({ coords, interaction, state }) {\n  const { options, offset } = state\n\n  const restriction = getRestrictionRect(options.restriction, interaction, coords)\n\n  if (!restriction) { return state }\n\n  const rect = restriction\n\n  // object is assumed to have\n  // x, y, width, height or\n  // left, top, right, bottom\n  if ('x' in restriction && 'y' in restriction) {\n    coords.x = Math.max(Math.min(rect.x + rect.width  - offset.right, coords.x), rect.x + offset.left)\n    coords.y = Math.max(Math.min(rect.y + rect.height - offset.bottom, coords.y), rect.y + offset.top)\n  }\n  else {\n    coords.x = Math.max(Math.min(rect.right  - offset.right, coords.x), rect.left + offset.left)\n    coords.y = Math.max(Math.min(rect.bottom - offset.bottom, coords.y), rect.top  + offset.top)\n  }\n}\n\nfunction getRestrictionRect (value, interaction, coords?: Interact.Point) {\n  if (is.func(value)) {\n    return rectUtils.resolveRectLike(value, interaction.interactable, interaction.element, [coords.x, coords.y, interaction])\n  } else {\n    return rectUtils.resolveRectLike(value, interaction.interactable, interaction.element)\n  }\n}\n\nconst restrict = {\n  start,\n  set,\n  getRestrictionRect,\n  defaults: {\n    enabled: false,\n    restriction: null,\n    elementRect: null,\n  },\n}\n\nexport default restrict\n","// This module adds the options.resize.restrictSize setting which sets min and\n// max width and height for the target being resized.\n//\n// interact(target).resize({\n//   edges: { top: true, left: true },\n//   restrictSize: {\n//     min: { width: -600, height: -600 },\n//     max: { width:  600, height:  600 },\n//   },\n// })\n\nimport extend from '@interactjs/utils/extend'\nimport rectUtils from '@interactjs/utils/rect'\nimport restrictEdges from './edges'\n\nconst noMin = { width: -Infinity, height: -Infinity }\nconst noMax = { width: +Infinity, height: +Infinity }\n\nfunction start (arg) {\n  return restrictEdges.start(arg)\n}\n\nfunction set (arg) {\n  const { interaction, state } = arg\n  const { options } = state\n  const edges = interaction.prepared.linkedEdges || interaction.prepared.edges\n\n  if (!edges) {\n    return\n  }\n\n  const rect = rectUtils.xywhToTlbr(interaction.resizeRects.inverted)\n\n  const minSize = rectUtils.tlbrToXywh(restrictEdges.getRestrictionRect(options.min, interaction)) || noMin\n  const maxSize = rectUtils.tlbrToXywh(restrictEdges.getRestrictionRect(options.max, interaction)) || noMax\n\n  state.options = {\n    enabled: options.enabled,\n    endOnly: options.endOnly,\n    inner: extend({}, restrictEdges.noInner),\n    outer: extend({}, restrictEdges.noOuter),\n  }\n\n  if (edges.top) {\n    state.options.inner.top = rect.bottom - minSize.height\n    state.options.outer.top = rect.bottom - maxSize.height\n  }\n  else if (edges.bottom) {\n    state.options.inner.bottom = rect.top + minSize.height\n    state.options.outer.bottom = rect.top + maxSize.height\n  }\n  if (edges.left) {\n    state.options.inner.left = rect.right - minSize.width\n    state.options.outer.left = rect.right - maxSize.width\n  }\n  else if (edges.right) {\n    state.options.inner.right = rect.left + minSize.width\n    state.options.outer.right = rect.left + maxSize.width\n  }\n\n  restrictEdges.set(arg)\n\n  state.options = options\n}\n\nconst restrictSize = {\n  start,\n  set,\n  defaults: {\n    enabled: false,\n    min: null,\n    max: null,\n  },\n}\n\nexport default restrictSize\n","/**\n * @module modifiers/snapEdges\n *\n * @description\n * This module allows snapping of the edges of targets during resize\n * interactions.\n *\n * @example\n * interact(target).resizable({\n *   snapEdges: {\n *     targets: [interact.snappers.grid({ x: 100, y: 50 })],\n *   },\n * })\n *\n * interact(target).resizable({\n *   snapEdges: {\n *     targets: [\n *       interact.snappers.grid({\n *        top: 50,\n *        left: 50,\n *        bottom: 100,\n *        right: 100,\n *       }),\n *     ],\n *   },\n * })\n */\n\nimport clone from '@interactjs/utils/clone'\nimport extend from '@interactjs/utils/extend'\nimport snapSize from './size'\n\nfunction start (arg) {\n  const edges = arg.interaction.prepared.edges\n\n  if (!edges) { return null }\n\n  arg.state.targetFields = arg.state.targetFields || [\n    [edges.left ? 'left' : 'right', edges.top ? 'top' : 'bottom'],\n  ]\n\n  return snapSize.start(arg)\n}\n\nfunction set (arg) {\n  return snapSize.set(arg)\n}\n\nconst snapEdges = {\n  start,\n  set,\n  defaults: extend(clone(snapSize.defaults), {\n    offset: { x: 0, y: 0 },\n  }),\n}\n\nexport default snapEdges\n","import * as utils from '@interactjs/utils'\n\nfunction start (arg: Interact.SignalArg) {\n  const { interaction, interactable, element, rect, state, startOffset } = arg\n  const { options } = state\n  const offsets = []\n  const origin = options.offsetWithOrigin\n    ? getOrigin(arg)\n    : { x: 0, y: 0 }\n\n  let snapOffset\n\n  if (options.offset === 'startCoords') {\n    snapOffset = {\n      x: interaction.coords.start.page.x,\n      y: interaction.coords.start.page.y,\n    }\n  }\n  else  {\n    const offsetRect = utils.rect.resolveRectLike(options.offset, interactable, element, [interaction])\n\n    snapOffset = utils.rect.rectToXY(offsetRect) || { x: 0, y: 0 }\n    snapOffset.x += origin.x\n    snapOffset.y += origin.y\n  }\n\n  const relativePoints = options.relativePoints || []\n\n  if (rect && options.relativePoints && options.relativePoints.length) {\n    for (let index = 0; index < relativePoints.length; index++) {\n      const relativePoint = relativePoints[index]\n\n      offsets.push({\n        index,\n        relativePoint,\n        x: startOffset.left - (rect.width  * relativePoint.x) + snapOffset.x,\n        y: startOffset.top  - (rect.height * relativePoint.y) + snapOffset.y,\n      })\n    }\n  }\n  else {\n    offsets.push(utils.extend({\n      index: 0,\n      relativePoint: null,\n    }, snapOffset))\n  }\n\n  state.offsets = offsets\n}\n\nfunction set (arg: Interact.SignalArg) {\n  const { interaction, coords, state } = arg\n  const { options, offsets } = state\n\n  const origin = utils.getOriginXY(interaction.interactable, interaction.element, interaction.prepared.name)\n  const page = utils.extend({}, coords)\n  const targets = []\n  let target\n\n  if (!options.offsetWithOrigin) {\n    page.x -= origin.x\n    page.y -= origin.y\n  }\n\n  state.realX = page.x\n  state.realY = page.y\n\n  for (const offset of offsets) {\n    const relativeX = page.x - offset.x\n    const relativeY = page.y - offset.y\n\n    for (let index = 0, len = options.targets.length; index < len; index++) {\n      const snapTarget = options.targets[index]\n      if (utils.is.func(snapTarget)) {\n        target = snapTarget(relativeX, relativeY, interaction, offset, index)\n      }\n      else {\n        target = snapTarget\n      }\n\n      if (!target) { continue }\n\n      targets.push({\n        x: (utils.is.number(target.x) ? target.x : relativeX) + offset.x,\n        y: (utils.is.number(target.y) ? target.y : relativeY) + offset.y,\n\n        range: utils.is.number(target.range) ? target.range : options.range,\n      })\n    }\n  }\n\n  const closest = {\n    target: null,\n    inRange: false,\n    distance: 0,\n    range: 0,\n    dx: 0,\n    dy: 0,\n  }\n\n  for (let i = 0, len = targets.length; i < len; i++) {\n    target = targets[i]\n\n    const range = target.range\n    const dx = target.x - page.x\n    const dy = target.y - page.y\n    const distance = utils.hypot(dx, dy)\n    let inRange = distance <= range\n\n    // Infinite targets count as being out of range\n    // compared to non infinite ones that are in range\n    if (range === Infinity && closest.inRange && closest.range !== Infinity) {\n      inRange = false\n    }\n\n    if (!closest.target || (inRange\n      // is the closest target in range?\n      ? (closest.inRange && range !== Infinity\n        // the pointer is relatively deeper in this target\n        ? distance / range < closest.distance / closest.range\n        // this target has Infinite range and the closest doesn't\n        : (range === Infinity && closest.range !== Infinity) ||\n          // OR this target is closer that the previous closest\n          distance < closest.distance)\n      // The other is not in range and the pointer is closer to this target\n      : (!closest.inRange && distance < closest.distance))) {\n      closest.target = target\n      closest.distance = distance\n      closest.range = range\n      closest.inRange = inRange\n      closest.dx = dx\n      closest.dy = dy\n\n      state.range = range\n    }\n  }\n\n  if (closest.inRange) {\n    coords.x = closest.target.x\n    coords.y = closest.target.y\n  }\n\n  state.closest = closest\n}\n\nfunction getOrigin (arg: Partial<Interact.SignalArg>) {\n  const optionsOrigin = utils.rect.rectToXY(\n    utils.rect.resolveRectLike(arg.state.options.origin)\n  )\n  const origin = optionsOrigin || utils.getOriginXY(\n    arg.interactable,\n    arg.interaction.element,\n    arg.interaction.prepared.name,\n  )\n\n  return origin\n}\n\nconst snap = {\n  start,\n  set,\n  defaults: {\n    enabled: false,\n    range  : Infinity,\n    targets: null,\n    offset: null,\n    offsetWithOrigin: true,\n\n    relativePoints: null,\n  },\n}\n\nexport default snap\n","// This module allows snapping of the size of targets during resize\n// interactions.\n\nimport extend from '@interactjs/utils/extend'\nimport * as is from '@interactjs/utils/is'\nimport snap from './pointer'\n\nfunction start (arg) {\n  const { interaction, state } = arg\n  const { options } = state\n  const edges = interaction.prepared.edges\n\n  if (!edges) { return null }\n\n  arg.state = {\n    options: {\n      relativePoints: [{\n        x: edges.left ? 0 : 1,\n        y: edges.top ? 0 : 1,\n      }],\n      origin: { x: 0, y: 0 },\n      offset: options.offset || 'self',\n      range: options.range,\n    },\n  }\n\n  state.targetFields = state.targetFields || [\n    ['width', 'height'],\n    ['x', 'y'],\n  ]\n\n  snap.start(arg)\n  state.offsets = arg.state.offsets\n\n  arg.state = state\n}\n\nfunction set (arg) {\n  const { interaction, state, coords } = arg\n  const { options, offsets } = state\n  const relative = {\n    x: coords.x - offsets[0].x,\n    y: coords.y - offsets[0].y,\n  }\n\n  state.options = extend({}, options)\n  state.options.targets = []\n\n  for (const snapTarget of (options.targets || [])) {\n    let target\n\n    if (is.func(snapTarget)) {\n      target = snapTarget(relative.x, relative.y, interaction)\n    }\n    else {\n      target = snapTarget\n    }\n\n    if (!target) { continue }\n\n    for (const [xField, yField] of state.targetFields) {\n      if (xField in target || yField in target) {\n        target.x = target[xField]\n        target.y = target[yField]\n\n        break\n      }\n    }\n\n    state.options.targets.push(target)\n  }\n\n  snap.set(arg)\n\n  state.options = options\n}\n\nconst snapSize = {\n  start,\n  set,\n  defaults: {\n    enabled: false,\n    range  : Infinity,\n    targets: null,\n    offset: null,\n  },\n}\n\nexport default snapSize\n","import BaseEvent from '@interactjs/core/BaseEvent'\nimport pointerUtils from '@interactjs/utils/pointerUtils'\n\n/** */\nexport default class PointerEvent<T extends string> extends BaseEvent {\n  type: T\n  originalEvent: Interact.PointerEventType\n  pointerId: number\n  pointerType: string\n  double: boolean\n  pageX: number\n  pageY: number\n  clientX: number\n  clientY: number\n  dt: number\n  eventable: any\n\n  /** */\n  constructor (\n    type: T,\n    pointer: Interact.PointerType | PointerEvent<any>,\n    event: Interact.PointerEventType,\n    eventTarget: Interact.EventTarget,\n    interaction: Interact.Interaction,\n    timeStamp: number,\n  ) {\n    super(interaction)\n    pointerUtils.pointerExtend(this, event)\n\n    if (event !== pointer) {\n      pointerUtils.pointerExtend(this, pointer)\n    }\n\n    this.timeStamp     = timeStamp\n    this.originalEvent = event\n    this.type          = type\n    this.pointerId     = pointerUtils.getPointerId(pointer)\n    this.pointerType   = pointerUtils.getPointerType(pointer)\n    this.target        = eventTarget\n    this.currentTarget = null\n\n    if (type === 'tap') {\n      const pointerIndex = interaction.getPointerIndex(pointer)\n      this.dt = this.timeStamp - interaction.pointers[pointerIndex].downTime\n\n      const interval = this.timeStamp - interaction.tapTime\n\n      this.double = !!(interaction.prevTap &&\n        interaction.prevTap.type !== 'doubletap' &&\n        interaction.prevTap.target === this.target &&\n        interval < 500)\n    }\n    else if (type === 'doubletap') {\n      this.dt = (pointer as PointerEvent<'tap'>).timeStamp - interaction.tapTime\n    }\n  }\n\n  _subtractOrigin ({ x: originX, y: originY }) {\n    this.pageX   -= originX\n    this.pageY   -= originY\n    this.clientX -= originX\n    this.clientY -= originY\n\n    return this\n  }\n\n  _addOrigin ({ x: originX, y: originY }) {\n    this.pageX   += originX\n    this.pageY   += originY\n    this.clientX += originX\n    this.clientY += originY\n\n    return this\n  }\n\n  /**\n   * Prevent the default behaviour of the original Event\n   */\n  preventDefault () {\n    this.originalEvent.preventDefault()\n  }\n}\n","import { PerActionDefaults } from '@interactjs/core/defaultOptions'\nimport Eventable from '@interactjs/core/Eventable'\nimport Interaction from '@interactjs/core/Interaction'\nimport { Scope } from '@interactjs/core/scope'\nimport * as utils from '@interactjs/utils'\nimport PointerEvent from './PointerEvent'\n\ntype EventTargetList = Array<{\n  eventable: Eventable,\n  element: Interact.EventTarget,\n  props: { [key: string]: any },\n}>\n\nexport interface PointerEventOptions extends PerActionDefaults {\n  enabled?: undefined // not used\n  holdDuration?: number,\n  ignoreFrom?: any,\n  allowFrom?: any,\n  origin?: Interact.Point | string | Element\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    pointerEvents: typeof pointerEvents\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    prevTap?: PointerEvent<string>\n    tapTime?: number\n  }\n}\n\ndeclare module '@interactjs/core/PointerInfo' {\n  interface PointerInfo {\n    hold?: {\n      duration: number\n      timeout: any\n    }\n  }\n}\n\ndeclare module '@interactjs/core/defaultOptions' {\n  interface ActionDefaults {\n    pointerEvents: Interact.Options\n  }\n}\n\nconst signals       = new utils.Signals()\nconst simpleSignals = [ 'down', 'up', 'cancel' ]\nconst simpleEvents  = [ 'down', 'up', 'cancel' ]\n\nconst defaults: PointerEventOptions = {\n  holdDuration: 600,\n  ignoreFrom  : null,\n  allowFrom   : null,\n  origin      : { x: 0, y: 0 },\n}\n\nconst pointerEvents = {\n  id: 'pointer-events/base',\n  install,\n  signals,\n  PointerEvent,\n  fire,\n  collectEventTargets,\n  createSignalListener,\n  defaults,\n  types: [\n    'down',\n    'move',\n    'up',\n    'cancel',\n    'tap',\n    'doubletap',\n    'hold',\n  ],\n}\n\nfunction fire<T extends string> (arg: {\n  interaction: Interaction,\n  pointer: Interact.PointerType,\n  event: Interact.PointerEventType,\n  eventTarget: Interact.EventTarget,\n  targets?: EventTargetList,\n  pointerEvent?: PointerEvent<T>,\n  type: T\n}, scope: Interact.Scope) {\n  const {\n    interaction, pointer, event, eventTarget,\n    type = (arg as any).pointerEvent.type,\n    targets = collectEventTargets(arg),\n  } = arg\n\n  const {\n    pointerEvent = new PointerEvent(type, pointer, event, eventTarget, interaction, scope.now()),\n  } = arg\n\n  const signalArg = {\n    interaction,\n    pointer,\n    event,\n    eventTarget,\n    targets,\n    type,\n    pointerEvent,\n  }\n\n  for (let i = 0; i < targets.length; i++) {\n    const target = targets[i]\n\n    for (const prop in target.props || {}) {\n      (pointerEvent as any)[prop] = target.props[prop]\n    }\n\n    const origin = utils.getOriginXY(target.eventable, target.element)\n\n    pointerEvent._subtractOrigin(origin)\n    pointerEvent.eventable = target.eventable\n    pointerEvent.currentTarget = target.element\n\n    target.eventable.fire(pointerEvent)\n\n    pointerEvent._addOrigin(origin)\n\n    if (pointerEvent.immediatePropagationStopped ||\n        (pointerEvent.propagationStopped &&\n            (i + 1) < targets.length && targets[i + 1].element !== pointerEvent.currentTarget)) {\n      break\n    }\n  }\n\n  signals.fire('fired', signalArg)\n\n  if (type === 'tap') {\n    // if pointerEvent should make a double tap, create and fire a doubletap\n    // PointerEvent and use that as the prevTap\n    const prevTap = pointerEvent.double\n      ? fire({\n        interaction,\n        pointer,\n        event,\n        eventTarget,\n        type: 'doubletap',\n      }, scope)\n      : pointerEvent\n\n    interaction.prevTap = prevTap\n    interaction.tapTime = prevTap.timeStamp\n  }\n\n  return pointerEvent\n}\n\nfunction collectEventTargets<T extends string> ({ interaction, pointer, event, eventTarget, type }: {\n  interaction: Interaction,\n  pointer: Interact.PointerType,\n  event: Interact.PointerEventType,\n  eventTarget: Interact.EventTarget,\n  type: T\n}) {\n  const pointerIndex = interaction.getPointerIndex(pointer)\n  const pointerInfo = interaction.pointers[pointerIndex]\n\n  // do not fire a tap event if the pointer was moved before being lifted\n  if (type === 'tap' && (interaction.pointerWasMoved ||\n      // or if the pointerup target is different to the pointerdown target\n      !(pointerInfo && pointerInfo.downTarget === eventTarget))) {\n    return []\n  }\n\n  const path = utils.dom.getPath(eventTarget)\n  const signalArg = {\n    interaction,\n    pointer,\n    event,\n    eventTarget,\n    type,\n    path,\n    targets: [] as EventTargetList,\n    element: null,\n  }\n\n  for (const element of path) {\n    signalArg.element = element\n\n    signals.fire('collect-targets', signalArg)\n  }\n\n  if (type === 'hold') {\n    signalArg.targets = signalArg.targets.filter((target) =>\n      target.eventable.options.holdDuration === interaction.pointers[pointerIndex].hold.duration)\n  }\n\n  return signalArg.targets\n}\n\nfunction install (scope: Scope) {\n  const {\n    interactions,\n  } = scope\n\n  scope.pointerEvents = pointerEvents\n  scope.defaults.actions.pointerEvents = pointerEvents.defaults\n\n  interactions.signals.on('new', ({ interaction }) => {\n    interaction.prevTap    = null  // the most recent tap event on this interaction\n    interaction.tapTime    = 0     // time of the most recent tap event\n  })\n\n  interactions.signals.on('update-pointer', ({ down, pointerInfo }) => {\n    if (!down && pointerInfo.hold) {\n      return\n    }\n\n    pointerInfo.hold = { duration: Infinity, timeout: null }\n  })\n\n  interactions.signals.on('move', ({ interaction, pointer, event, eventTarget, duplicateMove }) => {\n    const pointerIndex = interaction.getPointerIndex(pointer)\n\n    if (!duplicateMove && (!interaction.pointerIsDown || interaction.pointerWasMoved)) {\n      if (interaction.pointerIsDown) {\n        clearTimeout(interaction.pointers[pointerIndex].hold.timeout)\n      }\n\n      fire({\n        interaction,\n        pointer,\n        event,\n        eventTarget,\n        type: 'move',\n      }, scope)\n    }\n  })\n\n  interactions.signals.on('down', ({ interaction, pointer, event, eventTarget, pointerIndex }) => {\n    const timer = interaction.pointers[pointerIndex].hold\n    const path = utils.dom.getPath(eventTarget)\n    const signalArg = {\n      interaction,\n      pointer,\n      event,\n      eventTarget,\n      type: 'hold',\n      targets: [] as EventTargetList,\n      path,\n      element: null,\n    }\n\n    for (const element of path) {\n      signalArg.element = element\n\n      signals.fire('collect-targets', signalArg)\n    }\n\n    if (!signalArg.targets.length) { return }\n\n    let minDuration = Infinity\n\n    for (const target of signalArg.targets) {\n      const holdDuration = target.eventable.options.holdDuration\n\n      if (holdDuration < minDuration) {\n        minDuration = holdDuration\n      }\n    }\n\n    timer.duration = minDuration\n    timer.timeout = setTimeout(() => {\n      fire({\n        interaction,\n        eventTarget,\n        pointer,\n        event,\n        type: 'hold',\n      }, scope)\n    }, minDuration)\n  })\n\n  for (const signalName of ['up', 'cancel']) {\n    interactions.signals.on(signalName, ({ interaction, pointerIndex }) => {\n      if (interaction.pointers[pointerIndex].hold) {\n        clearTimeout(interaction.pointers[pointerIndex].hold.timeout)\n      }\n    })\n  }\n\n  for (let i = 0; i < simpleSignals.length; i++) {\n    interactions.signals.on(simpleSignals[i], createSignalListener(simpleEvents[i], scope))\n  }\n\n  interactions.signals.on('up', ({ interaction, pointer, event, eventTarget }) => {\n    if (!interaction.pointerWasMoved) {\n      fire({ interaction, eventTarget, pointer, event, type: 'tap' }, scope)\n    }\n  })\n}\n\nfunction createSignalListener (type: string, scope) {\n  return function ({ interaction, pointer, event, eventTarget }: any) {\n    fire({ interaction, eventTarget, pointer, event, type }, scope)\n  }\n}\n\nexport default pointerEvents\n","import basePlugin from './base'\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    holdIntervalHandle?: any\n  }\n}\n\ndeclare module '@interactjs/pointer-events/base' {\n  interface PointerEventOptions {\n    holdRepeatInterval?: number\n  }\n}\n\nfunction install (scope: Interact.Scope) {\n  const {\n    pointerEvents,\n    interactions,\n  } = scope\n\n  scope.usePlugin(basePlugin)\n\n  pointerEvents.signals.on('new', onNew)\n  pointerEvents.signals.on('fired', (arg) => onFired(arg as any, scope))\n\n  for (const signal of ['move', 'up', 'cancel', 'endall']) {\n    interactions.signals.on(signal, endHoldRepeat)\n  }\n\n  // don't repeat by default\n  pointerEvents.defaults.holdRepeatInterval = 0\n  pointerEvents.types.push('holdrepeat')\n}\n\nfunction onNew ({ pointerEvent }) {\n  if (pointerEvent.type !== 'hold') { return }\n\n  pointerEvent.count = (pointerEvent.count || 0) + 1\n}\n\nfunction onFired (\n  { interaction, pointerEvent, eventTarget, targets }: Interact.SignalArg,\n  scope: Interact.Scope\n) {\n  if (pointerEvent.type !== 'hold' || !targets.length) { return }\n\n  // get the repeat interval from the first eventable\n  const interval = targets[0].eventable.options.holdRepeatInterval\n\n  // don't repeat if the interval is 0 or less\n  if (interval <= 0) { return }\n\n  // set a timeout to fire the holdrepeat event\n  interaction.holdIntervalHandle = setTimeout(() => {\n    scope.pointerEvents.fire({\n      interaction,\n      eventTarget,\n      type: 'hold',\n      pointer: pointerEvent,\n      event: pointerEvent,\n    }, scope)\n  }, interval)\n}\n\nfunction endHoldRepeat ({ interaction }) {\n  // set the interaction's holdStopTime property\n  // to stop further holdRepeat events\n  if (interaction.holdIntervalHandle) {\n    clearInterval(interaction.holdIntervalHandle)\n    interaction.holdIntervalHandle = null\n  }\n}\n\nexport default {\n  id: 'pointer-events/holdRepeat',\n  install,\n} as Interact.Plugin\n","import pointerEvents from './base'\nimport holdRepeat from './holdRepeat'\nimport interactableTargets from './interactableTargets'\n\nfunction install (scope) {\n  scope.usePlugin(pointerEvents)\n  scope.usePlugin(holdRepeat)\n  scope.usePlugin(interactableTargets)\n}\n\nconst id = 'pointer-events'\n\nexport { id, pointerEvents, holdRepeat, interactableTargets, install }\n","import { Scope } from '@interactjs/core/scope'\nimport { merge } from '@interactjs/utils/arr'\nimport extend from '@interactjs/utils/extend'\nimport * as is from '@interactjs/utils/is'\ntype Interactable = import ('@interactjs/core/Interactable').default\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    pointerEvents: typeof pointerEventsMethod\n    __backCompatOption: (optionName: string, newValue: any) => any\n  }\n}\n\nfunction install (scope: Scope) {\n  const {\n    pointerEvents,\n    actions,\n    Interactable,\n    interactables,\n  } = scope\n\n  pointerEvents.signals.on('collect-targets', ({ targets, element, type, eventTarget }: any) => {\n    scope.interactables.forEachMatch(element, (interactable: Interactable) => {\n      const eventable = interactable.events\n      const options = eventable.options\n\n      if (\n        eventable.types[type] &&\n        eventable.types[type].length &&\n        is.element(element) &&\n        interactable.testIgnoreAllow(options, element, eventTarget)) {\n        targets.push({\n          element,\n          eventable,\n          props: { interactable },\n        })\n      }\n    })\n  })\n\n  interactables.signals.on('new', ({ interactable }) => {\n    interactable.events.getRect = function (element: Element) {\n      return interactable.getRect(element)\n    }\n  })\n\n  interactables.signals.on('set', ({ interactable, options }) => {\n    extend(interactable.events.options, pointerEvents.defaults)\n    extend(interactable.events.options, options.pointerEvents || {})\n  })\n\n  merge(actions.eventTypes, pointerEvents.types)\n\n  Interactable.prototype.pointerEvents = pointerEventsMethod\n\n  const __backCompatOption = Interactable.prototype._backCompatOption\n\n  Interactable.prototype._backCompatOption = function (optionName, newValue) {\n    const ret = __backCompatOption.call(this, optionName, newValue)\n\n    if (ret === this) {\n      this.events.options[optionName] = newValue\n    }\n\n    return ret\n  }\n}\n\nfunction pointerEventsMethod (this: Interactable, options: any) {\n  extend(this.events.options, options)\n\n  return this\n}\n\nexport default {\n  id: 'pointer-events/interactableTargets',\n  install,\n}\n","import Interactable from '@interactjs/core/Interactable'\nimport { EventPhase } from '@interactjs/core/InteractEvent'\nimport { ActionProps, Interaction } from '@interactjs/core/Interaction'\nimport { Scope } from '@interactjs/core/scope'\nimport { arr, extend, is, pointer as pointerUtils, rect as rectUtils, win } from '@interactjs/utils'\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    reflow: (action: ActionProps) => ReturnType<typeof reflow>\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    _reflowPromise: Promise<void>\n    _reflowResolve: () => void\n  }\n}\n\ndeclare module '@interactjs/core/InteractEvent' {\n  // eslint-disable-next-line no-shadow\n  enum EventPhase {\n    Reflow = 'reflow',\n  }\n}\n\n(EventPhase as any).Reflow = 'reflow'\n\nexport function install (scope: Scope) {\n  const {\n    actions,\n    interactions,\n    /** @lends Interactable */\n    // eslint-disable-next-line no-shadow\n    Interactable,\n  } = scope\n\n  // add action reflow event types\n  for (const actionName of actions.names) {\n    actions.eventTypes.push(`${actionName}reflow`)\n  }\n\n  // remove completed reflow interactions\n  interactions.signals.on('stop', ({ interaction }) => {\n    if (interaction.pointerType === EventPhase.Reflow) {\n      if (interaction._reflowResolve) {\n        interaction._reflowResolve()\n      }\n\n      arr.remove(scope.interactions.list, interaction)\n    }\n  })\n\n  /**\n   * ```js\n   * const interactable = interact(target)\n   * const drag = { name: drag, axis: 'x' }\n   * const resize = { name: resize, edges: { left: true, bottom: true }\n   *\n   * interactable.reflow(drag)\n   * interactable.reflow(resize)\n   * ```\n   *\n   * Start an action sequence to re-apply modifiers, check drops, etc.\n   *\n   * @param { Object } action The action to begin\n   * @param { string } action.name The name of the action\n   * @returns { Promise<Interactable> }\n   */\n  Interactable.prototype.reflow = function (action) {\n    return reflow(this, action, scope)\n  }\n}\n\nfunction reflow (interactable: Interactable, action: ActionProps, scope: Scope): Promise<Interactable> {\n  const elements = is.string(interactable.target)\n    ? arr.from(interactable._context.querySelectorAll(interactable.target))\n    : [interactable.target]\n\n  // tslint:disable-next-line variable-name\n  const Promise = (win.window as any).Promise\n  const promises: Array<Promise<null>> | null = Promise ? [] : null\n\n  for (const element of elements) {\n    const rect = interactable.getRect(element)\n\n    if (!rect) { break }\n\n    const runningInteraction = arr.find(\n      scope.interactions.list,\n      (interaction: Interaction) => {\n        return interaction.interacting() &&\n          interaction.interactable === interactable &&\n          interaction.element === element &&\n          interaction.prepared.name === action.name\n      })\n    let reflowPromise: Promise<null>\n\n    if (runningInteraction) {\n      runningInteraction.move()\n\n      if (promises) {\n        reflowPromise = runningInteraction._reflowPromise || new Promise((resolve: any) => {\n          runningInteraction._reflowResolve = resolve\n        })\n      }\n    }\n    else {\n      const xywh = rectUtils.tlbrToXywh(rect)\n      const coords = {\n        page     : { x: xywh.x, y: xywh.y },\n        client   : { x: xywh.x, y: xywh.y },\n        timeStamp: scope.now(),\n      }\n\n      const event = pointerUtils.coordsToEvent(coords)\n      reflowPromise = startReflow(scope, interactable, element, action, event)\n    }\n\n    if (promises) {\n      promises.push(reflowPromise)\n    }\n  }\n\n  return promises && Promise.all(promises).then(() => interactable)\n}\n\nfunction startReflow (scope: Scope, interactable: Interactable, element: Element, action: ActionProps, event: any) {\n  const interaction = scope.interactions.new({ pointerType: 'reflow' })\n  const signalArg = {\n    interaction,\n    event,\n    pointer: event,\n    eventTarget: element,\n    phase: EventPhase.Reflow,\n  }\n\n  interaction.interactable = interactable\n  interaction.element = element\n  interaction.prepared = extend({}, action)\n  interaction.prevEvent = event\n  interaction.updatePointer(event, event, element, true)\n\n  interaction._doPhase(signalArg)\n\n  const reflowPromise = (win.window as unknown as any).Promise\n    ? new (win.window as unknown as any).Promise((resolve: any) => {\n      interaction._reflowResolve = resolve\n    })\n    : null\n\n  interaction._reflowPromise = reflowPromise\n  interaction.start(action, interactable, element)\n\n  if (interaction._interacting) {\n    interaction.move(signalArg)\n    interaction.end(event)\n  }\n  else {\n    interaction.stop()\n  }\n\n  interaction.removePointer(event, event)\n  interaction.pointerIsDown = false\n\n  return reflowPromise\n}\n\nexport default {\n  id: 'reflow',\n  install,\n} as Interact.Plugin\n","export type SignalListener = (signalArg: PartialSignalArg, sinalName?: string) => (void | boolean)\n\nexport interface SignalArg<T extends Interact.ActionName = any> {\n  interaction: Interact.Interaction<T>\n  Interactable: Interact.Interactable\n  iEvent: Interact.InteractEvent<T>\n  element: Interact.EventTarget\n  coords: Interact.Point\n  event: Interact.PointerEventType\n  phase: Interact.EventPhase\n  [index: string]: any\n}\n\nexport type PartialSignalArg = Partial<SignalArg>\n\nclass Signals {\n  listeners: {\n    [signalName: string]: SignalListener[],\n  } = {}\n\n  on (name: string, listener: SignalListener) {\n    if (!this.listeners[name]) {\n      this.listeners[name] = [listener]\n      return\n    }\n\n    this.listeners[name].push(listener)\n  }\n\n  off (name: string, listener: SignalListener) {\n    if (!this.listeners[name]) { return }\n\n    const index = this.listeners[name].indexOf(listener)\n\n    if (index !== -1) {\n      this.listeners[name].splice(index, 1)\n    }\n  }\n\n  fire (name: string, arg: Partial<SignalArg>): void | false {\n    const targetListeners = this.listeners[name]\n\n    if (!targetListeners) { return }\n\n    for (const listener of targetListeners) {\n      if (listener(arg, name) === false) {\n        return false\n      }\n    }\n  }\n}\n\nexport default Signals\n","export function contains (array, target) {\n  return array.indexOf(target) !== -1\n}\n\nexport function remove (array, target) {\n  return array.splice(array.indexOf(target), 1)\n}\n\nexport function merge (target, source) {\n  for (const item of source) {\n    target.push(item)\n  }\n\n  return target\n}\n\nexport function from (source) {\n  return merge([], source)\n}\n\nexport function findIndex (array, func) {\n  for (let i = 0; i < array.length; i++) {\n    if (func(array[i], i, array)) {\n      return i\n    }\n  }\n\n  return -1\n}\n\nexport function find (array, func) {\n  return array[findIndex(array, func)]\n}\n\nexport function some (array, func) {\n  return findIndex(array, func) !== -1\n}\n","import domObjects from './domObjects'\nimport * as is from './is'\nimport win from './window'\n\nconst browser = {\n  init,\n  supportsTouch: null as boolean,\n  supportsPointerEvent: null as boolean,\n  isIOS7: null as boolean,\n  isIOS: null as boolean,\n  isIe9: null as boolean,\n  isOperaMobile: null as boolean,\n  prefixedMatchesSelector: null as string,\n  pEventTypes: null as {\n    up: string,\n    down: string,\n    over: string,\n    out: string,\n    move: string,\n    cancel: string,\n  },\n  wheelEvent: null as string,\n}\n\nfunction init (window) {\n  const Element = domObjects.Element\n  const navigator  = win.window.navigator\n\n  // Does the browser support touch input?\n  browser.supportsTouch = ('ontouchstart' in window) ||\n    (is.func(window.DocumentTouch) && domObjects.document instanceof window.DocumentTouch)\n\n  // Does the browser support PointerEvents\n  browser.supportsPointerEvent = navigator.pointerEnabled !== false && !!domObjects.PointerEvent\n\n  browser.isIOS = (/iP(hone|od|ad)/.test(navigator.platform))\n\n  // scrolling doesn't change the result of getClientRects on iOS 7\n  browser.isIOS7 = (/iP(hone|od|ad)/.test(navigator.platform) &&\n           /OS 7[^\\d]/.test(navigator.appVersion))\n\n  browser.isIe9 = /MSIE 9/.test(navigator.userAgent)\n\n  // Opera Mobile must be handled differently\n  browser.isOperaMobile = (navigator.appName === 'Opera' &&\n    browser.supportsTouch &&\n    /Presto/.test(navigator.userAgent))\n\n  // prefix matchesSelector\n  browser.prefixedMatchesSelector = 'matches' in Element.prototype\n    ? 'matches'\n    : 'webkitMatchesSelector' in Element.prototype\n      ? 'webkitMatchesSelector'\n      : 'mozMatchesSelector' in Element.prototype\n        ? 'mozMatchesSelector'\n        : 'oMatchesSelector' in Element.prototype\n          ? 'oMatchesSelector'\n          : 'msMatchesSelector'\n\n  browser.pEventTypes = (browser.supportsPointerEvent\n    ? (domObjects.PointerEvent === window.MSPointerEvent\n      ? {\n        up:     'MSPointerUp',\n        down:   'MSPointerDown',\n        over:   'mouseover',\n        out:    'mouseout',\n        move:   'MSPointerMove',\n        cancel: 'MSPointerCancel',\n      }\n      : {\n        up:     'pointerup',\n        down:   'pointerdown',\n        over:   'pointerover',\n        out:    'pointerout',\n        move:   'pointermove',\n        cancel: 'pointercancel',\n      })\n    : null)\n\n  // because Webkit and Opera still use 'mousewheel' event type\n  browser.wheelEvent = 'onmousewheel' in domObjects.document ? 'mousewheel' : 'wheel'\n}\n\nexport default browser\n","import * as arr from './arr'\nimport * as is from './is'\n\nexport default function clone<T extends { [key: string]: any }> (source: T): Partial<T> {\n  const dest = {} as Partial<T>\n\n  for (const prop in source) {\n    const value = source[prop]\n\n    if (is.plainObject(value)) {\n      dest[prop] = clone(value) as any\n    }\n    else if (is.array(value)) {\n      dest[prop] = arr.from(value)\n    }\n    else {\n      dest[prop] = value\n    }\n  }\n\n  return dest\n}\n","const domObjects: {\n  init: any,\n  document: Document,\n  DocumentFragment: typeof DocumentFragment,\n  SVGElement: typeof SVGElement,\n  SVGSVGElement: typeof SVGSVGElement,\n  SVGElementInstance: any,\n  Element: typeof Element,\n  HTMLElement: typeof HTMLElement,\n  Event: typeof Event,\n  Touch: typeof Touch,\n  PointerEvent: typeof PointerEvent,\n} =\n{\n  init,\n  document: null as any,\n  DocumentFragment: null as any,\n  SVGElement: null as any,\n  SVGSVGElement: null as any,\n  // eslint-disable-next-line no-undef\n  SVGElementInstance: null as any,\n  Element: null as any,\n  HTMLElement: null as any,\n  Event: null as any,\n  Touch: null as any,\n  PointerEvent: null as any,\n}\n\nfunction blank () {}\n\nexport default domObjects\n\nfunction init (window: Window) {\n  const win = window as any\n\n  domObjects.document           = win.document\n  domObjects.DocumentFragment   = win.DocumentFragment   || blank\n  domObjects.SVGElement         = win.SVGElement         || blank\n  domObjects.SVGSVGElement      = win.SVGSVGElement      || blank\n  domObjects.SVGElementInstance = win.SVGElementInstance || blank\n  domObjects.Element            = win.Element            || blank\n  domObjects.HTMLElement        = win.HTMLElement        || domObjects.Element\n\n  domObjects.Event        = win.Event\n  domObjects.Touch        = win.Touch || blank\n  domObjects.PointerEvent = (win.PointerEvent || win.MSPointerEvent)\n}\n","import browser from './browser'\nimport domObjects from './domObjects'\nimport * as is from './is'\nimport win from './window'\n\nexport function nodeContains (parent, child) {\n  while (child) {\n    if (child === parent) {\n      return true\n    }\n\n    child = child.parentNode\n  }\n\n  return false\n}\n\nexport function closest (element, selector) {\n  while (is.element(element)) {\n    if (matchesSelector(element, selector)) { return element }\n\n    element = parentNode(element)\n  }\n\n  return null\n}\n\nexport function parentNode (node) {\n  let parent = node.parentNode\n\n  if (is.docFrag(parent)) {\n    // skip past #shado-root fragments\n    // tslint:disable-next-line\n    while ((parent = (parent as any).host) && is.docFrag(parent)) {\n      continue\n    }\n\n    return parent\n  }\n\n  return parent\n}\n\nexport function matchesSelector (element, selector) {\n  // remove /deep/ from selectors if shadowDOM polyfill is used\n  if (win.window !== win.realWindow) {\n    selector = selector.replace(/\\/deep\\//g, ' ')\n  }\n\n  return element[browser.prefixedMatchesSelector](selector)\n}\n\n// Test for the element that's \"above\" all other qualifiers\nexport function indexOfDeepestElement (elements) {\n  let deepestZoneParents = []\n  let dropzoneParents = []\n  let dropzone\n  let deepestZone = elements[0]\n  let index = deepestZone ? 0 : -1\n  let parent\n  let child\n  let i\n  let n\n\n  for (i = 1; i < elements.length; i++) {\n    dropzone = elements[i]\n\n    // an element might belong to multiple selector dropzones\n    if (!dropzone || dropzone === deepestZone) {\n      continue\n    }\n\n    if (!deepestZone) {\n      deepestZone = dropzone\n      index = i\n      continue\n    }\n\n    // check if the deepest or current are document.documentElement or document.rootElement\n    // - if the current dropzone is, do nothing and continue\n    if (dropzone.parentNode === dropzone.ownerDocument) {\n      continue\n    }\n    // - if deepest is, update with the current dropzone and continue to next\n    else if (deepestZone.parentNode === dropzone.ownerDocument) {\n      deepestZone = dropzone\n      index = i\n      continue\n    }\n\n    if (!deepestZoneParents.length) {\n      parent = deepestZone\n      while (parent.parentNode && parent.parentNode !== parent.ownerDocument) {\n        deepestZoneParents.unshift(parent)\n        parent = parent.parentNode\n      }\n    }\n\n    // if this element is an svg element and the current deepest is\n    // an HTMLElement\n    if (deepestZone instanceof domObjects.HTMLElement &&\n        dropzone instanceof domObjects.SVGElement &&\n        !(dropzone instanceof domObjects.SVGSVGElement)) {\n      if (dropzone === deepestZone.parentNode) {\n        continue\n      }\n\n      parent = dropzone.ownerSVGElement\n    }\n    else {\n      parent = dropzone\n    }\n\n    dropzoneParents = []\n\n    while (parent.parentNode !== parent.ownerDocument) {\n      dropzoneParents.unshift(parent)\n      parent = parent.parentNode\n    }\n\n    n = 0\n\n    // get (position of last common ancestor) + 1\n    while (dropzoneParents[n] && dropzoneParents[n] === deepestZoneParents[n]) {\n      n++\n    }\n\n    const parents = [\n      dropzoneParents[n - 1],\n      dropzoneParents[n],\n      deepestZoneParents[n],\n    ]\n\n    child = parents[0].lastChild\n\n    while (child) {\n      if (child === parents[1]) {\n        deepestZone = dropzone\n        index = i\n        deepestZoneParents = []\n\n        break\n      }\n      else if (child === parents[2]) {\n        break\n      }\n\n      child = child.previousSibling\n    }\n  }\n\n  return index\n}\n\nexport function matchesUpTo (element, selector, limit) {\n  while (is.element(element)) {\n    if (matchesSelector(element, selector)) {\n      return true\n    }\n\n    element = parentNode(element)\n\n    if (element === limit) {\n      return matchesSelector(element, selector)\n    }\n  }\n\n  return false\n}\n\nexport function getActualElement (element) {\n  return (element instanceof domObjects.SVGElementInstance\n    ? element.correspondingUseElement\n    : element)\n}\n\nexport function getScrollXY (relevantWindow) {\n  relevantWindow = relevantWindow || win.window\n  return {\n    x: relevantWindow.scrollX || relevantWindow.document.documentElement.scrollLeft,\n    y: relevantWindow.scrollY || relevantWindow.document.documentElement.scrollTop,\n  }\n}\n\nexport function getElementClientRect (element) {\n  const clientRect = (element instanceof domObjects.SVGElement\n    ? element.getBoundingClientRect()\n    : element.getClientRects()[0])\n\n  return clientRect && {\n    left  : clientRect.left,\n    right : clientRect.right,\n    top   : clientRect.top,\n    bottom: clientRect.bottom,\n    width : clientRect.width  || clientRect.right  - clientRect.left,\n    height: clientRect.height || clientRect.bottom - clientRect.top,\n  }\n}\n\nexport function getElementRect (element) {\n  const clientRect = getElementClientRect(element)\n\n  if (!browser.isIOS7 && clientRect) {\n    const scroll = getScrollXY(win.getWindow(element))\n\n    clientRect.left   += scroll.x\n    clientRect.right  += scroll.x\n    clientRect.top    += scroll.y\n    clientRect.bottom += scroll.y\n  }\n\n  return clientRect\n}\n\nexport function getPath (element) {\n  const path = []\n\n  while (element) {\n    path.push(element)\n    element = parentNode(element)\n  }\n\n  return path\n}\n\nexport function trySelector (value) {\n  if (!is.string(value)) { return false }\n\n  // an exception will be raised if it is invalid\n  domObjects.document.querySelector(value)\n  return true\n}\n","import { contains } from './arr'\nimport * as domUtils from './domUtils'\nimport * as is from './is'\nimport pExtend from './pointerExtend'\nimport pointerUtils from './pointerUtils'\n\ntype Listener = (event: Event | FakeEvent) => any\n\nconst elements: EventTarget[] = []\nconst targets: Array<{\n  events: { [type: string]: Listener[] },\n  typeCount: number,\n}> = []\n\nconst delegatedEvents: {\n  [type: string]: {\n    selectors: string[],\n    contexts: EventTarget[],\n    listeners: Array<Array<[Listener, boolean, boolean]>>,\n  },\n} = {}\nconst documents: Document[] = []\n\nfunction add (element: EventTarget, type: string, listener: Listener, optionalArg?: boolean | any) {\n  const options = getOptions(optionalArg)\n  let elementIndex = elements.indexOf(element)\n  let target = targets[elementIndex]\n\n  if (!target) {\n    target = {\n      events: {},\n      typeCount: 0,\n    }\n\n    elementIndex = elements.push(element) - 1\n    targets.push(target)\n  }\n\n  if (!target.events[type]) {\n    target.events[type] = []\n    target.typeCount++\n  }\n\n  if (!contains(target.events[type], listener)) {\n    element.addEventListener(type, listener as any, events.supportsOptions ? options : !!options.capture)\n    target.events[type].push(listener)\n  }\n}\n\nfunction remove (element: EventTarget, type: string, listener?: 'all' | Listener, optionalArg?: boolean | any) {\n  const options = getOptions(optionalArg)\n  const elementIndex = elements.indexOf(element)\n  const target = targets[elementIndex]\n\n  if (!target || !target.events) {\n    return\n  }\n\n  if (type === 'all') {\n    for (type in target.events) {\n      if (target.events.hasOwnProperty(type)) {\n        remove(element, type, 'all')\n      }\n    }\n    return\n  }\n\n  if (target.events[type]) {\n    const len = target.events[type].length\n\n    if (listener === 'all') {\n      for (let i = 0; i < len; i++) {\n        remove(element, type, target.events[type][i], options)\n      }\n      return\n    }\n    else {\n      for (let i = 0; i < len; i++) {\n        if (target.events[type][i] === listener) {\n          element.removeEventListener(type, listener as any, events.supportsOptions ? options : !!options.capture)\n          target.events[type].splice(i, 1)\n\n          break\n        }\n      }\n    }\n\n    if (target.events[type] && target.events[type].length === 0) {\n      (target.events[type] as any) = null\n      target.typeCount--\n    }\n  }\n\n  if (!target.typeCount) {\n    targets.splice(elementIndex, 1)\n    elements.splice(elementIndex, 1)\n  }\n}\n\nfunction addDelegate (selector: string, context: EventTarget, type: string, listener: Listener, optionalArg?: any) {\n  const options = getOptions(optionalArg)\n  if (!delegatedEvents[type]) {\n    delegatedEvents[type] = {\n      contexts : [],\n      listeners: [],\n      selectors: [],\n    }\n\n    // add delegate listener functions\n    for (const doc of documents) {\n      add(doc, type, delegateListener)\n      add(doc, type, delegateUseCapture, true)\n    }\n  }\n\n  const delegated = delegatedEvents[type]\n  let index\n\n  for (index = delegated.selectors.length - 1; index >= 0; index--) {\n    if (delegated.selectors[index] === selector &&\n        delegated.contexts[index] === context) {\n      break\n    }\n  }\n\n  if (index === -1) {\n    index = delegated.selectors.length\n\n    delegated.selectors.push(selector)\n    delegated.contexts.push(context)\n    delegated.listeners.push([])\n  }\n\n  // keep listener and capture and passive flags\n  delegated.listeners[index].push([listener, !!options.capture, options.passive])\n}\n\nfunction removeDelegate (selector, context, type, listener?, optionalArg?: any) {\n  const options = getOptions(optionalArg)\n  const delegated = delegatedEvents[type]\n  let matchFound = false\n  let index\n\n  if (!delegated) { return }\n\n  // count from last index of delegated to 0\n  for (index = delegated.selectors.length - 1; index >= 0; index--) {\n    // look for matching selector and context Node\n    if (delegated.selectors[index] === selector &&\n        delegated.contexts[index] === context) {\n      const listeners = delegated.listeners[index]\n\n      // each item of the listeners array is an array: [function, capture, passive]\n      for (let i = listeners.length - 1; i >= 0; i--) {\n        const [fn, capture, passive] = listeners[i]\n\n        // check if the listener functions and capture and passive flags match\n        if (fn === listener && capture === !!options.capture && passive === options.passive) {\n          // remove the listener from the array of listeners\n          listeners.splice(i, 1)\n\n          // if all listeners for this interactable have been removed\n          // remove the interactable from the delegated arrays\n          if (!listeners.length) {\n            delegated.selectors.splice(index, 1)\n            delegated.contexts.splice(index, 1)\n            delegated.listeners.splice(index, 1)\n\n            // remove delegate function from context\n            remove(context, type, delegateListener)\n            remove(context, type, delegateUseCapture, true)\n\n            // remove the arrays if they are empty\n            if (!delegated.selectors.length) {\n              delegatedEvents[type] = null\n            }\n          }\n\n          // only remove one listener\n          matchFound = true\n          break\n        }\n      }\n\n      if (matchFound) { break }\n    }\n  }\n}\n\n// bound to the interactable context when a DOM event\n// listener is added to a selector interactable\nfunction delegateListener (event: Event, optionalArg?: any) {\n  const options = getOptions(optionalArg)\n  const fakeEvent = new FakeEvent(event)\n  const delegated = delegatedEvents[event.type]\n  const [eventTarget] = (pointerUtils.getEventTargets(event))\n  let element = eventTarget\n\n  // climb up document tree looking for selector matches\n  while (is.element(element)) {\n    for (let i = 0; i < delegated.selectors.length; i++) {\n      const selector = delegated.selectors[i]\n      const context = delegated.contexts[i]\n\n      if (domUtils.matchesSelector(element, selector) &&\n          domUtils.nodeContains(context, eventTarget) &&\n          domUtils.nodeContains(context, element)) {\n        const listeners = delegated.listeners[i]\n\n        fakeEvent.currentTarget = element\n\n        for (const [fn, capture, passive] of listeners) {\n          if (capture === !!options.capture && passive === options.passive) {\n            fn(fakeEvent)\n          }\n        }\n      }\n    }\n\n    element = domUtils.parentNode(element)\n  }\n}\n\nfunction delegateUseCapture (event: Event) {\n  return delegateListener.call(this, event, true)\n}\n\nfunction getOptions (param) {\n  return is.object(param) ? param : { capture: param }\n}\n\nexport class FakeEvent implements Partial<Event> {\n  currentTarget: EventTarget\n\n  constructor (public originalEvent) {\n    // duplicate the event so that currentTarget can be changed\n    pExtend(this, originalEvent)\n  }\n\n  preventOriginalDefault () {\n    this.originalEvent.preventDefault()\n  }\n\n  stopPropagation () {\n    this.originalEvent.stopPropagation()\n  }\n\n  stopImmediatePropagation () {\n    this.originalEvent.stopImmediatePropagation()\n  }\n}\n\nconst events = {\n  add,\n  remove,\n\n  addDelegate,\n  removeDelegate,\n\n  delegateListener,\n  delegateUseCapture,\n  delegatedEvents,\n  documents,\n\n  supportsOptions: false,\n  supportsPassive: false,\n\n  _elements: elements,\n  _targets: targets,\n\n  init (window: Window) {\n    window.document.createElement('div').addEventListener('test', null, {\n      get capture () { return (events.supportsOptions = true) },\n      get passive () { return (events.supportsPassive = true) },\n    })\n  },\n}\n\nexport default events\n","export default function extend<T, U extends Partial<T>> (dest: U, source: T) {\n  for (const prop in source) {\n    (dest as unknown as T)[prop] = source[prop]\n  }\n  return dest as T & U\n}\n","import { rectToXY, resolveRectLike } from './rect'\n\nexport default function (target, element, action?) {\n  const actionOptions = target.options[action]\n  const actionOrigin = actionOptions && actionOptions.origin\n  const origin = actionOrigin || target.options.origin\n\n  const originRect = resolveRectLike(origin, target, element, [target && element])\n\n  return rectToXY(originRect) || { x: 0, y: 0 }\n}\n","export default (x, y) =>  Math.sqrt(x * x + y * y)\n","import * as arr from './arr'\nimport * as dom from './domUtils'\nimport * as is from './is'\nimport win from './window'\n\nexport function warnOnce<T> (this: T, method: (...args: any) => any, message: string) {\n  let warned = false\n\n  // eslint-disable-next-line no-shadow\n  return function (this: T) {\n    if (!warned) {\n      (win as any).window.console.warn(message)\n      warned = true\n    }\n\n    return method.apply(this, arguments)\n  }\n}\n\n// http://stackoverflow.com/a/5634528/2280888\nexport function _getQBezierValue (t: number, p1: number, p2: number, p3: number) {\n  const iT = 1 - t\n  return iT * iT * p1 + 2 * iT * t * p2 + t * t * p3\n}\n\nexport function getQuadraticCurvePoint (\n  startX: number, startY: number, cpX: number, cpY: number, endX: number, endY: number, position: number) {\n  return {\n    x:  _getQBezierValue(position, startX, cpX, endX),\n    y:  _getQBezierValue(position, startY, cpY, endY),\n  }\n}\n\n// http://gizma.com/easing/\nexport function easeOutQuad (t: number, b: number, c: number, d: number) {\n  t /= d\n  return -c * t * (t - 2) + b\n}\n\nexport function copyAction (dest: Interact.ActionProps, src: Interact.ActionProps) {\n  dest.name  = src.name\n  dest.axis  = src.axis\n  dest.edges = src.edges\n\n  return dest\n}\n\nexport { default as browser } from './browser'\nexport { default as clone } from './clone'\nexport { default as events } from './events'\nexport { default as extend } from './extend'\nexport { default as getOriginXY } from './getOriginXY'\nexport { default as hypot } from './hypot'\nexport { default as normalizeListeners } from './normalizeListeners'\nexport { default as pointer } from './pointerUtils'\nexport { default as raf } from './raf'\nexport { default as rect } from './rect'\nexport { default as Signals } from './Signals'\nexport { win, arr, dom, is }\n","// tslint:disable variable-name\n\nimport isWindow from './isWindow'\nimport win from './window'\n\nexport const window = (thing: any): thing is Window =>\n  thing === win.window || isWindow(thing)\n\nexport const docFrag = (thing: any): thing is DocumentFragment =>\n  object(thing) && thing.nodeType === 11\n\nexport const object = (thing: any): thing is { [index: string]: any } =>\n  !!thing && (typeof thing === 'object')\n\nexport const func = (thing: any): thing is (...args: any) => any =>\n  typeof thing === 'function'\n\nexport const number = (thing: any): thing is number =>\n  typeof thing === 'number'\n\nexport const bool = (thing: any): thing is boolean =>\n  typeof thing === 'boolean'\n\nexport const string = (thing: any): thing is string =>\n  typeof thing === 'string'\n\nexport const element = (thing: any): thing is Element => {\n  if (!thing || (typeof thing !== 'object')) { return false }\n\n  const _window = win.getWindow(thing) || win.window\n\n  return (/object|function/.test(typeof _window.Element)\n    ? thing instanceof _window.Element // DOM2\n    : thing.nodeType === 1 && typeof thing.nodeName === 'string')\n}\n\nexport const plainObject: typeof object = (thing: any): thing is { [index: string]: any } =>\n  object(thing) &&\n  !!thing.constructor &&\n  /function Object\\b/.test(thing.constructor.toString())\n\nexport const array = (thing: any): thing is any[] =>\n  (object(thing) &&\n  (typeof thing.length !== 'undefined') &&\n  func(thing.splice))\n","export default (thing) => !!(thing && thing.Window) && (thing instanceof thing.Window)\n","import extend from './extend'\nimport * as is from './is'\n\nexport interface NormalizedListeners {\n  [type: string]: Interact.Listener[]\n}\n\nexport default function normalize (\n  type: Interact.EventTypes,\n  listeners?: Interact.ListenersArg | Interact.ListenersArg[],\n  result?: NormalizedListeners,\n): NormalizedListeners {\n  result = result || {}\n\n  if (is.string(type) && type.search(' ') !== -1) {\n    type = split(type)\n  }\n\n  if (is.array(type)) {\n    return type.reduce<NormalizedListeners>(\n      (acc, t) => extend(acc, normalize(t, listeners, result)),\n      result\n    )\n  }\n\n  // ({ type: fn }) -> ('', { type: fn })\n  if (is.object(type)) {\n    listeners = type\n    type = ''\n  }\n\n  if (is.func(listeners)) {\n    result[type] = result[type] || []\n    result[type].push(listeners)\n  }\n  else if (is.array(listeners)) {\n    for (const l of listeners) {\n      normalize(type, l, result)\n    }\n  }\n  else if (is.object(listeners)) {\n    for (const prefix in listeners) {\n      const combinedTypes = split(prefix).map((p) => `${type}${p}`)\n\n      normalize(combinedTypes, listeners[prefix], result)\n    }\n  }\n\n  return result as NormalizedListeners\n}\n\nfunction split (type: string) {\n  return type.trim().split(/ +/)\n}\n","export interface PointerExtend {\n  webkit: RegExp\n  [prefix: string]: RegExp\n}\n\nexport function pointerExtend<PointerExtend> (dest, source) {\n  for (const prop in source) {\n    const prefixedPropREs = pointerExtend.prefixedPropREs\n    let deprecated = false\n\n    // skip deprecated prefixed properties\n    for (const vendor in prefixedPropREs) {\n      if (prop.indexOf(vendor) === 0 && prefixedPropREs[vendor].test(prop)) {\n        deprecated = true\n        break\n      }\n    }\n\n    if (!deprecated && typeof source[prop] !== 'function') {\n      dest[prop] = source[prop]\n    }\n  }\n  return dest\n}\n\npointerExtend.prefixedPropREs = {\n  webkit: /(Movement[XY]|Radius[XY]|RotationAngle|Force)$/,\n}\n\nexport default pointerExtend\n","import browser from './browser'\nimport dom from './domObjects'\nimport * as domUtils from './domUtils'\nimport hypot from './hypot'\nimport * as is from './is'\nimport pointerExtend from './pointerExtend'\n\nconst pointerUtils = {\n  copyCoords (dest, src) {\n    dest.page = dest.page || {}\n    dest.page.x = src.page.x\n    dest.page.y = src.page.y\n\n    dest.client = dest.client || {}\n    dest.client.x = src.client.x\n    dest.client.y = src.client.y\n\n    dest.timeStamp = src.timeStamp\n  },\n\n  setCoordDeltas (targetObj, prev, cur) {\n    targetObj.page.x    = cur.page.x    - prev.page.x\n    targetObj.page.y    = cur.page.y    - prev.page.y\n    targetObj.client.x  = cur.client.x  - prev.client.x\n    targetObj.client.y  = cur.client.y  - prev.client.y\n    targetObj.timeStamp = cur.timeStamp - prev.timeStamp\n  },\n\n  setCoordVelocity (targetObj, delta) {\n    const dt = Math.max(delta.timeStamp / 1000, 0.001)\n\n    targetObj.page.x   = delta.page.x / dt\n    targetObj.page.y   = delta.page.y / dt\n    targetObj.client.x = delta.client.x / dt\n    targetObj.client.y = delta.client.y / dt\n    targetObj.timeStamp = dt\n  },\n\n  isNativePointer  (pointer) {\n    return (pointer instanceof dom.Event || pointer instanceof dom.Touch)\n  },\n\n  // Get specified X/Y coords for mouse or event.touches[0]\n  getXY (type, pointer, xy) {\n    xy = xy || {}\n    type = type || 'page'\n\n    xy.x = pointer[type + 'X']\n    xy.y = pointer[type + 'Y']\n\n    return xy\n  },\n\n  getPageXY (pointer: Interact.PointerType | Interact.InteractEvent, page?: Interact.Point) {\n    page = page || { x: 0, y: 0 }\n\n    // Opera Mobile handles the viewport and scrolling oddly\n    if (browser.isOperaMobile && pointerUtils.isNativePointer(pointer)) {\n      pointerUtils.getXY('screen', pointer, page)\n\n      page.x += window.scrollX\n      page.y += window.scrollY\n    }\n    else {\n      pointerUtils.getXY('page', pointer, page)\n    }\n\n    return page\n  },\n\n  getClientXY (pointer, client) {\n    client = client || {}\n\n    if (browser.isOperaMobile && pointerUtils.isNativePointer(pointer)) {\n      // Opera Mobile handles the viewport and scrolling oddly\n      pointerUtils.getXY('screen', pointer, client)\n    }\n    else {\n      pointerUtils.getXY('client', pointer, client)\n    }\n\n    return client\n  },\n\n  getPointerId (pointer) {\n    return is.number(pointer.pointerId) ? pointer.pointerId : pointer.identifier\n  },\n\n  setCoords (targetObj, pointers: any[], timeStamp: number) {\n    const pointer = (pointers.length > 1\n      ? pointerUtils.pointerAverage(pointers)\n      : pointers[0])\n\n    const tmpXY = {} as { x: number, y: number }\n\n    pointerUtils.getPageXY(pointer, tmpXY)\n    targetObj.page.x = tmpXY.x\n    targetObj.page.y = tmpXY.y\n\n    pointerUtils.getClientXY(pointer, tmpXY)\n    targetObj.client.x = tmpXY.x\n    targetObj.client.y = tmpXY.y\n\n    targetObj.timeStamp = timeStamp\n  },\n\n  pointerExtend,\n\n  getTouchPair (event) {\n    const touches = []\n\n    // array of touches is supplied\n    if (is.array(event)) {\n      touches[0] = event[0]\n      touches[1] = event[1]\n    }\n    // an event\n    else {\n      if (event.type === 'touchend') {\n        if (event.touches.length === 1) {\n          touches[0] = event.touches[0]\n          touches[1] = event.changedTouches[0]\n        }\n        else if (event.touches.length === 0) {\n          touches[0] = event.changedTouches[0]\n          touches[1] = event.changedTouches[1]\n        }\n      }\n      else {\n        touches[0] = event.touches[0]\n        touches[1] = event.touches[1]\n      }\n    }\n\n    return touches\n  },\n\n  pointerAverage (pointers: PointerEvent[] | Event[]) {\n    const average = {\n      pageX  : 0,\n      pageY  : 0,\n      clientX: 0,\n      clientY: 0,\n      screenX: 0,\n      screenY: 0,\n    }\n\n    for (const pointer of pointers) {\n      for (const prop in average) {\n        average[prop] += pointer[prop]\n      }\n    }\n    for (const prop in average) {\n      average[prop] /= pointers.length\n    }\n\n    return average\n  },\n\n  touchBBox (event: Event | Array<(Interact.PointerType) | TouchEvent>) {\n    if (!(event as any).length &&\n        !((event as TouchEvent).touches &&\n          (event as TouchEvent).touches.length > 1)) {\n      return null\n    }\n\n    const touches = pointerUtils.getTouchPair(event)\n    const minX = Math.min(touches[0].pageX, touches[1].pageX)\n    const minY = Math.min(touches[0].pageY, touches[1].pageY)\n    const maxX = Math.max(touches[0].pageX, touches[1].pageX)\n    const maxY = Math.max(touches[0].pageY, touches[1].pageY)\n\n    return {\n      x: minX,\n      y: minY,\n      left: minX,\n      top: minY,\n      right: maxX,\n      bottom: maxY,\n      width: maxX - minX,\n      height: maxY - minY,\n    }\n  },\n\n  touchDistance (event, deltaSource) {\n    const sourceX = deltaSource + 'X'\n    const sourceY = deltaSource + 'Y'\n    const touches = pointerUtils.getTouchPair(event)\n\n    const dx = touches[0][sourceX] - touches[1][sourceX]\n    const dy = touches[0][sourceY] - touches[1][sourceY]\n\n    return hypot(dx, dy)\n  },\n\n  touchAngle (event, deltaSource) {\n    const sourceX = deltaSource + 'X'\n    const sourceY = deltaSource + 'Y'\n    const touches = pointerUtils.getTouchPair(event)\n    const dx = touches[1][sourceX] - touches[0][sourceX]\n    const dy = touches[1][sourceY] - touches[0][sourceY]\n    const angle = 180 * Math.atan2(dy, dx) / Math.PI\n\n    return  angle\n  },\n\n  getPointerType (pointer) {\n    return is.string(pointer.pointerType)\n      ? pointer.pointerType\n      : is.number(pointer.pointerType)\n        ? [undefined, undefined, 'touch', 'pen', 'mouse'][pointer.pointerType]\n        // if the PointerEvent API isn't available, then the \"pointer\" must\n        // be either a MouseEvent, TouchEvent, or Touch object\n        : /touch/.test(pointer.type) || pointer instanceof dom.Touch\n          ? 'touch'\n          : 'mouse'\n  },\n\n  // [ event.target, event.currentTarget ]\n  getEventTargets (event) {\n    const path = is.func(event.composedPath) ? event.composedPath() : event.path\n\n    return [\n      domUtils.getActualElement(path ? path[0] : event.target),\n      domUtils.getActualElement(event.currentTarget),\n    ]\n  },\n\n  newCoords () {\n    return {\n      page     : { x: 0, y: 0 },\n      client   : { x: 0, y: 0 },\n      timeStamp: 0,\n    }\n  },\n\n  coordsToEvent (coords: MockCoords) {\n    const event = {\n      coords,\n      get page () { return this.coords.page },\n      get client () { return this.coords.client },\n      get timeStamp () { return this.coords.timeStamp },\n      get pageX () { return this.coords.page.x },\n      get pageY () { return this.coords.page.y },\n      get clientX () { return this.coords.client.x },\n      get clientY () { return this.coords.client.y },\n      get pointerId () { return this.coords.pointerId },\n      get target () { return this.coords.target },\n      get type () { return this.coords.type },\n      get pointerType () { return this.coords.pointerType },\n    }\n\n    return event as typeof event & Interact.PointerType & Interact.PointerEventType\n  },\n}\n\nexport default pointerUtils\n\nexport interface MockCoords {\n  page: Interact.Point\n  client: Interact.Point\n  timeStamp?: number\n  pointerId?: any\n  target?: any\n  type?: string\n  pointerType?: string\n}\n","let lastTime = 0\nlet request\nlet cancel\n\nfunction init (window) {\n  request = window.requestAnimationFrame\n  cancel = window.cancelAnimationFrame\n\n  if (!request) {\n    const vendors = ['ms', 'moz', 'webkit', 'o']\n\n    for (const vendor of vendors) {\n      request = window[`${vendor}RequestAnimationFrame`]\n      cancel = window[`${vendor}CancelAnimationFrame`] || window[`${vendor}CancelRequestAnimationFrame`]\n    }\n  }\n\n  if (!request) {\n    request = (callback) => {\n      const currTime = Date.now()\n      const timeToCall = Math.max(0, 16 - (currTime - lastTime))\n      // eslint-disable-next-line standard/no-callback-literal\n      const token = setTimeout(() => { callback(currTime + timeToCall) },\n        timeToCall)\n\n      lastTime = currTime + timeToCall\n      return token\n    }\n\n    cancel = (token) => clearTimeout(token)\n  }\n}\n\nexport default {\n  request: (callback) => request(callback),\n  cancel: (token) => cancel(token),\n  init,\n}\n","import { closest, getElementRect, parentNode } from './domUtils'\nimport extend from './extend'\nimport * as is from './is'\n\nexport function getStringOptionResult (value, interactable, element) {\n  if (!is.string(value)) {\n    return null\n  }\n\n  if (value === 'parent') {\n    value = parentNode(element)\n  }\n  else if (value === 'self') {\n    value = interactable.getRect(element)\n  }\n  else {\n    value = closest(element, value)\n  }\n\n  return value\n}\n\nexport function resolveRectLike (value, interactable?, element?, functionArgs?) {\n  value = getStringOptionResult(value, interactable, element) || value\n\n  if (is.func(value)) {\n    value = value.apply(null, functionArgs)\n  }\n\n  if (is.element(value)) {\n    value = getElementRect(value)\n  }\n\n  return value\n}\n\nexport function rectToXY (rect) {\n  return  rect && {\n    x: 'x' in rect ? rect.x : rect.left,\n    y: 'y' in rect ? rect.y : rect.top,\n  }\n}\n\nexport function xywhToTlbr (rect) {\n  if (rect && !('left' in rect && 'top' in rect)) {\n    rect = extend({}, rect)\n\n    rect.left   = rect.x || 0\n    rect.top    = rect.y || 0\n    rect.right  = rect.right   || (rect.left + rect.width)\n    rect.bottom = rect.bottom  || (rect.top + rect.height)\n  }\n\n  return rect\n}\n\nexport function tlbrToXywh (rect) {\n  if (rect && !('x' in rect && 'y' in rect)) {\n    rect = extend({}, rect)\n\n    rect.x      = rect.left || 0\n    rect.y      = rect.top  || 0\n    rect.width  = rect.width  || (rect.right  - rect.x)\n    rect.height = rect.height || (rect.bottom - rect.y)\n  }\n\n  return rect\n}\n\nexport default {\n  getStringOptionResult,\n  resolveRectLike,\n  rectToXY,\n  xywhToTlbr,\n  tlbrToXywh,\n}\n","function createGrid (grid: (Interact.Rect | Interact.Point) & { range?: number, limits: Interact.Rect, offset: Interact.Point }) {\n  const coordFields = [\n    ['x', 'y'],\n    ['left', 'top'],\n    ['right', 'bottom'],\n    ['width', 'height'],\n  ].filter(([xField, yField]) => xField in grid || yField in grid)\n\n  return function (x, y) {\n    const {\n      range,\n      limits = {\n        left  : -Infinity,\n        right :  Infinity,\n        top   : -Infinity,\n        bottom:  Infinity,\n      },\n      offset = { x: 0, y: 0 },\n    } = grid\n\n    const result = { range }\n\n    for (const [xField, yField] of coordFields) {\n      const gridx = Math.round((x - offset.x) / grid[xField])\n      const gridy = Math.round((y - offset.y) / grid[yField])\n\n      result[xField] = Math.max(limits.left, Math.min(limits.right, gridx * grid[xField] + offset.x))\n      result[yField] = Math.max(limits.top, Math.min(limits.bottom, gridy * grid[yField] + offset.y))\n    }\n\n    return result\n  }\n}\n\nexport default createGrid\n","import grid from './grid'\n\nexport { grid }\n","import isWindow from './isWindow'\n\nconst win = {\n  realWindow: undefined as Window,\n  window: undefined as Window,\n  getWindow,\n  init,\n}\n\nexport function init (window: Window & { wrap?: (...args) => any }) {\n  // get wrapped window if using Shadow DOM polyfill\n\n  win.realWindow = window\n\n  // create a TextNode\n  const el = window.document.createTextNode('')\n\n  // check if it's wrapped by a polyfill\n  if (el.ownerDocument !== window.document &&\n      typeof window.wrap === 'function' &&\n    window.wrap(el) === el) {\n    // use wrapped window\n    window = window.wrap(window)\n  }\n\n  win.window = window\n}\n\nif (typeof window === 'undefined') {\n  win.window     = undefined\n  win.realWindow = undefined\n}\nelse {\n  init(window)\n}\n\nexport function getWindow (node) {\n  if (isWindow(node)) {\n    return node\n  }\n\n  const rootNode = (node.ownerDocument || node)\n\n  return rootNode.defaultView || win.window\n}\n\nwin.init = init\n\nexport default win\n","!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(t=t||self).rough=e()}(this,function(){\"use strict\";const t=\"undefined\"!=typeof self;class e{constructor(t,e){this.defaultOptions={maxRandomnessOffset:2,roughness:1,bowing:1,stroke:\"#000\",strokeWidth:1,curveTightness:0,curveStepCount:9,fillStyle:\"hachure\",fillWeight:-1,hachureAngle:-41,hachureGap:-1,dashOffset:-1,dashGap:-1,zigzagOffset:-1},this.config=t||{},this.surface=e,this.config.options&&(this.defaultOptions=this._options(this.config.options))}_options(t){return t?Object.assign({},this.defaultOptions,t):this.defaultOptions}_drawable(t,e,s){return{shape:t,sets:e||[],options:s||this.defaultOptions}}getCanvasSize(){const t=t=>t&&\"object\"==typeof t&&t.baseVal&&t.baseVal.value?t.baseVal.value:t||100;return this.surface?[t(this.surface.width),t(this.surface.height)]:[100,100]}computePolygonSize(t){if(t.length){let e=t[0][0],s=t[0][0],i=t[0][1],n=t[0][1];for(let a=1;a<t.length;a++)e=Math.min(e,t[a][0]),s=Math.max(s,t[a][0]),i=Math.min(i,t[a][1]),n=Math.max(n,t[a][1]);return[s-e,n-i]}return[0,0]}polygonPath(t){let e=\"\";if(t.length){e=`M${t[0][0]},${t[0][1]}`;for(let s=1;s<t.length;s++)e=`${e} L${t[s][0]},${t[s][1]}`}return e}computePathSize(e){let s=[0,0];if(t&&self.document)try{const t=\"http://www.w3.org/2000/svg\",i=self.document.createElementNS(t,\"svg\");i.setAttribute(\"width\",\"0\"),i.setAttribute(\"height\",\"0\");const n=self.document.createElementNS(t,\"path\");n.setAttribute(\"d\",e),i.appendChild(n),self.document.body.appendChild(i);const a=n.getBBox();a&&(s[0]=a.width||0,s[1]=a.height||0),self.document.body.removeChild(i)}catch(t){}const i=this.getCanvasSize();return s[0]*s[1]||(s=i),s}toPaths(t){const e=t.sets||[],s=t.options||this.defaultOptions,i=[];for(const t of e){let e=null;switch(t.type){case\"path\":e={d:this.opsToPath(t),stroke:s.stroke,strokeWidth:s.strokeWidth,fill:\"none\"};break;case\"fillPath\":e={d:this.opsToPath(t),stroke:\"none\",strokeWidth:0,fill:s.fill||\"none\"};break;case\"fillSketch\":e=this.fillSketch(t,s);break;case\"path2Dfill\":e={d:t.path||\"\",stroke:\"none\",strokeWidth:0,fill:s.fill||\"none\"};break;case\"path2Dpattern\":{const i=t.size,n={x:0,y:0,width:1,height:1,viewBox:`0 0 ${Math.round(i[0])} ${Math.round(i[1])}`,patternUnits:\"objectBoundingBox\",path:this.fillSketch(t,s)};e={d:t.path,stroke:\"none\",strokeWidth:0,pattern:n};break}}e&&i.push(e)}return i}fillSketch(t,e){let s=e.fillWeight;return s<0&&(s=e.strokeWidth/2),{d:this.opsToPath(t),stroke:e.fill||\"none\",strokeWidth:s,fill:\"none\"}}opsToPath(t){let e=\"\";for(const s of t.ops){const t=s.data;switch(s.op){case\"move\":e+=`M${t[0]} ${t[1]} `;break;case\"bcurveTo\":e+=`C${t[0]} ${t[1]}, ${t[2]} ${t[3]}, ${t[4]} ${t[5]} `;break;case\"qcurveTo\":e+=`Q${t[0]} ${t[1]}, ${t[2]} ${t[3]} `;break;case\"lineTo\":e+=`L${t[0]} ${t[1]} `}}return e.trim()}}function s(t,e){return e=e||[],new Proxy(function(){},{get(i,n,a){if(\"then\"===n){if(0===e.length)return{then:()=>a};const s=t.remote({type:\"GET\",path:e});return s.then.bind(s)}return s(t,e.concat(n))},set:(s,i,n)=>t.remote({type:\"SET\",path:e.concat(i),value:n}),apply:(s,i,n)=>t.remote({type:\"APPLY\",path:e,args:n}),construct:(e,s)=>t.remote({type:\"CONSTRUCT\",args:s})})}class i{constructor(t,e){this.w=t,this.uid=e||`${Date.now()}-${n()}`,this.c=0,this.cbs={},t.addEventListener(\"message\",e=>{if(this.w.oURL)try{URL.revokeObjectURL(this.w.oURL)}catch(t){}finally{delete this.w.oURL}let n=e.data&&e.data.id,a=n&&this.cbs[n];a&&(delete this.cbs[n],e.data.error?a[1](new Error(e.data.error)):a[0](e.data.targetId?s(new i(t,e.data.targetId)):e.data.value))})}remote(t){const e=t.args||[],s=`${this.uid}-${++this.c}`;return new Promise((i,n)=>{this.cbs[s]=[i,n],this.w.postMessage(Object.assign({},t,{id:s,args:e,target:this.uid}))})}}function n(){return Math.floor(Math.random()*Number.MAX_SAFE_INTEGER)}function a(t){const e=t,s={};self.addEventListener(\"message\",async t=>{let i=t.data||{};i.path=i.path||[];let a=i.target&&s[i.target]||e;const h=t=>t.reduce((t,e)=>t?t[e]:t,a),r=i&&i.id;if(r&&i.type){const t={id:r},e=h(i.path),a=h(i.path.slice(0,-1));switch(i.type){case\"GET\":t.value=e;break;case\"SET\":let h=i.path.length&&i.path[i.path.length-1];h&&(a[h]=i.value),t.value=!!h;break;case\"APPLY\":try{t.value=await e.apply(a,i.args||[])}catch(e){t.error=e.toString()}break;case\"CONSTRUCT\":try{t.value=new e(...i.args),t.targetId=(t=>{const e=`${Date.now()}-${n()}`;return s[e]=t,e})(t.value)}catch(e){t.error=e.toString()}}self.postMessage(t)}})}function h(t,e){return t.type===e}const r={A:7,a:7,C:6,c:6,H:1,h:1,L:2,l:2,M:2,m:2,Q:4,q:4,S:4,s:4,T:4,t:2,V:1,v:1,Z:0,z:0};class o{constructor(t){this.COMMAND=0,this.NUMBER=1,this.EOD=2,this.segments=[],this.parseData(t),this.processPoints()}tokenize(t){const e=new Array;for(;\"\"!==t;)if(t.match(/^([ \\t\\r\\n,]+)/))t=t.substr(RegExp.$1.length);else if(t.match(/^([aAcChHlLmMqQsStTvVzZ])/))e[e.length]={type:this.COMMAND,text:RegExp.$1},t=t.substr(RegExp.$1.length);else{if(!t.match(/^(([-+]?[0-9]+(\\.[0-9]*)?|[-+]?\\.[0-9]+)([eE][-+]?[0-9]+)?)/))return console.error(\"Unrecognized segment command: \"+t),[];e[e.length]={type:this.NUMBER,text:`${parseFloat(RegExp.$1)}`},t=t.substr(RegExp.$1.length)}return e[e.length]={type:this.EOD,text:\"\"},e}parseData(t){const e=this.tokenize(t);let s=0,i=e[s],n=\"BOD\";for(this.segments=new Array;!h(i,this.EOD);){let a;const o=new Array;if(\"BOD\"===n){if(\"M\"!==i.text&&\"m\"!==i.text)return void this.parseData(\"M0,0\"+t);s++,a=r[i.text],n=i.text}else h(i,this.NUMBER)?a=r[n]:(s++,a=r[i.text],n=i.text);if(s+a<e.length){for(let t=s;t<s+a;t++){const s=e[t];if(!h(s,this.NUMBER))return void console.error(\"Parameter type is not a number: \"+n+\",\"+s.text);o[o.length]=+s.text}if(\"number\"!=typeof r[n])return void console.error(\"Unsupported segment type: \"+n);{const t={key:n,data:o};this.segments.push(t),i=e[s+=a],\"M\"===n&&(n=\"L\"),\"m\"===n&&(n=\"l\")}}else console.error(\"Path data ended before all parameters were found\")}}get closed(){if(void 0===this._closed){this._closed=!1;for(const t of this.segments)\"z\"===t.key.toLowerCase()&&(this._closed=!0)}return this._closed}processPoints(){let t=null,e=[0,0];for(let s=0;s<this.segments.length;s++){const i=this.segments[s];switch(i.key){case\"M\":case\"L\":case\"T\":i.point=[i.data[0],i.data[1]];break;case\"m\":case\"l\":case\"t\":i.point=[i.data[0]+e[0],i.data[1]+e[1]];break;case\"H\":i.point=[i.data[0],e[1]];break;case\"h\":i.point=[i.data[0]+e[0],e[1]];break;case\"V\":i.point=[e[0],i.data[0]];break;case\"v\":i.point=[e[0],i.data[0]+e[1]];break;case\"z\":case\"Z\":t&&(i.point=[t[0],t[1]]);break;case\"C\":i.point=[i.data[4],i.data[5]];break;case\"c\":i.point=[i.data[4]+e[0],i.data[5]+e[1]];break;case\"S\":i.point=[i.data[2],i.data[3]];break;case\"s\":i.point=[i.data[2]+e[0],i.data[3]+e[1]];break;case\"Q\":i.point=[i.data[2],i.data[3]];break;case\"q\":i.point=[i.data[2]+e[0],i.data[3]+e[1]];break;case\"A\":i.point=[i.data[5],i.data[6]];break;case\"a\":i.point=[i.data[5]+e[0],i.data[6]+e[1]]}\"m\"!==i.key&&\"M\"!==i.key||(t=null),i.point&&(e=i.point,t||(t=i.point)),\"z\"!==i.key&&\"Z\"!==i.key||(t=null)}}}class l{constructor(t){this._position=[0,0],this._first=null,this.bezierReflectionPoint=null,this.quadReflectionPoint=null,this.parsed=new o(t)}get segments(){return this.parsed.segments}get closed(){return this.parsed.closed}get linearPoints(){if(!this._linearPoints){const t=[];let e=[];for(const s of this.parsed.segments){const i=s.key.toLowerCase();(\"m\"!==i&&\"z\"!==i||(e.length&&(t.push(e),e=[]),\"z\"!==i))&&(s.point&&e.push(s.point))}e.length&&(t.push(e),e=[]),this._linearPoints=t}return this._linearPoints}get first(){return this._first}set first(t){this._first=t}setPosition(t,e){this._position=[t,e],this._first||(this._first=[t,e])}get position(){return this._position}get x(){return this._position[0]}get y(){return this._position[1]}}class c{constructor(t,e,s,i,n,a){if(this._segIndex=0,this._numSegs=0,this._rx=0,this._ry=0,this._sinPhi=0,this._cosPhi=0,this._C=[0,0],this._theta=0,this._delta=0,this._T=0,this._from=t,t[0]===e[0]&&t[1]===e[1])return;const h=Math.PI/180;this._rx=Math.abs(s[0]),this._ry=Math.abs(s[1]),this._sinPhi=Math.sin(i*h),this._cosPhi=Math.cos(i*h);const r=this._cosPhi*(t[0]-e[0])/2+this._sinPhi*(t[1]-e[1])/2,o=-this._sinPhi*(t[0]-e[0])/2+this._cosPhi*(t[1]-e[1])/2;let l=0;const c=this._rx*this._rx*this._ry*this._ry-this._rx*this._rx*o*o-this._ry*this._ry*r*r;if(c<0){const t=Math.sqrt(1-c/(this._rx*this._rx*this._ry*this._ry));this._rx=this._rx*t,this._ry=this._ry*t,l=0}else l=(n===a?-1:1)*Math.sqrt(c/(this._rx*this._rx*o*o+this._ry*this._ry*r*r));const p=l*this._rx*o/this._ry,u=-l*this._ry*r/this._rx;this._C=[0,0],this._C[0]=this._cosPhi*p-this._sinPhi*u+(t[0]+e[0])/2,this._C[1]=this._sinPhi*p+this._cosPhi*u+(t[1]+e[1])/2,this._theta=this.calculateVectorAngle(1,0,(r-p)/this._rx,(o-u)/this._ry);let f=this.calculateVectorAngle((r-p)/this._rx,(o-u)/this._ry,(-r-p)/this._rx,(-o-u)/this._ry);!a&&f>0?f-=2*Math.PI:a&&f<0&&(f+=2*Math.PI),this._numSegs=Math.ceil(Math.abs(f/(Math.PI/2))),this._delta=f/this._numSegs,this._T=8/3*Math.sin(this._delta/4)*Math.sin(this._delta/4)/Math.sin(this._delta/2)}getNextSegment(){if(this._segIndex===this._numSegs)return null;const t=Math.cos(this._theta),e=Math.sin(this._theta),s=this._theta+this._delta,i=Math.cos(s),n=Math.sin(s),a=[this._cosPhi*this._rx*i-this._sinPhi*this._ry*n+this._C[0],this._sinPhi*this._rx*i+this._cosPhi*this._ry*n+this._C[1]],h=[this._from[0]+this._T*(-this._cosPhi*this._rx*e-this._sinPhi*this._ry*t),this._from[1]+this._T*(-this._sinPhi*this._rx*e+this._cosPhi*this._ry*t)],r=[a[0]+this._T*(this._cosPhi*this._rx*n+this._sinPhi*this._ry*i),a[1]+this._T*(this._sinPhi*this._rx*n-this._cosPhi*this._ry*i)];return this._theta=s,this._from=[a[0],a[1]],this._segIndex++,{cp1:h,cp2:r,to:a}}calculateVectorAngle(t,e,s,i){const n=Math.atan2(e,t),a=Math.atan2(i,s);return a>=n?a-n:2*Math.PI-(n-a)}}class p{constructor(t,e){this.sets=t,this.closed=e}fit(t){const e=[];for(const s of this.sets){const i=s.length;let n=Math.floor(t*i);if(n<5){if(i<=5)continue;n=5}e.push(this.reduce(s,n))}let s=\"\";for(const t of e){for(let e=0;e<t.length;e++){const i=t[e];s+=0===e?\"M\"+i[0]+\",\"+i[1]:\"L\"+i[0]+\",\"+i[1]}this.closed&&(s+=\"z \")}return s}distance(t,e){return Math.sqrt(Math.pow(t[0]-e[0],2)+Math.pow(t[1]-e[1],2))}reduce(t,e){if(t.length<=e)return t;const s=t.slice(0);for(;s.length>e;){let t=-1,e=-1;for(let i=1;i<s.length-1;i++){const n=this.distance(s[i-1],s[i]),a=this.distance(s[i],s[i+1]),h=this.distance(s[i-1],s[i+1]),r=(n+a+h)/2,o=Math.sqrt(r*(r-n)*(r-a)*(r-h));(t<0||o<t)&&(t=o,e=i)}if(!(e>0))break;s.splice(e,1)}return s}}class u{constructor(t,e){this.xi=Number.MAX_VALUE,this.yi=Number.MAX_VALUE,this.px1=t[0],this.py1=t[1],this.px2=e[0],this.py2=e[1],this.a=this.py2-this.py1,this.b=this.px1-this.px2,this.c=this.px2*this.py1-this.px1*this.py2,this._undefined=0===this.a&&0===this.b&&0===this.c}isUndefined(){return this._undefined}intersects(t){if(this.isUndefined()||t.isUndefined())return!1;let e=Number.MAX_VALUE,s=Number.MAX_VALUE,i=0,n=0;const a=this.a,h=this.b,r=this.c;return Math.abs(h)>1e-5&&(e=-a/h,i=-r/h),Math.abs(t.b)>1e-5&&(s=-t.a/t.b,n=-t.c/t.b),e===Number.MAX_VALUE?s===Number.MAX_VALUE?-r/a==-t.c/t.a&&(this.py1>=Math.min(t.py1,t.py2)&&this.py1<=Math.max(t.py1,t.py2)?(this.xi=this.px1,this.yi=this.py1,!0):this.py2>=Math.min(t.py1,t.py2)&&this.py2<=Math.max(t.py1,t.py2)&&(this.xi=this.px2,this.yi=this.py2,!0)):(this.xi=this.px1,this.yi=s*this.xi+n,!((this.py1-this.yi)*(this.yi-this.py2)<-1e-5||(t.py1-this.yi)*(this.yi-t.py2)<-1e-5)&&(!(Math.abs(t.a)<1e-5)||!((t.px1-this.xi)*(this.xi-t.px2)<-1e-5))):s===Number.MAX_VALUE?(this.xi=t.px1,this.yi=e*this.xi+i,!((t.py1-this.yi)*(this.yi-t.py2)<-1e-5||(this.py1-this.yi)*(this.yi-this.py2)<-1e-5)&&(!(Math.abs(a)<1e-5)||!((this.px1-this.xi)*(this.xi-this.px2)<-1e-5))):e===s?i===n&&(this.px1>=Math.min(t.px1,t.px2)&&this.px1<=Math.max(t.py1,t.py2)?(this.xi=this.px1,this.yi=this.py1,!0):this.px2>=Math.min(t.px1,t.px2)&&this.px2<=Math.max(t.px1,t.px2)&&(this.xi=this.px2,this.yi=this.py2,!0)):(this.xi=(n-i)/(e-s),this.yi=e*this.xi+i,!((this.px1-this.xi)*(this.xi-this.px2)<-1e-5||(t.px1-this.xi)*(this.xi-t.px2)<-1e-5))}}function f(t,e){const s=t[1][1]-t[0][1],i=t[0][0]-t[1][0],n=s*t[0][0]+i*t[0][1],a=e[1][1]-e[0][1],h=e[0][0]-e[1][0],r=a*e[0][0]+h*e[0][1],o=s*h-a*i;return o?[Math.round((h*n-i*r)/o),Math.round((s*r-a*n)/o)]:null}class d{constructor(t,e,s,i,n,a,h,r){this.deltaX=0,this.hGap=0,this.top=t,this.bottom=e,this.left=s,this.right=i,this.gap=n,this.sinAngle=a,this.tanAngle=r,Math.abs(a)<1e-4?this.pos=s+n:Math.abs(a)>.9999?this.pos=t+n:(this.deltaX=(e-t)*Math.abs(r),this.pos=s-Math.abs(this.deltaX),this.hGap=Math.abs(n/h),this.sLeft=new u([s,e],[s,t]),this.sRight=new u([i,e],[i,t]))}nextLine(){if(Math.abs(this.sinAngle)<1e-4){if(this.pos<this.right){const t=[this.pos,this.top,this.pos,this.bottom];return this.pos+=this.gap,t}}else if(Math.abs(this.sinAngle)>.9999){if(this.pos<this.bottom){const t=[this.left,this.pos,this.right,this.pos];return this.pos+=this.gap,t}}else{let t=this.pos-this.deltaX/2,e=this.pos+this.deltaX/2,s=this.bottom,i=this.top;if(this.pos<this.right+this.deltaX){for(;t<this.left&&e<this.left||t>this.right&&e>this.right;)if(this.pos+=this.hGap,t=this.pos-this.deltaX/2,e=this.pos+this.deltaX/2,this.pos>this.right+this.deltaX)return null;const n=new u([t,s],[e,i]);this.sLeft&&n.intersects(this.sLeft)&&(t=n.xi,s=n.yi),this.sRight&&n.intersects(this.sRight)&&(e=n.xi,i=n.yi),this.tanAngle>0&&(t=this.right-(t-this.left),e=this.right-(e-this.left));const a=[t,s,e,i];return this.pos+=this.hGap,a}}return null}}function g(t){const e=t[0],s=t[1];return Math.sqrt(Math.pow(e[0]-s[0],2)+Math.pow(e[1]-s[1],2))}function y(t,e){const s=[],i=new u([t[0],t[1]],[t[2],t[3]]);for(let t=0;t<e.length;t++){const n=new u(e[t],e[(t+1)%e.length]);i.intersects(n)&&s.push([i.xi,i.yi])}return s}function M(t,e,s,i,n,a,h){return[-s*a-i*n+s+a*t+n*e,h*(s*n-i*a)+i+-h*n*t+h*a*e]}function w(t,e){const s=[];if(t&&t.length){let i=t[0][0],n=t[0][0],a=t[0][1],h=t[0][1];for(let e=1;e<t.length;e++)i=Math.min(i,t[e][0]),n=Math.max(n,t[e][0]),a=Math.min(a,t[e][1]),h=Math.max(h,t[e][1]);const r=e.hachureAngle;let o=e.hachureGap;o<0&&(o=4*e.strokeWidth),o=Math.max(o,.1);const l=r%180*(Math.PI/180),c=Math.cos(l),p=Math.sin(l),u=Math.tan(l),f=new d(a-1,h+1,i-1,n+1,o,p,c,u);let g;for(;null!=(g=f.nextLine());){const e=y(g,t);for(let t=0;t<e.length;t++)if(t<e.length-1){const i=e[t],n=e[t+1];s.push([i,n])}}}return s}function b(t,e,s,i,n,a){const h=[];let r=Math.abs(i/2),o=Math.abs(n/2);r+=t.randOffset(.05*r,a),o+=t.randOffset(.05*o,a);const l=a.hachureAngle;let c=a.hachureGap;c<=0&&(c=4*a.strokeWidth);let p=a.fillWeight;p<0&&(p=a.strokeWidth/2);const u=l%180*(Math.PI/180),f=Math.tan(u),d=o/r,g=Math.sqrt(d*f*d*f+1),y=d*f/g,w=1/g,b=c/(r*o/Math.sqrt(o*w*(o*w)+r*y*(r*y))/r);let x=Math.sqrt(r*r-(e-r+b)*(e-r+b));for(let t=e-r+b;t<e+r;t+=b){const i=M(t,s-(x=Math.sqrt(r*r-(e-t)*(e-t))),e,s,y,w,d),n=M(t,s+x,e,s,y,w,d);h.push([i,n])}return h}class x{constructor(t){this.helper=t}fillPolygon(t,e){return this._fillPolygon(t,e)}fillEllipse(t,e,s,i,n){return this._fillEllipse(t,e,s,i,n)}fillArc(t,e,s,i,n,a,h){return null}_fillPolygon(t,e,s=!1){const i=w(t,e);return{type:\"fillSketch\",ops:this.renderLines(i,e,s)}}_fillEllipse(t,e,s,i,n,a=!1){const h=b(this.helper,t,e,s,i,n);return{type:\"fillSketch\",ops:this.renderLines(h,n,a)}}renderLines(t,e,s){let i=[],n=null;for(const a of t)i=i.concat(this.helper.doubleLineOps(a[0][0],a[0][1],a[1][0],a[1][1],e)),s&&n&&(i=i.concat(this.helper.doubleLineOps(n[0],n[1],a[0][0],a[0][1],e))),n=a[1];return i}}class m extends x{fillPolygon(t,e){return this._fillPolygon(t,e,!0)}fillEllipse(t,e,s,i,n){return this._fillEllipse(t,e,s,i,n,!0)}}class _ extends x{fillPolygon(t,e){const s=this._fillPolygon(t,e),i=Object.assign({},e,{hachureAngle:e.hachureAngle+90}),n=this._fillPolygon(t,i);return s.ops=s.ops.concat(n.ops),s}fillEllipse(t,e,s,i,n){const a=this._fillEllipse(t,e,s,i,n),h=Object.assign({},n,{hachureAngle:n.hachureAngle+90}),r=this._fillEllipse(t,e,s,i,h);return a.ops=a.ops.concat(r.ops),a}}class k{constructor(t){this.helper=t}fillPolygon(t,e){const s=w(t,e=Object.assign({},e,{curveStepCount:4,hachureAngle:0}));return this.dotsOnLines(s,e)}fillEllipse(t,e,s,i,n){n=Object.assign({},n,{curveStepCount:4,hachureAngle:0});const a=b(this.helper,t,e,s,i,n);return this.dotsOnLines(a,n)}fillArc(t,e,s,i,n,a,h){return null}dotsOnLines(t,e){let s=[],i=e.hachureGap;i<0&&(i=4*e.strokeWidth),i=Math.max(i,.1);let n=e.fillWeight;n<0&&(n=e.strokeWidth/2);for(const a of t){const t=g(a)/i,h=Math.ceil(t)-1,r=Math.atan((a[1][1]-a[0][1])/(a[1][0]-a[0][0]));for(let t=0;t<h;t++){const h=i*(t+1),o=h*Math.sin(r),l=h*Math.cos(r),c=[a[0][0]-l,a[0][1]+o],p=this.helper.randOffsetWithRange(c[0]-i/4,c[0]+i/4,e),u=this.helper.randOffsetWithRange(c[1]-i/4,c[1]+i/4,e),f=this.helper.ellipse(p,u,n,n,e);s=s.concat(f.ops)}}return{type:\"fillSketch\",ops:s}}}class P{constructor(t){this.helper=t}fillPolygon(t,e){const s=[Number.MAX_SAFE_INTEGER,Number.MIN_SAFE_INTEGER],i=[Number.MAX_SAFE_INTEGER,Number.MIN_SAFE_INTEGER];t.forEach(t=>{s[0]=Math.min(s[0],t[0]),s[1]=Math.max(s[1],t[0]),i[0]=Math.min(i[0],t[1]),i[1]=Math.max(i[1],t[1])});const n=function(t){let e=0,s=0,i=0;for(let s=0;s<t.length;s++){const i=t[s],n=s===t.length-1?t[0]:t[s+1];e+=i[0]*n[1]-n[0]*i[1]}e/=2;for(let e=0;e<t.length;e++){const n=t[e],a=e===t.length-1?t[0]:t[e+1];s+=(n[0]+a[0])*(n[0]*a[1]-a[0]*n[1]),i+=(n[1]+a[1])*(n[0]*a[1]-a[0]*n[1])}return[s/(6*e),i/(6*e)]}(t),a=Math.max(Math.sqrt(Math.pow(n[0]-s[0],2)+Math.pow(n[1]-i[0],2)),Math.sqrt(Math.pow(n[0]-s[1],2)+Math.pow(n[1]-i[1],2))),h=e.hachureGap>0?e.hachureGap:4*e.strokeWidth,r=[];if(t.length>2)for(let e=0;e<t.length;e++)e===t.length-1?r.push([t[e],t[0]]):r.push([t[e],t[e+1]]);let o=[];const l=Math.max(1,Math.PI*a/h);for(let t=0;t<l;t++){const e=t*Math.PI/l,h=[n,[n[0]+a*Math.cos(e),n[1]+a*Math.sin(e)]];r.forEach(t=>{const e=f(t,h);e&&e[0]>=s[0]&&e[0]<=s[1]&&e[1]>=i[0]&&e[1]<=i[1]&&o.push(e)})}o=this.removeDuplocatePoints(o);const c=this.createLinesFromCenter(n,o);return{type:\"fillSketch\",ops:this.drawLines(c,e)}}fillEllipse(t,e,s,i,n){return this.fillArcSegment(t,e,s,i,0,2*Math.PI,n)}fillArc(t,e,s,i,n,a,h){return this.fillArcSegment(t,e,s,i,n,a,h)}fillArcSegment(t,e,s,i,n,a,h){const r=[t,e],o=s/2,l=i/2,c=Math.max(s/2,i/2);let p=h.hachureGap;p<0&&(p=4*h.strokeWidth);const u=Math.max(1,Math.abs(a-n)*c/p);let f=[];for(let t=0;t<u;t++){const e=t*((a-n)/u)+n,s=c*Math.cos(e),i=c*Math.sin(e),h=Math.sqrt(o*o*i*i+l*l*s*s),p=o*l*s/h,d=o*l*i/h;f.push([r[0]+p,r[1]+d])}f=this.removeDuplocatePoints(f);const d=this.createLinesFromCenter(r,f);return{type:\"fillSketch\",ops:this.drawLines(d,h)}}drawLines(t,e){let s=[];return t.forEach(t=>{const i=t[0],n=t[1];s=s.concat(this.helper.doubleLineOps(i[0],i[1],n[0],n[1],e))}),s}createLinesFromCenter(t,e){return e.map(e=>[t,e])}removeDuplocatePoints(t){const e=new Set;return t.filter(t=>{const s=t.join(\",\");return!e.has(s)&&(e.add(s),!0)})}}class v{constructor(t){this.helper=t}fillPolygon(t,e){const s=w(t,e);return{type:\"fillSketch\",ops:this.dashedLine(s,e)}}fillEllipse(t,e,s,i,n){const a=b(this.helper,t,e,s,i,n);return{type:\"fillSketch\",ops:this.dashedLine(a,n)}}fillArc(t,e,s,i,n,a,h){return null}dashedLine(t,e){const s=e.dashOffset<0?e.hachureGap<0?4*e.strokeWidth:e.hachureGap:e.dashOffset,i=e.dashGap<0?e.hachureGap<0?4*e.strokeWidth:e.hachureGap:e.dashGap;let n=[];return t.forEach(t=>{const a=g(t),h=Math.floor(a/(s+i)),r=(a+i-h*(s+i))/2;let o=t[0],l=t[1];o[0]>l[0]&&(o=t[1],l=t[0]);const c=Math.atan((l[1]-o[1])/(l[0]-o[0]));for(let t=0;t<h;t++){const a=t*(s+i),h=a+s,l=[o[0]+a*Math.cos(c)+r*Math.cos(c),o[1]+a*Math.sin(c)+r*Math.sin(c)],p=[o[0]+h*Math.cos(c)+r*Math.cos(c),o[1]+h*Math.sin(c)+r*Math.sin(c)];n=n.concat(this.helper.doubleLineOps(l[0],l[1],p[0],p[1],e))}}),n}}class S{constructor(t){this.helper=t}fillPolygon(t,e){const s=e.hachureGap<0?4*e.strokeWidth:e.hachureGap,i=e.zigzagOffset<0?s:e.zigzagOffset,n=w(t,e=Object.assign({},e,{hachureGap:s+i}));return{type:\"fillSketch\",ops:this.zigzagLines(n,i,e)}}fillEllipse(t,e,s,i,n){const a=n.hachureGap<0?4*n.strokeWidth:n.hachureGap,h=n.zigzagOffset<0?a:n.zigzagOffset;n=Object.assign({},n,{hachureGap:a+h});const r=b(this.helper,t,e,s,i,n);return{type:\"fillSketch\",ops:this.zigzagLines(r,h,n)}}fillArc(t,e,s,i,n,a,h){return null}zigzagLines(t,e,s){let i=[];return t.forEach(t=>{const n=g(t),a=Math.round(n/(2*e));let h=t[0],r=t[1];h[0]>r[0]&&(h=t[1],r=t[0]);const o=Math.atan((r[1]-h[1])/(r[0]-h[0]));for(let t=0;t<a;t++){const n=2*t*e,a=2*(t+1)*e,r=Math.sqrt(2*Math.pow(e,2)),l=[h[0]+n*Math.cos(o),h[1]+n*Math.sin(o)],c=[h[0]+a*Math.cos(o),h[1]+a*Math.sin(o)],p=[l[0]+r*Math.cos(o+Math.PI/4),l[1]+r*Math.sin(o+Math.PI/4)];i=(i=i.concat(this.helper.doubleLineOps(l[0],l[1],p[0],p[1],s))).concat(this.helper.doubleLineOps(p[0],p[1],c[0],c[1],s))}}),i}}const A={};function E(t,e){let s=t.fillStyle||\"hachure\";if(!A[s])switch(s){case\"zigzag\":A[s]||(A[s]=new m(e));break;case\"cross-hatch\":A[s]||(A[s]=new _(e));break;case\"dots\":A[s]||(A[s]=new k(e));break;case\"starburst\":A[s]||(A[s]=new P(e));break;case\"dashed\":A[s]||(A[s]=new v(e));break;case\"zigzag-line\":A[s]||(A[s]=new S(e));break;case\"hachure\":default:A[s=\"hachure\"]||(A[s]=new x(e))}return A[s]}const O={randOffset:N,randOffsetWithRange:W,ellipse:R,doubleLineOps:I};function T(t,e,s,i,n){return{type:\"path\",ops:G(t,e,s,i,n)}}function L(t,e,s){const i=(t||[]).length;if(i>2){let n=[];for(let e=0;e<i-1;e++)n=n.concat(G(t[e][0],t[e][1],t[e+1][0],t[e+1][1],s));return e&&(n=n.concat(G(t[i-1][0],t[i-1][1],t[0][0],t[0][1],s))),{type:\"path\",ops:n}}return 2===i?T(t[0][0],t[0][1],t[1][0],t[1][1],s):{type:\"path\",ops:[]}}function C(t,e){return L(t,!0,e)}function R(t,e,s,i,n){const a=2*Math.PI/n.curveStepCount;let h=Math.abs(s/2),r=Math.abs(i/2);const o=F(a,t,e,h+=D(.05*h,n),r+=D(.05*r,n),1,a*$(.1,$(.4,1,n),n),n),l=F(a,t,e,h,r,1.5,0,n);return{type:\"path\",ops:o.concat(l)}}function z(t,e){return E(e,O).fillPolygon(t,e)}function N(t,e){return D(t,e)}function W(t,e,s){return $(t,e,s)}function I(t,e,s,i,n){return G(t,e,s,i,n)}function $(t,e,s){return s.roughness*(Math.random()*(e-t)+t)}function D(t,e){return $(-t,t,e)}function G(t,e,s,i,n){const a=q(t,e,s,i,n,!0,!1),h=q(t,e,s,i,n,!0,!0);return a.concat(h)}function q(t,e,s,i,n,a,h){const r=Math.pow(t-s,2)+Math.pow(e-i,2);let o=n.maxRandomnessOffset||0;o*o*100>r&&(o=Math.sqrt(r)/10);const l=o/2,c=.2+.2*Math.random();let p=n.bowing*n.maxRandomnessOffset*(i-e)/200,u=n.bowing*n.maxRandomnessOffset*(t-s)/200;p=D(p,n),u=D(u,n);const f=[],d=()=>D(l,n),g=()=>D(o,n);return a&&(h?f.push({op:\"move\",data:[t+d(),e+d()]}):f.push({op:\"move\",data:[t+D(o,n),e+D(o,n)]})),h?f.push({op:\"bcurveTo\",data:[p+t+(s-t)*c+d(),u+e+(i-e)*c+d(),p+t+2*(s-t)*c+d(),u+e+2*(i-e)*c+d(),s+d(),i+d()]}):f.push({op:\"bcurveTo\",data:[p+t+(s-t)*c+g(),u+e+(i-e)*c+g(),p+t+2*(s-t)*c+g(),u+e+2*(i-e)*c+g(),s+g(),i+g()]}),f}function U(t,e,s){const i=[];i.push([t[0][0]+D(e,s),t[0][1]+D(e,s)]),i.push([t[0][0]+D(e,s),t[0][1]+D(e,s)]);for(let n=1;n<t.length;n++)i.push([t[n][0]+D(e,s),t[n][1]+D(e,s)]),n===t.length-1&&i.push([t[n][0]+D(e,s),t[n][1]+D(e,s)]);return B(i,null,s)}function B(t,e,s){const i=t.length;let n=[];if(i>3){const a=[],h=1-s.curveTightness;n.push({op:\"move\",data:[t[1][0],t[1][1]]});for(let e=1;e+2<i;e++){const s=t[e];a[0]=[s[0],s[1]],a[1]=[s[0]+(h*t[e+1][0]-h*t[e-1][0])/6,s[1]+(h*t[e+1][1]-h*t[e-1][1])/6],a[2]=[t[e+1][0]+(h*t[e][0]-h*t[e+2][0])/6,t[e+1][1]+(h*t[e][1]-h*t[e+2][1])/6],a[3]=[t[e+1][0],t[e+1][1]],n.push({op:\"bcurveTo\",data:[a[1][0],a[1][1],a[2][0],a[2][1],a[3][0],a[3][1]]})}if(e&&2===e.length){const t=s.maxRandomnessOffset;n.push({op:\"lineTo\",data:[e[0]+D(t,s),e[1]+D(t,s)]})}}else 3===i?(n.push({op:\"move\",data:[t[1][0],t[1][1]]}),n.push({op:\"bcurveTo\",data:[t[1][0],t[1][1],t[2][0],t[2][1],t[2][0],t[2][1]]})):2===i&&(n=n.concat(G(t[0][0],t[0][1],t[1][0],t[1][1],s)));return n}function F(t,e,s,i,n,a,h,r){const o=D(.5,r)-Math.PI/2,l=[];l.push([D(a,r)+e+.9*i*Math.cos(o-t),D(a,r)+s+.9*n*Math.sin(o-t)]);for(let h=o;h<2*Math.PI+o-.01;h+=t)l.push([D(a,r)+e+i*Math.cos(h),D(a,r)+s+n*Math.sin(h)]);return l.push([D(a,r)+e+i*Math.cos(o+2*Math.PI+.5*h),D(a,r)+s+n*Math.sin(o+2*Math.PI+.5*h)]),l.push([D(a,r)+e+.98*i*Math.cos(o+h),D(a,r)+s+.98*n*Math.sin(o+h)]),l.push([D(a,r)+e+.9*i*Math.cos(o+.5*h),D(a,r)+s+.9*n*Math.sin(o+.5*h)]),B(l,null,r)}function X(t,e,s,i,n,a,h,r,o){const l=a+D(.1,o),c=[];c.push([D(r,o)+e+.9*i*Math.cos(l-t),D(r,o)+s+.9*n*Math.sin(l-t)]);for(let a=l;a<=h;a+=t)c.push([D(r,o)+e+i*Math.cos(a),D(r,o)+s+n*Math.sin(a)]);return c.push([e+i*Math.cos(h),s+n*Math.sin(h)]),c.push([e+i*Math.cos(h),s+n*Math.sin(h)]),B(c,null,o)}function V(t,e,s,i,n,a,h,r){const o=[],l=[r.maxRandomnessOffset||1,(r.maxRandomnessOffset||1)+.5];let c=[0,0];for(let p=0;p<2;p++)0===p?o.push({op:\"move\",data:[h.x,h.y]}):o.push({op:\"move\",data:[h.x+D(l[0],r),h.y+D(l[0],r)]}),c=[n+D(l[p],r),a+D(l[p],r)],o.push({op:\"bcurveTo\",data:[t+D(l[p],r),e+D(l[p],r),s+D(l[p],r),i+D(l[p],r),c[0],c[1]]});return h.setPosition(c[0],c[1]),o}function j(t,e,s,i){let n=[];switch(e.key){case\"M\":case\"m\":{const s=\"m\"===e.key;if(e.data.length>=2){let a=+e.data[0],h=+e.data[1];s&&(a+=t.x,h+=t.y);const r=1*(i.maxRandomnessOffset||0);a+=D(r,i),h+=D(r,i),t.setPosition(a,h),n.push({op:\"move\",data:[a,h]})}break}case\"L\":case\"l\":{const s=\"l\"===e.key;if(e.data.length>=2){let a=+e.data[0],h=+e.data[1];s&&(a+=t.x,h+=t.y),n=n.concat(G(t.x,t.y,a,h,i)),t.setPosition(a,h)}break}case\"H\":case\"h\":{const s=\"h\"===e.key;if(e.data.length){let a=+e.data[0];s&&(a+=t.x),n=n.concat(G(t.x,t.y,a,t.y,i)),t.setPosition(a,t.y)}break}case\"V\":case\"v\":{const s=\"v\"===e.key;if(e.data.length){let a=+e.data[0];s&&(a+=t.y),n=n.concat(G(t.x,t.y,t.x,a,i)),t.setPosition(t.x,a)}break}case\"Z\":case\"z\":t.first&&(n=n.concat(G(t.x,t.y,t.first[0],t.first[1],i)),t.setPosition(t.first[0],t.first[1]),t.first=null);break;case\"C\":case\"c\":{const s=\"c\"===e.key;if(e.data.length>=6){let a=+e.data[0],h=+e.data[1],r=+e.data[2],o=+e.data[3],l=+e.data[4],c=+e.data[5];s&&(a+=t.x,r+=t.x,l+=t.x,h+=t.y,o+=t.y,c+=t.y);const p=V(a,h,r,o,l,c,t,i);n=n.concat(p),t.bezierReflectionPoint=[l+(l-r),c+(c-o)]}break}case\"S\":case\"s\":{const a=\"s\"===e.key;if(e.data.length>=4){let h=+e.data[0],r=+e.data[1],o=+e.data[2],l=+e.data[3];a&&(h+=t.x,o+=t.x,r+=t.y,l+=t.y);let c=h,p=r;const u=s?s.key:\"\";let f=null;\"c\"!==u&&\"C\"!==u&&\"s\"!==u&&\"S\"!==u||(f=t.bezierReflectionPoint),f&&(c=f[0],p=f[1]);const d=V(c,p,h,r,o,l,t,i);n=n.concat(d),t.bezierReflectionPoint=[o+(o-h),l+(l-r)]}break}case\"Q\":case\"q\":{const s=\"q\"===e.key;if(e.data.length>=4){let a=+e.data[0],h=+e.data[1],r=+e.data[2],o=+e.data[3];s&&(a+=t.x,r+=t.x,h+=t.y,o+=t.y);const l=1*(1+.2*i.roughness),c=1.5*(1+.22*i.roughness);n.push({op:\"move\",data:[t.x+D(l,i),t.y+D(l,i)]});let p=[r+D(l,i),o+D(l,i)];n.push({op:\"qcurveTo\",data:[a+D(l,i),h+D(l,i),p[0],p[1]]}),n.push({op:\"move\",data:[t.x+D(c,i),t.y+D(c,i)]}),p=[r+D(c,i),o+D(c,i)],n.push({op:\"qcurveTo\",data:[a+D(c,i),h+D(c,i),p[0],p[1]]}),t.setPosition(p[0],p[1]),t.quadReflectionPoint=[r+(r-a),o+(o-h)]}break}case\"T\":case\"t\":{const a=\"t\"===e.key;if(e.data.length>=2){let h=+e.data[0],r=+e.data[1];a&&(h+=t.x,r+=t.y);let o=h,l=r;const c=s?s.key:\"\";let p=null;\"q\"!==c&&\"Q\"!==c&&\"t\"!==c&&\"T\"!==c||(p=t.quadReflectionPoint),p&&(o=p[0],l=p[1]);const u=1*(1+.2*i.roughness),f=1.5*(1+.22*i.roughness);n.push({op:\"move\",data:[t.x+D(u,i),t.y+D(u,i)]});let d=[h+D(u,i),r+D(u,i)];n.push({op:\"qcurveTo\",data:[o+D(u,i),l+D(u,i),d[0],d[1]]}),n.push({op:\"move\",data:[t.x+D(f,i),t.y+D(f,i)]}),d=[h+D(f,i),r+D(f,i)],n.push({op:\"qcurveTo\",data:[o+D(f,i),l+D(f,i),d[0],d[1]]}),t.setPosition(d[0],d[1]),t.quadReflectionPoint=[h+(h-o),r+(r-l)]}break}case\"A\":case\"a\":{const s=\"a\"===e.key;if(e.data.length>=7){const a=+e.data[0],h=+e.data[1],r=+e.data[2],o=+e.data[3],l=+e.data[4];let p=+e.data[5],u=+e.data[6];if(s&&(p+=t.x,u+=t.y),p===t.x&&u===t.y)break;if(0===a||0===h)n=n.concat(G(t.x,t.y,p,u,i)),t.setPosition(p,u);else for(let e=0;e<1;e++){const e=new c([t.x,t.y],[p,u],[a,h],r,!!o,!!l);let s=e.getNextSegment();for(;s;){const a=V(s.cp1[0],s.cp1[1],s.cp2[0],s.cp2[1],s.to[0],s.to[1],t,i);n=n.concat(a),s=e.getNextSegment()}}}break}}return n}var Q=Object.freeze({line:T,linearPath:L,polygon:C,rectangle:function(t,e,s,i,n){return C([[t,e],[t+s,e],[t+s,e+i],[t,e+i]],n)},curve:function(t,e){const s=U(t,1*(1+.2*e.roughness),e),i=U(t,1.5*(1+.22*e.roughness),e);return{type:\"path\",ops:s.concat(i)}},ellipse:R,arc:function(t,e,s,i,n,a,h,r,o){const l=t,c=e;let p=Math.abs(s/2),u=Math.abs(i/2);p+=D(.01*p,o),u+=D(.01*u,o);let f=n,d=a;for(;f<0;)f+=2*Math.PI,d+=2*Math.PI;d-f>2*Math.PI&&(f=0,d=2*Math.PI);const g=2*Math.PI/o.curveStepCount,y=Math.min(g/2,(d-f)/2),M=X(y,l,c,p,u,f,d,1,o),w=X(y,l,c,p,u,f,d,1.5,o);let b=M.concat(w);return h&&(r?b=(b=b.concat(G(l,c,l+p*Math.cos(f),c+u*Math.sin(f),o))).concat(G(l,c,l+p*Math.cos(d),c+u*Math.sin(d),o)):(b.push({op:\"lineTo\",data:[l,c]}),b.push({op:\"lineTo\",data:[l+p*Math.cos(f),c+u*Math.sin(f)]}))),{type:\"path\",ops:b}},svgPath:function(t,e){t=(t||\"\").replace(/\\n/g,\" \").replace(/(-\\s)/g,\"-\").replace(\"/(ss)/g\",\" \");let s=new l(t);if(e.simplification){const t=new p(s.linearPoints,s.closed).fit(e.simplification);s=new l(t)}let i=[];const n=s.segments||[];for(let t=0;t<n.length;t++){const a=j(s,n[t],t>0?n[t-1]:null,e);a&&a.length&&(i=i.concat(a))}return{type:\"path\",ops:i}},solidFillPolygon:function(t,e){const s=[];if(t.length){const i=e.maxRandomnessOffset||0,n=t.length;if(n>2){s.push({op:\"move\",data:[t[0][0]+D(i,e),t[0][1]+D(i,e)]});for(let a=1;a<n;a++)s.push({op:\"lineTo\",data:[t[a][0]+D(i,e),t[a][1]+D(i,e)]})}}return{type:\"fillPath\",ops:s}},patternFillPolygon:z,patternFillEllipse:function(t,e,s,i,n){return E(n,O).fillEllipse(t,e,s,i,n)},patternFillArc:function(t,e,s,i,n,a,h){const r=E(h,O).fillArc(t,e,s,i,n,a,h);if(r)return r;const o=t,l=e;let c=Math.abs(s/2),p=Math.abs(i/2);c+=D(.01*c,h),p+=D(.01*p,h);let u=n,f=a;for(;u<0;)u+=2*Math.PI,f+=2*Math.PI;f-u>2*Math.PI&&(u=0,f=2*Math.PI);const d=(f-u)/h.curveStepCount,g=[];for(let t=u;t<=f;t+=d)g.push([o+c*Math.cos(t),l+p*Math.sin(t)]);return g.push([o+c*Math.cos(f),l+p*Math.sin(f)]),g.push([o,l]),z(g,h)},randOffset:N,randOffsetWithRange:W,doubleLineOps:I});class Z extends e{constructor(t,e){super(t,e),t&&t.workerURL?this.renderer=function(t){let e,h;if(\"function\"==typeof t){const s=Function.prototype.toString;e=h=URL.createObjectURL(new Blob([`${s.call(n)}\\n(${s.call(a)})(${s.call(t)})`]))}else\"string\"==typeof t&&(e=t,0===t.indexOf(\"blob:\")&&(h=e));if(e){let t=new Worker(e);return h&&(t.oURL=h),s(new i(t))}throw\"Workly only supports functions, classes, urls\"}(t.workerURL):this.renderer=Q}async line(t,e,s,i,n){const a=this._options(n);return this._drawable(\"line\",[await this.renderer.line(t,e,s,i,a)],a)}async rectangle(t,e,s,i,n){const a=this._options(n),h=[];if(a.fill){const n=[[t,e],[t+s,e],[t+s,e+i],[t,e+i]];\"solid\"===a.fillStyle?h.push(await this.renderer.solidFillPolygon(n,a)):h.push(await this.renderer.patternFillPolygon(n,a))}return h.push(await this.renderer.rectangle(t,e,s,i,a)),this._drawable(\"rectangle\",h,a)}async ellipse(t,e,s,i,n){const a=this._options(n),h=[];if(a.fill)if(\"solid\"===a.fillStyle){const n=await this.renderer.ellipse(t,e,s,i,a);n.type=\"fillPath\",h.push(n)}else h.push(await this.renderer.patternFillEllipse(t,e,s,i,a));return h.push(await this.renderer.ellipse(t,e,s,i,a)),this._drawable(\"ellipse\",h,a)}async circle(t,e,s,i){const n=await this.ellipse(t,e,s,s,i);return n.shape=\"circle\",n}async linearPath(t,e){const s=this._options(e);return this._drawable(\"linearPath\",[await this.renderer.linearPath(t,!1,s)],s)}async arc(t,e,s,i,n,a,h=!1,r){const o=this._options(r),l=[];if(h&&o.fill)if(\"solid\"===o.fillStyle){const h=await this.renderer.arc(t,e,s,i,n,a,!0,!1,o);h.type=\"fillPath\",l.push(h)}else l.push(await this.renderer.patternFillArc(t,e,s,i,n,a,o));return l.push(await this.renderer.arc(t,e,s,i,n,a,h,!0,o)),this._drawable(\"arc\",l,o)}async curve(t,e){const s=this._options(e);return this._drawable(\"curve\",[await this.renderer.curve(t,s)],s)}async polygon(t,e){const s=this._options(e),i=[];if(s.fill)if(\"solid\"===s.fillStyle)i.push(await this.renderer.solidFillPolygon(t,s));else{const e=this.computePolygonSize(t),n=[[0,0],[e[0],0],[e[0],e[1]],[0,e[1]]],a=await this.renderer.patternFillPolygon(n,s);a.type=\"path2Dpattern\",a.size=e,a.path=this.polygonPath(t),i.push(a)}return i.push(await this.renderer.linearPath(t,!0,s)),this._drawable(\"polygon\",i,s)}async path(t,e){const s=this._options(e),i=[];if(!t)return this._drawable(\"path\",i,s);if(s.fill)if(\"solid\"===s.fillStyle){const e={type:\"path2Dfill\",path:t,ops:[]};i.push(e)}else{const e=this.computePathSize(t),n=[[0,0],[e[0],0],[e[0],e[1]],[0,e[1]]],a=await this.renderer.patternFillPolygon(n,s);a.type=\"path2Dpattern\",a.size=e,a.path=t,i.push(a)}return i.push(await this.renderer.svgPath(t,s)),this._drawable(\"path\",i,s)}}const H=\"undefined\"!=typeof document;class Y{constructor(t){this.canvas=t,this.ctx=this.canvas.getContext(\"2d\")}draw(t){const e=t.sets||[],s=t.options||this.getDefaultOptions(),i=this.ctx;for(const t of e)switch(t.type){case\"path\":i.save(),i.strokeStyle=s.stroke,i.lineWidth=s.strokeWidth,this._drawToContext(i,t),i.restore();break;case\"fillPath\":i.save(),i.fillStyle=s.fill||\"\",this._drawToContext(i,t),i.restore();break;case\"fillSketch\":this.fillSketch(i,t,s);break;case\"path2Dfill\":{this.ctx.save(),this.ctx.fillStyle=s.fill||\"\";const e=new Path2D(t.path);this.ctx.fill(e),this.ctx.restore();break}case\"path2Dpattern\":{const e=this.canvas.ownerDocument||H&&document;if(e){const i=t.size,n=e.createElement(\"canvas\"),a=n.getContext(\"2d\"),h=this.computeBBox(t.path);h&&(h.width||h.height)?(n.width=this.canvas.width,n.height=this.canvas.height,a.translate(h.x||0,h.y||0)):(n.width=i[0],n.height=i[1]),this.fillSketch(a,t,s),this.ctx.save(),this.ctx.fillStyle=this.ctx.createPattern(n,\"repeat\");const r=new Path2D(t.path);this.ctx.fill(r),this.ctx.restore()}else console.error(\"Cannot render path2Dpattern. No defs/document defined.\");break}}}computeBBox(t){if(H)try{const e=\"http://www.w3.org/2000/svg\",s=document.createElementNS(e,\"svg\");s.setAttribute(\"width\",\"0\"),s.setAttribute(\"height\",\"0\");const i=self.document.createElementNS(e,\"path\");i.setAttribute(\"d\",t),s.appendChild(i),document.body.appendChild(s);const n=i.getBBox();return document.body.removeChild(s),n}catch(t){}return null}fillSketch(t,e,s){let i=s.fillWeight;i<0&&(i=s.strokeWidth/2),t.save(),t.strokeStyle=s.fill||\"\",t.lineWidth=i,this._drawToContext(t,e),t.restore()}_drawToContext(t,e){t.beginPath();for(const s of e.ops){const e=s.data;switch(s.op){case\"move\":t.moveTo(e[0],e[1]);break;case\"bcurveTo\":t.bezierCurveTo(e[0],e[1],e[2],e[3],e[4],e[5]);break;case\"qcurveTo\":t.quadraticCurveTo(e[0],e[1],e[2],e[3]);break;case\"lineTo\":t.lineTo(e[0],e[1])}}\"fillPath\"===e.type?t.fill():t.stroke()}}class J extends Y{constructor(t,e){super(t),this.gen=new Z(e||null,this.canvas)}get generator(){return this.gen}getDefaultOptions(){return this.gen.defaultOptions}async line(t,e,s,i,n){const a=await this.gen.line(t,e,s,i,n);return this.draw(a),a}async rectangle(t,e,s,i,n){const a=await this.gen.rectangle(t,e,s,i,n);return this.draw(a),a}async ellipse(t,e,s,i,n){const a=await this.gen.ellipse(t,e,s,i,n);return this.draw(a),a}async circle(t,e,s,i){const n=await this.gen.circle(t,e,s,i);return this.draw(n),n}async linearPath(t,e){const s=await this.gen.linearPath(t,e);return this.draw(s),s}async polygon(t,e){const s=await this.gen.polygon(t,e);return this.draw(s),s}async arc(t,e,s,i,n,a,h=!1,r){const o=await this.gen.arc(t,e,s,i,n,a,h,r);return this.draw(o),o}async curve(t,e){const s=await this.gen.curve(t,e);return this.draw(s),s}async path(t,e){const s=await this.gen.path(t,e);return this.draw(s),s}}const K=\"undefined\"!=typeof document;class tt{constructor(t){this.svg=t}get defs(){const t=this.svg.ownerDocument||K&&document;if(t&&!this._defs){const e=t.createElementNS(\"http://www.w3.org/2000/svg\",\"defs\");this.svg.firstChild?this.svg.insertBefore(e,this.svg.firstChild):this.svg.appendChild(e),this._defs=e}return this._defs||null}draw(t){const e=t.sets||[],s=t.options||this.getDefaultOptions(),i=this.svg.ownerDocument||window.document,n=i.createElementNS(\"http://www.w3.org/2000/svg\",\"g\");for(const t of e){let e=null;switch(t.type){case\"path\":(e=i.createElementNS(\"http://www.w3.org/2000/svg\",\"path\")).setAttribute(\"d\",this.opsToPath(t)),e.style.stroke=s.stroke,e.style.strokeWidth=s.strokeWidth+\"\",e.style.fill=\"none\";break;case\"fillPath\":(e=i.createElementNS(\"http://www.w3.org/2000/svg\",\"path\")).setAttribute(\"d\",this.opsToPath(t)),e.style.stroke=\"none\",e.style.strokeWidth=\"0\",e.style.fill=s.fill||null;break;case\"fillSketch\":e=this.fillSketch(i,t,s);break;case\"path2Dfill\":(e=i.createElementNS(\"http://www.w3.org/2000/svg\",\"path\")).setAttribute(\"d\",t.path||\"\"),e.style.stroke=\"none\",e.style.strokeWidth=\"0\",e.style.fill=s.fill||null;break;case\"path2Dpattern\":if(this.defs){const n=t.size,a=i.createElementNS(\"http://www.w3.org/2000/svg\",\"pattern\"),h=`rough-${Math.floor(Math.random()*(Number.MAX_SAFE_INTEGER||999999))}`;a.setAttribute(\"id\",h),a.setAttribute(\"x\",\"0\"),a.setAttribute(\"y\",\"0\"),a.setAttribute(\"width\",\"1\"),a.setAttribute(\"height\",\"1\"),a.setAttribute(\"height\",\"1\"),a.setAttribute(\"viewBox\",`0 0 ${Math.round(n[0])} ${Math.round(n[1])}`),a.setAttribute(\"patternUnits\",\"objectBoundingBox\");const r=this.fillSketch(i,t,s);a.appendChild(r),this.defs.appendChild(a),(e=i.createElementNS(\"http://www.w3.org/2000/svg\",\"path\")).setAttribute(\"d\",t.path||\"\"),e.style.stroke=\"none\",e.style.strokeWidth=\"0\",e.style.fill=`url(#${h})`}else console.error(\"Cannot render path2Dpattern. No defs/document defined.\")}e&&n.appendChild(e)}return n}fillSketch(t,e,s){let i=s.fillWeight;i<0&&(i=s.strokeWidth/2);const n=t.createElementNS(\"http://www.w3.org/2000/svg\",\"path\");return n.setAttribute(\"d\",this.opsToPath(e)),n.style.stroke=s.fill||null,n.style.strokeWidth=i+\"\",n.style.fill=\"none\",n}}class et extends tt{constructor(t,e){super(t),this.gen=new Z(e||null,this.svg)}get generator(){return this.gen}getDefaultOptions(){return this.gen.defaultOptions}opsToPath(t){return this.gen.opsToPath(t)}async line(t,e,s,i,n){const a=await this.gen.line(t,e,s,i,n);return this.draw(a)}async rectangle(t,e,s,i,n){const a=await this.gen.rectangle(t,e,s,i,n);return this.draw(a)}async ellipse(t,e,s,i,n){const a=await this.gen.ellipse(t,e,s,i,n);return this.draw(a)}async circle(t,e,s,i){const n=await this.gen.circle(t,e,s,i);return this.draw(n)}async linearPath(t,e){const s=await this.gen.linearPath(t,e);return this.draw(s)}async polygon(t,e){const s=await this.gen.polygon(t,e);return this.draw(s)}async arc(t,e,s,i,n,a,h=!1,r){const o=await this.gen.arc(t,e,s,i,n,a,h,r);return this.draw(o)}async curve(t,e){const s=await this.gen.curve(t,e);return this.draw(s)}async path(t,e){const s=await this.gen.path(t,e);return this.draw(s)}}return{canvas:(t,e)=>new J(t,e),svg:(t,e)=>new et(t,e),generator:(t,e)=>new Z(t,e)}});\n","import interact from 'interactjs';\nimport rough from '../../node_modules/roughjs/dist/rough-async.umd';\nconst tiles = document.querySelectorAll('.mapTile');\nconst canvas = rough.canvas(document.getElementById('mapPort'), { workerURL: '../worker.js' });\nconst cell = { // .................>-The walls are represented in the order: [top, right, bottom, left]->\n  Nxxx: [1,0,0,0], xExx: [0,1,0,0], xxSx: [0,0,1,0], xxxW: [0,0,0,1], // /_______________<-Single walls-<\n  NExx: [1,1,0,0], NxxW: [1,0,0,1], xESx: [0,1,1,0], xxSW: [0,0,1,1], // /____________________<-Corners-<\n  NESx: [1,1,1,0], NExW: [1,1,0,1], NxSW: [1,0,1,1], xESW: [0,1,1,1], // /___________________<-DeadEnds-<\n  NxSx: [1,0,1,0], xExW: [0,1,0,1], NESW: [1,1,1,1], xxxx: [0,0,0,0], // /__<-Corridors, Block, & Empty-<\n};\nconst mapTemplate = [\n  [cell.xxxx,cell.NESx,cell.xxxx,cell.xExW,cell.xxxx,cell.NESW], // ///////////////////////////\n  [cell.NxSW,cell.xxxx,cell.NxSx,cell.xxxx,cell.NxSx,cell.NxSx], // This is where you can play with the map\n  [cell.xxxx,cell.xExW,cell.xxxx,cell.xExW,cell.xxxx,cell.NESW], // You define a square array of cell\n  [cell.xxxW,cell.xxxx,cell.NxSx,cell.xxxx,cell.NxSx,cell.NxSx], // definitions\n  [cell.xxxx,cell.xExW,cell.xxxx,cell.xESW,cell.NESW,cell.xxxW], //\n  [cell.xxxx,cell.xExW,cell.xxxx,cell.NExW,cell.NESW,cell.Nxxx], //\n];\nconst mapSize = 600,\n  borderWidth = 20,\n  portSize = mapSize + borderWidth,\n  cellWidth = mapSize/mapTemplate.length,\n  position = { x:0, y:0 };\ncanvas.rectangle(10, 10, portSize, portSize); // ................................................<-A simple border-<\n\nconst drawCell = function(xLocation, yLocation, cell) {\n  const\n    xCoordinateLow = borderWidth + (cellWidth * xLocation),\n    xCoordinateHigh = borderWidth + (cellWidth * xLocation) + cellWidth,\n    yCoordinateLow = borderWidth + (cellWidth * yLocation),\n    yCoordinateHigh = borderWidth + (cellWidth * yLocation) + cellWidth;\n  const lines = [\n    {p1: xCoordinateLow, p2: yCoordinateLow, p3: xCoordinateHigh, p4: yCoordinateLow}, // .............<-top-<\n    {p1: xCoordinateLow, p2: yCoordinateLow, p3: xCoordinateLow, p4: yCoordinateHigh}, // ...........<-right-<\n    {p1: xCoordinateLow, p2: yCoordinateHigh, p3: xCoordinateHigh, p4: yCoordinateHigh}, //.........<-bottom-<\n    {p1: xCoordinateHigh, p2: yCoordinateLow, p3: xCoordinateHigh, p4: yCoordinateHigh}, // ..........<-left-<\n  ];\n\n  const newTile = document.createElement(\"div\"),\n    tileContent = document.createTextNode(`${xLocation}:${yLocation} - ${cell}°Ð`),\n    parentPort = document.getElementById('mapDisplay');\n  newTile.appendChild(tileContent);\n  newTile.setAttribute(\"class\", \"mapTile draggable\");\n  newTile.setAttribute(\"id\", `${xLocation}-${yLocation}`);\n  newTile.setAttribute(\"style\", `height:${cellWidth}px; width:${cellWidth}px; top:${xCoordinateLow}px; left:${yCoordinateLow}px;`);\n  parentPort.append(newTile);\n\n  cell.forEach((wall, index) => {\n    if(wall === 1) {\n      return canvas.line(lines[index].p1, lines[index].p2, lines[index].p3, lines[index].p4)\n    }\n  })\n};\n\nmapTemplate.forEach((row, yIter) => {\n  row.forEach((cell, xIter) => {\n    drawCell(xIter, yIter, cell);\n  })\n});\n\ninteract('.draggable').draggable({\n  listeners: {\n    start (event) {\n      console.log(event.type, event.target)\n    },\n    move (event) {\n      position.x += event.dx;\n      position.y += event.dy;\n\n      event.target.style.transform = `translate(${position.x}px, ${position.y}px)`;\n    },\n  },\n  cursorChecker: (action, interatable, element, interacting) => {\n    switch (action.axis) {\n      case 'x': return 'ew-resize';\n      case 'y': return 'ns-resize';\n      default: return interacting ? 'grabbing' : 'grab'\n    }\n  }\n});\n"]}